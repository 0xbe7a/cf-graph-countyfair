{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "linux_aarch64": "linux_64",
   "linux_ppc64le": "linux_64",
   "osx_arm64": "osx_64"
  },
  "provider": {
   "linux_aarch64": "default",
   "linux_ppc64le": "azure",
   "win": "azure"
  }
 },
 "feedstock_name": "pyamrex",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "The Python binding pyAMReX bridges the worlds of block-structured codes and\ndata science: it provides zero-copy application GPU data access for AI/ML,\nin situ analysis, application coupling and enables rapid, massively\nparallel prototyping. pyAMReX enhances the Block-Structured AMR Software\nFramework AMReX and its applications.\nAMReX is a software framework containing all the functionality to write\nmassively parallel, block-structured adaptive mesh refinement (AMR)\napplications.\n",
   "dev_url": "https://github.com/AMReX-Codes/pyamrex",
   "doc_url": "https://pyamrex.readthedocs.io",
   "home": "https://pyamrex.readthedocs.io",
   "license": "BSD-3-Clause-LBNL",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "GPU-Enabled, Zero-Copy AMReX Python Bindings including AI/ML"
  },
  "build": {
   "number": "1"
  },
  "extra": {
   "recipe-maintainers": [
    "atmyers",
    "ax3l",
    "dpgrote",
    "RemiLehe",
    "roelof-groenewald",
    "WeiqunZhang",
    "atmyers",
    "ax3l",
    "dpgrote",
    "RemiLehe",
    "roelof-groenewald",
    "WeiqunZhang",
    "atmyers",
    "ax3l",
    "dpgrote",
    "RemiLehe",
    "roelof-groenewald",
    "WeiqunZhang",
    "atmyers",
    "ax3l",
    "dpgrote",
    "RemiLehe",
    "roelof-groenewald",
    "WeiqunZhang"
   ]
  },
  "package": {
   "name": "pyamrex",
   "version": "23.10"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "libgomp",
    "pkgconfig",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "libgomp",
    "pkgconfig",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "libgomp",
    "pkgconfig",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "libgomp",
    "pkgconfig"
   ],
   "host": [
    "amrex ==23.10",
    "numpy",
    "pip",
    "pybind11",
    "python",
    "setuptools",
    "wheel",
    "amrex ==23.10",
    "numpy",
    "pip",
    "pybind11",
    "python",
    "setuptools",
    "wheel",
    "amrex ==23.10",
    "numpy",
    "pip",
    "pybind11",
    "python",
    "setuptools",
    "wheel",
    "amrex ==23.10",
    "numpy",
    "pip",
    "pybind11",
    "python",
    "setuptools",
    "wheel"
   ],
   "run": [
    "amrex ==23.10",
    "numpy",
    "python",
    "amrex ==23.10",
    "numpy",
    "python",
    "amrex ==23.10",
    "numpy",
    "python",
    "amrex ==23.10",
    "numpy",
    "python"
   ]
  },
  "source": {
   "patches": [
    "203.patch",
    "203.patch",
    "203.patch",
    "203.patch"
   ],
   "sha256": "44dd3ab467260ea797dec4fcb939599fad811e8ac598bdc0ab05da24369606fa",
   "url": "https://github.com/AMReX-Codes/pyamrex/archive/refs/tags/23.10.tar.gz"
  },
  "test": {
   "imports": [
    "amrex",
    "amrex",
    "amrex",
    "amrex"
   ],
   "requires": [
    "pytest",
    "pytest",
    "pytest",
    "pytest"
   ],
   "source_files": [
    "tests/*",
    "tests/*",
    "tests/*",
    "tests/*"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "libgomp",
    "make",
    "pkgconfig"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "amrex",
    "numpy",
    "pip",
    "pybind11",
    "python",
    "setuptools",
    "wheel"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "amrex",
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pytest"
   ]
  }
 },
 "linux_aarch64_meta_yaml": {
  "about": {
   "description": "The Python binding pyAMReX bridges the worlds of block-structured codes and\ndata science: it provides zero-copy application GPU data access for AI/ML,\nin situ analysis, application coupling and enables rapid, massively\nparallel prototyping. pyAMReX enhances the Block-Structured AMR Software\nFramework AMReX and its applications.\nAMReX is a software framework containing all the functionality to write\nmassively parallel, block-structured adaptive mesh refinement (AMR)\napplications.\n",
   "dev_url": "https://github.com/AMReX-Codes/pyamrex",
   "doc_url": "https://pyamrex.readthedocs.io",
   "home": "https://pyamrex.readthedocs.io",
   "license": "BSD-3-Clause-LBNL",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "GPU-Enabled, Zero-Copy AMReX Python Bindings including AI/ML"
  },
  "build": {
   "number": "1"
  },
  "extra": {
   "recipe-maintainers": [
    "atmyers",
    "ax3l",
    "dpgrote",
    "RemiLehe",
    "roelof-groenewald",
    "WeiqunZhang",
    "atmyers",
    "ax3l",
    "dpgrote",
    "RemiLehe",
    "roelof-groenewald",
    "WeiqunZhang",
    "atmyers",
    "ax3l",
    "dpgrote",
    "RemiLehe",
    "roelof-groenewald",
    "WeiqunZhang",
    "atmyers",
    "ax3l",
    "dpgrote",
    "RemiLehe",
    "roelof-groenewald",
    "WeiqunZhang"
   ]
  },
  "package": {
   "name": "pyamrex",
   "version": "23.10"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "libgomp",
    "pkgconfig",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "libgomp",
    "pkgconfig",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "libgomp",
    "pkgconfig",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "libgomp",
    "pkgconfig"
   ],
   "host": [
    "amrex ==23.10",
    "numpy",
    "pip",
    "pybind11",
    "python",
    "setuptools",
    "wheel",
    "amrex ==23.10",
    "numpy",
    "pip",
    "pybind11",
    "python",
    "setuptools",
    "wheel",
    "amrex ==23.10",
    "numpy",
    "pip",
    "pybind11",
    "python",
    "setuptools",
    "wheel",
    "amrex ==23.10",
    "numpy",
    "pip",
    "pybind11",
    "python",
    "setuptools",
    "wheel"
   ],
   "run": [
    "amrex ==23.10",
    "numpy",
    "python",
    "amrex ==23.10",
    "numpy",
    "python",
    "amrex ==23.10",
    "numpy",
    "python",
    "amrex ==23.10",
    "numpy",
    "python"
   ]
  },
  "source": {
   "patches": [
    "203.patch",
    "203.patch",
    "203.patch",
    "203.patch"
   ],
   "sha256": "44dd3ab467260ea797dec4fcb939599fad811e8ac598bdc0ab05da24369606fa",
   "url": "https://github.com/AMReX-Codes/pyamrex/archive/refs/tags/23.10.tar.gz"
  },
  "test": {
   "imports": [
    "amrex",
    "amrex",
    "amrex",
    "amrex"
   ],
   "requires": [
    "pytest",
    "pytest",
    "pytest",
    "pytest"
   ],
   "source_files": [
    "tests/*",
    "tests/*",
    "tests/*",
    "tests/*"
   ]
  }
 },
 "linux_aarch64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "libgomp",
    "make",
    "pkgconfig"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "amrex",
    "numpy",
    "pip",
    "pybind11",
    "python",
    "setuptools",
    "wheel"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "amrex",
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pytest"
   ]
  }
 },
 "linux_ppc64le_meta_yaml": {
  "about": {
   "description": "The Python binding pyAMReX bridges the worlds of block-structured codes and\ndata science: it provides zero-copy application GPU data access for AI/ML,\nin situ analysis, application coupling and enables rapid, massively\nparallel prototyping. pyAMReX enhances the Block-Structured AMR Software\nFramework AMReX and its applications.\nAMReX is a software framework containing all the functionality to write\nmassively parallel, block-structured adaptive mesh refinement (AMR)\napplications.\n",
   "dev_url": "https://github.com/AMReX-Codes/pyamrex",
   "doc_url": "https://pyamrex.readthedocs.io",
   "home": "https://pyamrex.readthedocs.io",
   "license": "BSD-3-Clause-LBNL",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "GPU-Enabled, Zero-Copy AMReX Python Bindings including AI/ML"
  },
  "build": {
   "number": "1"
  },
  "extra": {
   "recipe-maintainers": [
    "atmyers",
    "ax3l",
    "dpgrote",
    "RemiLehe",
    "roelof-groenewald",
    "WeiqunZhang",
    "atmyers",
    "ax3l",
    "dpgrote",
    "RemiLehe",
    "roelof-groenewald",
    "WeiqunZhang",
    "atmyers",
    "ax3l",
    "dpgrote",
    "RemiLehe",
    "roelof-groenewald",
    "WeiqunZhang",
    "atmyers",
    "ax3l",
    "dpgrote",
    "RemiLehe",
    "roelof-groenewald",
    "WeiqunZhang"
   ]
  },
  "package": {
   "name": "pyamrex",
   "version": "23.10"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "libgomp",
    "pkgconfig",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "libgomp",
    "pkgconfig",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "libgomp",
    "pkgconfig",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "libgomp",
    "pkgconfig"
   ],
   "host": [
    "amrex ==23.10",
    "numpy",
    "pip",
    "pybind11",
    "python",
    "setuptools",
    "wheel",
    "amrex ==23.10",
    "numpy",
    "pip",
    "pybind11",
    "python",
    "setuptools",
    "wheel",
    "amrex ==23.10",
    "numpy",
    "pip",
    "pybind11",
    "python",
    "setuptools",
    "wheel",
    "amrex ==23.10",
    "numpy",
    "pip",
    "pybind11",
    "python",
    "setuptools",
    "wheel"
   ],
   "run": [
    "amrex ==23.10",
    "numpy",
    "python",
    "amrex ==23.10",
    "numpy",
    "python",
    "amrex ==23.10",
    "numpy",
    "python",
    "amrex ==23.10",
    "numpy",
    "python"
   ]
  },
  "source": {
   "patches": [
    "203.patch",
    "203.patch",
    "203.patch",
    "203.patch"
   ],
   "sha256": "44dd3ab467260ea797dec4fcb939599fad811e8ac598bdc0ab05da24369606fa",
   "url": "https://github.com/AMReX-Codes/pyamrex/archive/refs/tags/23.10.tar.gz"
  },
  "test": {
   "imports": [
    "amrex",
    "amrex",
    "amrex",
    "amrex"
   ],
   "requires": [
    "pytest",
    "pytest",
    "pytest",
    "pytest"
   ],
   "source_files": [
    "tests/*",
    "tests/*",
    "tests/*",
    "tests/*"
   ]
  }
 },
 "linux_ppc64le_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "libgomp",
    "make",
    "pkgconfig"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "amrex",
    "numpy",
    "pip",
    "pybind11",
    "python",
    "setuptools",
    "wheel"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "amrex",
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pytest"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "The Python binding pyAMReX bridges the worlds of block-structured codes and\ndata science: it provides zero-copy application GPU data access for AI/ML,\nin situ analysis, application coupling and enables rapid, massively\nparallel prototyping. pyAMReX enhances the Block-Structured AMR Software\nFramework AMReX and its applications.\nAMReX is a software framework containing all the functionality to write\nmassively parallel, block-structured adaptive mesh refinement (AMR)\napplications.\n",
   "dev_url": "https://github.com/AMReX-Codes/pyamrex",
   "doc_url": "https://pyamrex.readthedocs.io",
   "home": "https://pyamrex.readthedocs.io",
   "license": "BSD-3-Clause-LBNL",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "GPU-Enabled, Zero-Copy AMReX Python Bindings including AI/ML"
  },
  "build": {
   "number": "1"
  },
  "extra": {
   "recipe-maintainers": [
    "atmyers",
    "ax3l",
    "dpgrote",
    "RemiLehe",
    "roelof-groenewald",
    "WeiqunZhang",
    "atmyers",
    "ax3l",
    "dpgrote",
    "RemiLehe",
    "roelof-groenewald",
    "WeiqunZhang",
    "atmyers",
    "ax3l",
    "dpgrote",
    "RemiLehe",
    "roelof-groenewald",
    "WeiqunZhang",
    "atmyers",
    "ax3l",
    "dpgrote",
    "RemiLehe",
    "roelof-groenewald",
    "WeiqunZhang",
    "atmyers",
    "ax3l",
    "dpgrote",
    "RemiLehe",
    "roelof-groenewald",
    "WeiqunZhang",
    "atmyers",
    "ax3l",
    "dpgrote",
    "RemiLehe",
    "roelof-groenewald",
    "WeiqunZhang",
    "atmyers",
    "ax3l",
    "dpgrote",
    "RemiLehe",
    "roelof-groenewald",
    "WeiqunZhang",
    "atmyers",
    "ax3l",
    "dpgrote",
    "RemiLehe",
    "roelof-groenewald",
    "WeiqunZhang",
    "atmyers",
    "ax3l",
    "dpgrote",
    "RemiLehe",
    "roelof-groenewald",
    "WeiqunZhang",
    "atmyers",
    "ax3l",
    "dpgrote",
    "RemiLehe",
    "roelof-groenewald",
    "WeiqunZhang",
    "atmyers",
    "ax3l",
    "dpgrote",
    "RemiLehe",
    "roelof-groenewald",
    "WeiqunZhang",
    "atmyers",
    "ax3l",
    "dpgrote",
    "RemiLehe",
    "roelof-groenewald",
    "WeiqunZhang",
    "atmyers",
    "ax3l",
    "dpgrote",
    "RemiLehe",
    "roelof-groenewald",
    "WeiqunZhang",
    "atmyers",
    "ax3l",
    "dpgrote",
    "RemiLehe",
    "roelof-groenewald",
    "WeiqunZhang",
    "atmyers",
    "ax3l",
    "dpgrote",
    "RemiLehe",
    "roelof-groenewald",
    "WeiqunZhang",
    "atmyers",
    "ax3l",
    "dpgrote",
    "RemiLehe",
    "roelof-groenewald",
    "WeiqunZhang",
    "atmyers",
    "ax3l",
    "dpgrote",
    "RemiLehe",
    "roelof-groenewald",
    "WeiqunZhang",
    "atmyers",
    "ax3l",
    "dpgrote",
    "RemiLehe",
    "roelof-groenewald",
    "WeiqunZhang",
    "atmyers",
    "ax3l",
    "dpgrote",
    "RemiLehe",
    "roelof-groenewald",
    "WeiqunZhang",
    "atmyers",
    "ax3l",
    "dpgrote",
    "RemiLehe",
    "roelof-groenewald",
    "WeiqunZhang",
    "atmyers",
    "ax3l",
    "dpgrote",
    "RemiLehe",
    "roelof-groenewald",
    "WeiqunZhang",
    "atmyers",
    "ax3l",
    "dpgrote",
    "RemiLehe",
    "roelof-groenewald",
    "WeiqunZhang",
    "atmyers",
    "ax3l",
    "dpgrote",
    "RemiLehe",
    "roelof-groenewald",
    "WeiqunZhang",
    "atmyers",
    "ax3l",
    "dpgrote",
    "RemiLehe",
    "roelof-groenewald",
    "WeiqunZhang"
   ]
  },
  "package": {
   "name": "pyamrex",
   "version": "23.10"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "libgomp",
    "pkgconfig",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "libgomp",
    "pkgconfig",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "libgomp",
    "pkgconfig",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "libgomp",
    "pkgconfig",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "libgomp",
    "pkgconfig",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "libgomp",
    "pkgconfig",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "libgomp",
    "pkgconfig",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "libgomp",
    "pkgconfig",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "libgomp",
    "pkgconfig",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "libgomp",
    "pkgconfig",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "libgomp",
    "pkgconfig",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "libgomp",
    "pkgconfig",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "llvm-openmp",
    "pkgconfig",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "llvm-openmp",
    "pkgconfig",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "llvm-openmp",
    "pkgconfig",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "llvm-openmp",
    "pkgconfig",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "llvm-openmp",
    "pkgconfig",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "llvm-openmp",
    "pkgconfig",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "llvm-openmp",
    "pkgconfig",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "llvm-openmp",
    "pkgconfig",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "clang",
    "cmake",
    "lld",
    "ninja",
    "llvm-openmp",
    "pkgconfig",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "clang",
    "cmake",
    "lld",
    "ninja",
    "llvm-openmp",
    "pkgconfig",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "clang",
    "cmake",
    "lld",
    "ninja",
    "llvm-openmp",
    "pkgconfig",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "clang",
    "cmake",
    "lld",
    "ninja",
    "llvm-openmp",
    "pkgconfig"
   ],
   "host": [
    "amrex ==23.10",
    "numpy",
    "pip",
    "pybind11",
    "python",
    "setuptools",
    "wheel",
    "amrex ==23.10",
    "numpy",
    "pip",
    "pybind11",
    "python",
    "setuptools",
    "wheel",
    "amrex ==23.10",
    "numpy",
    "pip",
    "pybind11",
    "python",
    "setuptools",
    "wheel",
    "amrex ==23.10",
    "numpy",
    "pip",
    "pybind11",
    "python",
    "setuptools",
    "wheel",
    "amrex ==23.10",
    "numpy",
    "pip",
    "pybind11",
    "python",
    "setuptools",
    "wheel",
    "amrex ==23.10",
    "numpy",
    "pip",
    "pybind11",
    "python",
    "setuptools",
    "wheel",
    "amrex ==23.10",
    "numpy",
    "pip",
    "pybind11",
    "python",
    "setuptools",
    "wheel",
    "amrex ==23.10",
    "numpy",
    "pip",
    "pybind11",
    "python",
    "setuptools",
    "wheel",
    "amrex ==23.10",
    "numpy",
    "pip",
    "pybind11",
    "python",
    "setuptools",
    "wheel",
    "amrex ==23.10",
    "numpy",
    "pip",
    "pybind11",
    "python",
    "setuptools",
    "wheel",
    "amrex ==23.10",
    "numpy",
    "pip",
    "pybind11",
    "python",
    "setuptools",
    "wheel",
    "amrex ==23.10",
    "numpy",
    "pip",
    "pybind11",
    "python",
    "setuptools",
    "wheel",
    "amrex ==23.10",
    "numpy",
    "pip",
    "pybind11",
    "python",
    "setuptools",
    "wheel",
    "amrex ==23.10",
    "numpy",
    "pip",
    "pybind11",
    "python",
    "setuptools",
    "wheel",
    "amrex ==23.10",
    "numpy",
    "pip",
    "pybind11",
    "python",
    "setuptools",
    "wheel",
    "amrex ==23.10",
    "numpy",
    "pip",
    "pybind11",
    "python",
    "setuptools",
    "wheel",
    "amrex ==23.10",
    "numpy",
    "pip",
    "pybind11",
    "python",
    "setuptools",
    "wheel",
    "amrex ==23.10",
    "numpy",
    "pip",
    "pybind11",
    "python",
    "setuptools",
    "wheel",
    "amrex ==23.10",
    "numpy",
    "pip",
    "pybind11",
    "python",
    "setuptools",
    "wheel",
    "amrex ==23.10",
    "numpy",
    "pip",
    "pybind11",
    "python",
    "setuptools",
    "wheel",
    "amrex ==23.10",
    "numpy",
    "pip",
    "pybind11",
    "python",
    "setuptools",
    "wheel",
    "amrex ==23.10",
    "numpy",
    "pip",
    "pybind11",
    "python",
    "setuptools",
    "wheel",
    "amrex ==23.10",
    "numpy",
    "pip",
    "pybind11",
    "python",
    "setuptools",
    "wheel",
    "amrex ==23.10",
    "numpy",
    "pip",
    "pybind11",
    "python",
    "setuptools",
    "wheel"
   ],
   "run": [
    "amrex ==23.10",
    "numpy",
    "python",
    "amrex ==23.10",
    "numpy",
    "python",
    "amrex ==23.10",
    "numpy",
    "python",
    "amrex ==23.10",
    "numpy",
    "python",
    "amrex ==23.10",
    "numpy",
    "python",
    "amrex ==23.10",
    "numpy",
    "python",
    "amrex ==23.10",
    "numpy",
    "python",
    "amrex ==23.10",
    "numpy",
    "python",
    "amrex ==23.10",
    "numpy",
    "python",
    "amrex ==23.10",
    "numpy",
    "python",
    "amrex ==23.10",
    "numpy",
    "python",
    "amrex ==23.10",
    "numpy",
    "python",
    "amrex ==23.10",
    "numpy",
    "python",
    "libcxx",
    "amrex ==23.10",
    "numpy",
    "python",
    "libcxx",
    "amrex ==23.10",
    "numpy",
    "python",
    "libcxx",
    "amrex ==23.10",
    "numpy",
    "python",
    "libcxx",
    "amrex ==23.10",
    "numpy",
    "python",
    "libcxx",
    "amrex ==23.10",
    "numpy",
    "python",
    "libcxx",
    "amrex ==23.10",
    "numpy",
    "python",
    "libcxx",
    "amrex ==23.10",
    "numpy",
    "python",
    "libcxx",
    "amrex ==23.10",
    "numpy",
    "python",
    "amrex ==23.10",
    "numpy",
    "python",
    "amrex ==23.10",
    "numpy",
    "python",
    "amrex ==23.10",
    "numpy",
    "python"
   ]
  },
  "source": {
   "patches": [
    "203.patch",
    "203.patch",
    "203.patch",
    "203.patch",
    "203.patch",
    "203.patch",
    "203.patch",
    "203.patch",
    "203.patch",
    "203.patch",
    "203.patch",
    "203.patch",
    "203.patch",
    "203.patch",
    "203.patch",
    "203.patch",
    "203.patch",
    "203.patch",
    "203.patch",
    "203.patch",
    "203.patch",
    "203.patch",
    "203.patch",
    "203.patch"
   ],
   "sha256": "44dd3ab467260ea797dec4fcb939599fad811e8ac598bdc0ab05da24369606fa",
   "url": "https://github.com/AMReX-Codes/pyamrex/archive/refs/tags/23.10.tar.gz"
  },
  "test": {
   "imports": [
    "amrex",
    "amrex",
    "amrex",
    "amrex",
    "amrex",
    "amrex",
    "amrex",
    "amrex",
    "amrex",
    "amrex",
    "amrex",
    "amrex",
    "amrex",
    "amrex",
    "amrex",
    "amrex",
    "amrex",
    "amrex",
    "amrex",
    "amrex",
    "amrex",
    "amrex",
    "amrex",
    "amrex"
   ],
   "requires": [
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest",
    "pytest"
   ],
   "source_files": [
    "tests/*",
    "tests/*",
    "tests/*",
    "tests/*",
    "tests/*",
    "tests/*",
    "tests/*",
    "tests/*",
    "tests/*",
    "tests/*",
    "tests/*",
    "tests/*",
    "tests/*",
    "tests/*",
    "tests/*",
    "tests/*",
    "tests/*",
    "tests/*",
    "tests/*",
    "tests/*",
    "tests/*",
    "tests/*",
    "tests/*",
    "tests/*"
   ]
  }
 },
 "name": "pyamrex",
 "osx_64_meta_yaml": {
  "about": {
   "description": "The Python binding pyAMReX bridges the worlds of block-structured codes and\ndata science: it provides zero-copy application GPU data access for AI/ML,\nin situ analysis, application coupling and enables rapid, massively\nparallel prototyping. pyAMReX enhances the Block-Structured AMR Software\nFramework AMReX and its applications.\nAMReX is a software framework containing all the functionality to write\nmassively parallel, block-structured adaptive mesh refinement (AMR)\napplications.\n",
   "dev_url": "https://github.com/AMReX-Codes/pyamrex",
   "doc_url": "https://pyamrex.readthedocs.io",
   "home": "https://pyamrex.readthedocs.io",
   "license": "BSD-3-Clause-LBNL",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "GPU-Enabled, Zero-Copy AMReX Python Bindings including AI/ML"
  },
  "build": {
   "number": "1"
  },
  "extra": {
   "recipe-maintainers": [
    "atmyers",
    "ax3l",
    "dpgrote",
    "RemiLehe",
    "roelof-groenewald",
    "WeiqunZhang",
    "atmyers",
    "ax3l",
    "dpgrote",
    "RemiLehe",
    "roelof-groenewald",
    "WeiqunZhang",
    "atmyers",
    "ax3l",
    "dpgrote",
    "RemiLehe",
    "roelof-groenewald",
    "WeiqunZhang",
    "atmyers",
    "ax3l",
    "dpgrote",
    "RemiLehe",
    "roelof-groenewald",
    "WeiqunZhang"
   ]
  },
  "package": {
   "name": "pyamrex",
   "version": "23.10"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "llvm-openmp",
    "pkgconfig",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "llvm-openmp",
    "pkgconfig",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "llvm-openmp",
    "pkgconfig",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "llvm-openmp",
    "pkgconfig"
   ],
   "host": [
    "amrex ==23.10",
    "numpy",
    "pip",
    "pybind11",
    "python",
    "setuptools",
    "wheel",
    "amrex ==23.10",
    "numpy",
    "pip",
    "pybind11",
    "python",
    "setuptools",
    "wheel",
    "amrex ==23.10",
    "numpy",
    "pip",
    "pybind11",
    "python",
    "setuptools",
    "wheel",
    "amrex ==23.10",
    "numpy",
    "pip",
    "pybind11",
    "python",
    "setuptools",
    "wheel"
   ],
   "run": [
    "amrex ==23.10",
    "numpy",
    "python",
    "libcxx",
    "amrex ==23.10",
    "numpy",
    "python",
    "libcxx",
    "amrex ==23.10",
    "numpy",
    "python",
    "libcxx",
    "amrex ==23.10",
    "numpy",
    "python",
    "libcxx"
   ]
  },
  "source": {
   "patches": [
    "203.patch",
    "203.patch",
    "203.patch",
    "203.patch"
   ],
   "sha256": "44dd3ab467260ea797dec4fcb939599fad811e8ac598bdc0ab05da24369606fa",
   "url": "https://github.com/AMReX-Codes/pyamrex/archive/refs/tags/23.10.tar.gz"
  },
  "test": {
   "imports": [
    "amrex",
    "amrex",
    "amrex",
    "amrex"
   ],
   "requires": [
    "pytest",
    "pytest",
    "pytest",
    "pytest"
   ],
   "source_files": [
    "tests/*",
    "tests/*",
    "tests/*",
    "tests/*"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "llvm-openmp",
    "make",
    "pkgconfig"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "amrex",
    "numpy",
    "pip",
    "pybind11",
    "python",
    "setuptools",
    "wheel"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "amrex",
    "libcxx",
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pytest"
   ]
  }
 },
 "osx_arm64_meta_yaml": {
  "about": {
   "description": "The Python binding pyAMReX bridges the worlds of block-structured codes and\ndata science: it provides zero-copy application GPU data access for AI/ML,\nin situ analysis, application coupling and enables rapid, massively\nparallel prototyping. pyAMReX enhances the Block-Structured AMR Software\nFramework AMReX and its applications.\nAMReX is a software framework containing all the functionality to write\nmassively parallel, block-structured adaptive mesh refinement (AMR)\napplications.\n",
   "dev_url": "https://github.com/AMReX-Codes/pyamrex",
   "doc_url": "https://pyamrex.readthedocs.io",
   "home": "https://pyamrex.readthedocs.io",
   "license": "BSD-3-Clause-LBNL",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "GPU-Enabled, Zero-Copy AMReX Python Bindings including AI/ML"
  },
  "build": {
   "number": "1"
  },
  "extra": {
   "recipe-maintainers": [
    "atmyers",
    "ax3l",
    "dpgrote",
    "RemiLehe",
    "roelof-groenewald",
    "WeiqunZhang",
    "atmyers",
    "ax3l",
    "dpgrote",
    "RemiLehe",
    "roelof-groenewald",
    "WeiqunZhang",
    "atmyers",
    "ax3l",
    "dpgrote",
    "RemiLehe",
    "roelof-groenewald",
    "WeiqunZhang",
    "atmyers",
    "ax3l",
    "dpgrote",
    "RemiLehe",
    "roelof-groenewald",
    "WeiqunZhang"
   ]
  },
  "package": {
   "name": "pyamrex",
   "version": "23.10"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "llvm-openmp",
    "pkgconfig",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "llvm-openmp",
    "pkgconfig",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "llvm-openmp",
    "pkgconfig",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "llvm-openmp",
    "pkgconfig"
   ],
   "host": [
    "amrex ==23.10",
    "numpy",
    "pip",
    "pybind11",
    "python",
    "setuptools",
    "wheel",
    "amrex ==23.10",
    "numpy",
    "pip",
    "pybind11",
    "python",
    "setuptools",
    "wheel",
    "amrex ==23.10",
    "numpy",
    "pip",
    "pybind11",
    "python",
    "setuptools",
    "wheel",
    "amrex ==23.10",
    "numpy",
    "pip",
    "pybind11",
    "python",
    "setuptools",
    "wheel"
   ],
   "run": [
    "amrex ==23.10",
    "numpy",
    "python",
    "libcxx",
    "amrex ==23.10",
    "numpy",
    "python",
    "libcxx",
    "amrex ==23.10",
    "numpy",
    "python",
    "libcxx",
    "amrex ==23.10",
    "numpy",
    "python",
    "libcxx"
   ]
  },
  "source": {
   "patches": [
    "203.patch",
    "203.patch",
    "203.patch",
    "203.patch"
   ],
   "sha256": "44dd3ab467260ea797dec4fcb939599fad811e8ac598bdc0ab05da24369606fa",
   "url": "https://github.com/AMReX-Codes/pyamrex/archive/refs/tags/23.10.tar.gz"
  },
  "test": {
   "imports": [
    "amrex",
    "amrex",
    "amrex",
    "amrex"
   ],
   "requires": [
    "pytest",
    "pytest",
    "pytest",
    "pytest"
   ],
   "source_files": [
    "tests/*",
    "tests/*",
    "tests/*",
    "tests/*"
   ]
  }
 },
 "osx_arm64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "llvm-openmp",
    "make",
    "pkgconfig"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "amrex",
    "numpy",
    "pip",
    "pybind11",
    "python",
    "setuptools",
    "wheel"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "amrex",
    "libcxx",
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pytest"
   ]
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "pyamrex"
  ]
 },
 "parsing_error": false,
 "platforms": [
  "linux_64",
  "linux_aarch64",
  "linux_ppc64le",
  "osx_64",
  "osx_arm64",
  "win_64"
 ],
 "pr_info": {
  "__lazy_json__": "pr_info/pyamrex.json"
 },
 "raw_meta_yaml": "{% set name = \"pyamrex\" %}\n{% set version = \"23.10\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/AMReX-Codes/pyamrex/archive/refs/tags/{{ version }}.tar.gz\n  sha256: 44dd3ab467260ea797dec4fcb939599fad811e8ac598bdc0ab05da24369606fa\n  patches:\n    # Adds pip_install_nodeps target, part of 23.11+\n    #   https://github.com/AMReX-Codes/pyamrex/pull/203\n    - 203.patch\n\nbuild:\n  number: 1\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - clang         # [win]\n    - cmake\n    - lld           # [win]\n    - make          # [unix]\n    - ninja         # [win]\n    - libgomp       # [linux]\n    - llvm-openmp   # [osx or win]\n    - pkgconfig\n    - python                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n    - pybind11                               # [build_platform != target_platform]\n  host:\n    - amrex =={{ version }}\n    - numpy\n    - pip\n    - pybind11\n    - python\n    - setuptools\n    - wheel\n  run:\n    - amrex =={{ version }}\n    - {{ pin_compatible('numpy') }}\n    - python\n    - libcxx  # [osx]\n\ntest:\n  requires:\n    - pytest\n  imports:\n    - amrex\n  source_files:\n    - tests/*\n\nabout:\n  home: https://pyamrex.readthedocs.io\n  license: BSD-3-Clause-LBNL\n  license_family: BSD\n  license_file: LICENSE\n  summary: GPU-Enabled, Zero-Copy AMReX Python Bindings including AI/ML\n\n  description: |\n    The Python binding pyAMReX bridges the worlds of block-structured codes and\n    data science: it provides zero-copy application GPU data access for AI/ML,\n    in situ analysis, application coupling and enables rapid, massively\n    parallel prototyping. pyAMReX enhances the Block-Structured AMR Software\n    Framework AMReX and its applications.\n    AMReX is a software framework containing all the functionality to write\n    massively parallel, block-structured adaptive mesh refinement (AMR)\n    applications.\n\n  doc_url: https://pyamrex.readthedocs.io\n  dev_url: https://github.com/AMReX-Codes/pyamrex\n\nextra:\n  recipe-maintainers:\n    - atmyers\n    - ax3l\n    - dpgrote\n    - RemiLehe\n    - roelof-groenewald\n    - WeiqunZhang\n",
 "req": {
  "__set__": true,
  "elements": [
   "amrex",
   "c_compiler_stub",
   "clang",
   "cmake",
   "cxx_compiler_stub",
   "libcxx",
   "libgomp",
   "lld",
   "llvm-openmp",
   "make",
   "ninja",
   "numpy",
   "pip",
   "pkgconfig",
   "pybind11",
   "python",
   "setuptools",
   "wheel"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "clang",
    "cmake",
    "cxx_compiler_stub",
    "libgomp",
    "lld",
    "llvm-openmp",
    "make",
    "ninja",
    "pkgconfig"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "amrex",
    "c_compiler_stub",
    "ctng-compilers",
    "cxx_compiler_stub",
    "numpy",
    "openmp",
    "pip",
    "pybind11",
    "python",
    "setuptools",
    "wheel"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "amrex",
    "c_compiler_stub",
    "ctng-compilers",
    "cxx_compiler_stub",
    "libcxx",
    "numpy",
    "openmp",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pytest"
   ]
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "clang",
    "cmake",
    "cxx_compiler_stub",
    "libgomp",
    "lld",
    "llvm-openmp",
    "make",
    "ninja",
    "pkgconfig"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "amrex ==23.10",
    "numpy",
    "pip",
    "pybind11",
    "python",
    "setuptools",
    "wheel"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "amrex ==23.10",
    "libcxx",
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pytest"
   ]
  }
 },
 "url": "https://github.com/AMReX-Codes/pyamrex/archive/refs/tags/23.10.tar.gz",
 "version": "23.10",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/pyamrex.json"
 },
 "win_64_meta_yaml": {
  "about": {
   "description": "The Python binding pyAMReX bridges the worlds of block-structured codes and\ndata science: it provides zero-copy application GPU data access for AI/ML,\nin situ analysis, application coupling and enables rapid, massively\nparallel prototyping. pyAMReX enhances the Block-Structured AMR Software\nFramework AMReX and its applications.\nAMReX is a software framework containing all the functionality to write\nmassively parallel, block-structured adaptive mesh refinement (AMR)\napplications.\n",
   "dev_url": "https://github.com/AMReX-Codes/pyamrex",
   "doc_url": "https://pyamrex.readthedocs.io",
   "home": "https://pyamrex.readthedocs.io",
   "license": "BSD-3-Clause-LBNL",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "GPU-Enabled, Zero-Copy AMReX Python Bindings including AI/ML"
  },
  "build": {
   "number": "1"
  },
  "extra": {
   "recipe-maintainers": [
    "atmyers",
    "ax3l",
    "dpgrote",
    "RemiLehe",
    "roelof-groenewald",
    "WeiqunZhang",
    "atmyers",
    "ax3l",
    "dpgrote",
    "RemiLehe",
    "roelof-groenewald",
    "WeiqunZhang",
    "atmyers",
    "ax3l",
    "dpgrote",
    "RemiLehe",
    "roelof-groenewald",
    "WeiqunZhang",
    "atmyers",
    "ax3l",
    "dpgrote",
    "RemiLehe",
    "roelof-groenewald",
    "WeiqunZhang"
   ]
  },
  "package": {
   "name": "pyamrex",
   "version": "23.10"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "clang",
    "cmake",
    "lld",
    "ninja",
    "llvm-openmp",
    "pkgconfig",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "clang",
    "cmake",
    "lld",
    "ninja",
    "llvm-openmp",
    "pkgconfig",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "clang",
    "cmake",
    "lld",
    "ninja",
    "llvm-openmp",
    "pkgconfig",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "clang",
    "cmake",
    "lld",
    "ninja",
    "llvm-openmp",
    "pkgconfig"
   ],
   "host": [
    "amrex ==23.10",
    "numpy",
    "pip",
    "pybind11",
    "python",
    "setuptools",
    "wheel",
    "amrex ==23.10",
    "numpy",
    "pip",
    "pybind11",
    "python",
    "setuptools",
    "wheel",
    "amrex ==23.10",
    "numpy",
    "pip",
    "pybind11",
    "python",
    "setuptools",
    "wheel",
    "amrex ==23.10",
    "numpy",
    "pip",
    "pybind11",
    "python",
    "setuptools",
    "wheel"
   ],
   "run": [
    "amrex ==23.10",
    "numpy",
    "python",
    "amrex ==23.10",
    "numpy",
    "python",
    "amrex ==23.10",
    "numpy",
    "python",
    "amrex ==23.10",
    "numpy",
    "python"
   ]
  },
  "source": {
   "patches": [
    "203.patch",
    "203.patch",
    "203.patch",
    "203.patch"
   ],
   "sha256": "44dd3ab467260ea797dec4fcb939599fad811e8ac598bdc0ab05da24369606fa",
   "url": "https://github.com/AMReX-Codes/pyamrex/archive/refs/tags/23.10.tar.gz"
  },
  "test": {
   "imports": [
    "amrex",
    "amrex",
    "amrex",
    "amrex"
   ],
   "requires": [
    "pytest",
    "pytest",
    "pytest",
    "pytest"
   ],
   "source_files": [
    "tests/*",
    "tests/*",
    "tests/*",
    "tests/*"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "clang",
    "cmake",
    "cxx_compiler_stub",
    "lld",
    "llvm-openmp",
    "ninja",
    "pkgconfig"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "amrex",
    "numpy",
    "pip",
    "pybind11",
    "python",
    "setuptools",
    "wheel"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "amrex",
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pytest"
   ]
  }
 }
}