{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  }
 },
 "feedstock_name": "pytorch_spline_conv",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "home": "https://github.com/rusty1s/pytorch_spline_conv",
   "license": "MIT",
   "license_file": "LICENSE",
   "summary": "Implementation of the Spline-Based Convolution Operator of SplineCNN in PyTorch"
  },
  "build": {
   "number": "5",
   "script": [
    "export FORCE_CUDA=\"1\"",
    "export CC=\"$GCC\"",
    "export NVCC_FLAGS=\"--compiler-bindir=${CC}\"",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv",
    "export FORCE_CUDA=\"1\"",
    "export CC=\"$GCC\"",
    "export NVCC_FLAGS=\"--compiler-bindir=${CC}\"",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv",
    "export FORCE_CUDA=\"1\"",
    "export CC=\"$GCC\"",
    "export NVCC_FLAGS=\"--compiler-bindir=${CC}\"",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv",
    "export FORCE_CUDA=\"1\"",
    "export CC=\"$GCC\"",
    "export NVCC_FLAGS=\"--compiler-bindir=${CC}\"",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv"
   ],
   "string": "cuda112py311h1234567_5"
  },
  "extra": {
   "recipe-maintainers": [
    "h-vetinari",
    "rluria14",
    "oblute",
    "ndmaxar",
    "h-vetinari",
    "rluria14",
    "oblute",
    "ndmaxar",
    "h-vetinari",
    "rluria14",
    "oblute",
    "ndmaxar",
    "h-vetinari",
    "rluria14",
    "oblute",
    "ndmaxar"
   ]
  },
  "package": {
   "name": "pytorch_spline_conv",
   "version": "1.2.1"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub"
   ],
   "host": [
    "python",
    "pytorch",
    "pytorch =*=cuda*",
    "setuptools",
    "pytest-runner",
    "pip",
    "python",
    "pytorch",
    "pytorch =*=cuda*",
    "setuptools",
    "pytest-runner",
    "pip",
    "python",
    "pytorch",
    "pytorch =*=cuda*",
    "setuptools",
    "pytest-runner",
    "pip",
    "python",
    "pytorch",
    "pytorch =*=cuda*",
    "setuptools",
    "pytest-runner",
    "pip"
   ],
   "run": [
    "python",
    "python",
    "python",
    "python"
   ],
   "run_constrained": [
    "pytorch =*=cuda*",
    "pytorch =*=cuda*",
    "pytorch =*=cuda*",
    "pytorch =*=cuda*"
   ]
  },
  "source": {
   "sha256": "364f658e0ecb4c5263a728c2961553e022fc44c11a633d5a1bf986cf169ab438",
   "url": "https://pypi.io/packages/source/t/torch_spline_conv/torch_spline_conv-1.2.1.tar.gz"
  },
  "test": {
   "imports": [
    "torch_spline_conv",
    "torch_spline_conv",
    "torch_spline_conv",
    "torch_spline_conv"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cuda_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "pytest-runner",
    "python",
    "pytorch",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "home": "https://github.com/rusty1s/pytorch_spline_conv",
   "license": "MIT",
   "license_file": "LICENSE",
   "summary": "Implementation of the Spline-Based Convolution Operator of SplineCNN in PyTorch"
  },
  "build": {
   "number": "5",
   "script": [
    "export FORCE_CUDA=\"1\"",
    "export CC=\"$GCC\"",
    "export NVCC_FLAGS=\"--compiler-bindir=${CC}\"",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv",
    "export FORCE_CUDA=\"1\"",
    "export CC=\"$GCC\"",
    "export NVCC_FLAGS=\"--compiler-bindir=${CC}\"",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv",
    "export FORCE_CUDA=\"1\"",
    "export CC=\"$GCC\"",
    "export NVCC_FLAGS=\"--compiler-bindir=${CC}\"",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv",
    "export FORCE_CUDA=\"1\"",
    "export CC=\"$GCC\"",
    "export NVCC_FLAGS=\"--compiler-bindir=${CC}\"",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv"
   ],
   "string": "cuda112py311h1234567_5"
  },
  "extra": {
   "recipe-maintainers": [
    "h-vetinari",
    "rluria14",
    "oblute",
    "ndmaxar",
    "h-vetinari",
    "rluria14",
    "oblute",
    "ndmaxar",
    "h-vetinari",
    "rluria14",
    "oblute",
    "ndmaxar",
    "h-vetinari",
    "rluria14",
    "oblute",
    "ndmaxar"
   ]
  },
  "package": {
   "name": "pytorch_spline_conv",
   "version": "1.2.1"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cuda_compiler_stub"
   ],
   "host": [
    "python",
    "pytorch",
    "pytorch =*=cuda*",
    "setuptools",
    "pytest-runner",
    "pip",
    "python",
    "pytorch",
    "pytorch =*=cuda*",
    "setuptools",
    "pytest-runner",
    "pip",
    "python",
    "pytorch",
    "pytorch =*=cuda*",
    "setuptools",
    "pytest-runner",
    "pip",
    "python",
    "pytorch",
    "pytorch =*=cuda*",
    "setuptools",
    "pytest-runner",
    "pip"
   ],
   "run": [
    "python",
    "python",
    "python",
    "python"
   ],
   "run_constrained": [
    "pytorch =*=cuda*",
    "pytorch =*=cuda*",
    "pytorch =*=cuda*",
    "pytorch =*=cuda*"
   ]
  },
  "source": {
   "sha256": "364f658e0ecb4c5263a728c2961553e022fc44c11a633d5a1bf986cf169ab438",
   "url": "https://pypi.io/packages/source/t/torch_spline_conv/torch_spline_conv-1.2.1.tar.gz"
  },
  "test": {
   "imports": [
    "torch_spline_conv",
    "torch_spline_conv",
    "torch_spline_conv",
    "torch_spline_conv"
   ]
  }
 },
 "name": "pytorch_spline_conv",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "pytorch_spline_conv"
  ]
 },
 "parsing_error": false,
 "pr_info": {
  "__lazy_json__": "pr_info/pytorch_spline_conv.json"
 },
 "raw_meta_yaml": "{% set version = \"1.2.1\" %}\n# see github.com/conda-forge/conda-forge.github.io/issues/1059 for naming discussion\n{% set torch_proc_type = \"cuda\" if cuda_compiler_version != \"None\" else \"cpu\" %}\n\npackage:\n  name: pytorch_spline_conv\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/t/torch_spline_conv/torch_spline_conv-{{ version }}.tar.gz\n  sha256: 364f658e0ecb4c5263a728c2961553e022fc44c11a633d5a1bf986cf169ab438\n\nbuild:\n  number: 5\n  # as of pytorch 1.13, conda-forge only builds for CUDA 11.2+, see\n  # https://github.com/conda-forge/conda-forge-pinning-feedstock/issues/3491\n  skip: true  # [win or cuda_compiler_version in (\"None\", \"10.2\", \"11.0\", \"11.1\")]\n  string: cpu_py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version == \"None\"]\n  string: cuda{{ cuda_compiler_version | replace('.', '') }}py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version != \"None\"]\n  script:\n    - export FORCE_CUDA=\"1\"    # [linux64 and cuda_compiler_version != 'None']\n    - export CC=\"$GCC\"         # [linux64 and cuda_compiler_version != 'None']\n    - export NVCC_FLAGS=\"--compiler-bindir=${CC}\"    # [linux64 and cuda_compiler_version != 'None']\n    - {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  build:\n    - python                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - {{ compiler('cuda') }}  # [cuda_compiler_version != \"None\"]\n  host:\n    - python\n    - pytorch\n    - pytorch =*={{ torch_proc_type }}*\n    - setuptools\n    - pytest-runner\n    - pip\n  run:\n    - python\n  run_constrained:\n    # additional run constraint to the one from the (version-only) run_export;\n    # constraining the CPU builds to CPU pytorch isn't 100% necessary, but cleaner\n    - pytorch =*={{ torch_proc_type }}*\n\ntest:\n  imports:\n    - torch_spline_conv\n\nabout:\n  home: https://github.com/rusty1s/pytorch_spline_conv\n  summary: Implementation of the Spline-Based Convolution Operator of SplineCNN in PyTorch\n  license: MIT\n  license_file: LICENSE\n\nextra:\n  recipe-maintainers:\n    - h-vetinari\n    - rluria14\n    - oblute\n    - ndmaxar\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "cuda_compiler_stub",
   "cxx_compiler_stub",
   "pip",
   "pytest-runner",
   "python",
   "pytorch",
   "setuptools"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cuda_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "pip",
    "pytest-runner",
    "python",
    "pytorch",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cuda_compiler_stub",
    "cxx_compiler_stub",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cuda_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "pytest-runner",
    "python",
    "pytorch",
    "pytorch =*=cuda*",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://pypi.io/packages/source/t/torch_spline_conv/torch_spline_conv-1.2.1.tar.gz",
 "version": "1.2.1",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/pytorch_spline_conv.json"
 }
}