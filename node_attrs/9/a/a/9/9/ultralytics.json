{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  }
 },
 "feedstock_name": "ultralytics",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "![Ultralytics YOLOv8 banner](https://raw.githubusercontent.com/ultralytics/assets/main/yolov8/banner-yolov8.png)\n\n[Ultralytics](https://ultralytics.com) [YOLOv8](https://github.com/ultralytics/ultralytics) is a cutting-edge, state-of-the-art (SOTA) model that builds upon the success of previous YOLO versions and introduces new features and improvements to further boost performance and flexibility. YOLOv8 is designed to be fast, accurate, and easy to use, making it an excellent choice for a wide range of object detection and tracking, instance segmentation, image classification and pose estimation tasks.\n\nWe hope that the resources here will help you get the most out of YOLOv8. Please browse the YOLOv8 <a href=\"https://docs.ultralytics.com/\">Docs</a> for details, raise an issue on <a href=\"https://github.com/ultralytics/ultralytics/issues/new/choose\">GitHub</a> for support, and join our <a href=\"https://discord.gg/2wNGbc6g9X\">Discord</a> community for questions and discussions!\n\nTo request an Enterprise License please complete the form at [Ultralytics Licensing](https://ultralytics.com/license).\n\n![Ultralytics YOLOv8 comparison plots](https://raw.githubusercontent.com/ultralytics/assets/main/yolov8/yolo-comparison-plots.png)\n\n\nSee below for a quickstart installation and usage example, and see the [YOLOv8 Docs](https://docs.ultralytics.com) for full documentation on training, validation, prediction and deployment.\n\n<details open>\n<summary>Install</summary>\n\nConda install the ultralytics package including all [requirements](https://github.com/ultralytics/ultralytics/blob/main/requirements.txt) in a [**Python>=3.8**](https://www.python.org/) environment with [**PyTorch>=1.7**](https://pytorch.org/get-started/locally/).\n\n```bash\nconda install ultralytics\n```\n\nFor alternative installation methods including Pip, Docker, and Git, please refer to the [Quickstart Guide](https://docs.ultralytics.com/quickstart).\n\n</details>\n\n<details open>\n<summary>Usage</summary>\n\n\nYOLOv8 may be used directly in the Command Line Interface (CLI) with a `yolo` command:\n\n```bash\nyolo predict model=yolov8n.pt source='https://ultralytics.com/images/bus.jpg'\n```\n\n`yolo` can be used for a variety of tasks and modes and accepts additional arguments, i.e. `imgsz=640`. See the YOLOv8 [CLI Docs](https://docs.ultralytics.com/usage/cli) for examples.\n\n\nYOLOv8 may also be used directly in a Python environment, and accepts the same [arguments](https://docs.ultralytics.com/usage/cfg/) as in the CLI example above:\n\n```python\nfrom ultralytics import YOLO\n\nmodel = YOLO(\"yolov8n.yaml\")  # build a new model from scratch\nmodel = YOLO(\"yolov8n.pt\")  # load a pretrained model (recommended for training)\n\nresults = model.train(data=\"coco128.yaml\", epochs=3)  # train the model\nresults = model.val()  # evaluate model performance on the validation set\nresults = model(\"https://ultralytics.com/images/bus.jpg\")  # predict on an image\nresults = model.export(format=\"onnx\")  # export the model to ONNX format\n```\n\n[Models](https://github.com/ultralytics/ultralytics/tree/main/ultralytics/models) download automatically from the latest Ultralytics [release](https://github.com/ultralytics/assets/releases). See YOLOv8 [Python Docs](https://docs.ultralytics.com/usage/python) for more examples.\n\n</details>\n",
   "dev_url": "https://github.com/ultralytics/ultralytics",
   "doc_url": "https://docs.ultralytics.com",
   "home": "https://ultralytics.com",
   "license": "AGPL-3.0-only",
   "license_file": "LICENSE",
   "summary": "Ultralytics YOLOv8 for SOTA object detection, multi-object tracking, instance segmentation, pose estimation and image classification."
  },
  "build": {
   "entry_points": [
    "yolo = ultralytics.yolo.cfg:entrypoint",
    "ultralytics = ultralytics.yolo.cfg:entrypoint"
   ],
   "noarch": "python",
   "number": "0",
   "script": "PYTHON -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "glenn-jocher",
    "AyushExel",
    "Laughing-q",
    "abraha2d"
   ]
  },
  "package": {
   "name": "ultralytics",
   "version": "8.0.130"
  },
  "requirements": {
   "host": [
    "python >=3.7",
    "pip"
   ],
   "run": [
    "python >=3.7",
    "matplotlib-base >=3.2.2",
    "opencv >=4.6.0",
    "pillow >=7.1.2",
    "pyyaml >=5.3.1",
    "requests >=2.23.0",
    "scipy >=1.4.1",
    "pytorch >=1.7.0",
    "torchvision >=0.8.1",
    "tqdm >=4.64.0",
    "pandas >=1.1.4",
    "seaborn >=0.11.0",
    "psutil"
   ]
  },
  "source": {
   "sha256": "89a2256a88592811f32e250a1260ef748041cb5bcc9fe9b8ea34c010e28dbb5a",
   "url": "https://pypi.io/packages/source/u/ultralytics/ultralytics-8.0.130.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "yolo --help",
    "ultralytics --help"
   ],
   "imports": [
    "ultralytics"
   ],
   "requires": [
    "pip"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "matplotlib-base",
    "opencv",
    "pandas",
    "pillow",
    "psutil",
    "python",
    "pytorch",
    "pyyaml",
    "requests",
    "scipy",
    "seaborn",
    "torchvision",
    "tqdm"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "![Ultralytics YOLOv8 banner](https://raw.githubusercontent.com/ultralytics/assets/main/yolov8/banner-yolov8.png)\n\n[Ultralytics](https://ultralytics.com) [YOLOv8](https://github.com/ultralytics/ultralytics) is a cutting-edge, state-of-the-art (SOTA) model that builds upon the success of previous YOLO versions and introduces new features and improvements to further boost performance and flexibility. YOLOv8 is designed to be fast, accurate, and easy to use, making it an excellent choice for a wide range of object detection and tracking, instance segmentation, image classification and pose estimation tasks.\n\nWe hope that the resources here will help you get the most out of YOLOv8. Please browse the YOLOv8 <a href=\"https://docs.ultralytics.com/\">Docs</a> for details, raise an issue on <a href=\"https://github.com/ultralytics/ultralytics/issues/new/choose\">GitHub</a> for support, and join our <a href=\"https://discord.gg/2wNGbc6g9X\">Discord</a> community for questions and discussions!\n\nTo request an Enterprise License please complete the form at [Ultralytics Licensing](https://ultralytics.com/license).\n\n![Ultralytics YOLOv8 comparison plots](https://raw.githubusercontent.com/ultralytics/assets/main/yolov8/yolo-comparison-plots.png)\n\n\nSee below for a quickstart installation and usage example, and see the [YOLOv8 Docs](https://docs.ultralytics.com) for full documentation on training, validation, prediction and deployment.\n\n<details open>\n<summary>Install</summary>\n\nConda install the ultralytics package including all [requirements](https://github.com/ultralytics/ultralytics/blob/main/requirements.txt) in a [**Python>=3.8**](https://www.python.org/) environment with [**PyTorch>=1.7**](https://pytorch.org/get-started/locally/).\n\n```bash\nconda install ultralytics\n```\n\nFor alternative installation methods including Pip, Docker, and Git, please refer to the [Quickstart Guide](https://docs.ultralytics.com/quickstart).\n\n</details>\n\n<details open>\n<summary>Usage</summary>\n\n\nYOLOv8 may be used directly in the Command Line Interface (CLI) with a `yolo` command:\n\n```bash\nyolo predict model=yolov8n.pt source='https://ultralytics.com/images/bus.jpg'\n```\n\n`yolo` can be used for a variety of tasks and modes and accepts additional arguments, i.e. `imgsz=640`. See the YOLOv8 [CLI Docs](https://docs.ultralytics.com/usage/cli) for examples.\n\n\nYOLOv8 may also be used directly in a Python environment, and accepts the same [arguments](https://docs.ultralytics.com/usage/cfg/) as in the CLI example above:\n\n```python\nfrom ultralytics import YOLO\n\nmodel = YOLO(\"yolov8n.yaml\")  # build a new model from scratch\nmodel = YOLO(\"yolov8n.pt\")  # load a pretrained model (recommended for training)\n\nresults = model.train(data=\"coco128.yaml\", epochs=3)  # train the model\nresults = model.val()  # evaluate model performance on the validation set\nresults = model(\"https://ultralytics.com/images/bus.jpg\")  # predict on an image\nresults = model.export(format=\"onnx\")  # export the model to ONNX format\n```\n\n[Models](https://github.com/ultralytics/ultralytics/tree/main/ultralytics/models) download automatically from the latest Ultralytics [release](https://github.com/ultralytics/assets/releases). See YOLOv8 [Python Docs](https://docs.ultralytics.com/usage/python) for more examples.\n\n</details>\n",
   "dev_url": "https://github.com/ultralytics/ultralytics",
   "doc_url": "https://docs.ultralytics.com",
   "home": "https://ultralytics.com",
   "license": "AGPL-3.0-only",
   "license_file": "LICENSE",
   "summary": "Ultralytics YOLOv8 for SOTA object detection, multi-object tracking, instance segmentation, pose estimation and image classification."
  },
  "build": {
   "entry_points": [
    "yolo = ultralytics.yolo.cfg:entrypoint",
    "ultralytics = ultralytics.yolo.cfg:entrypoint"
   ],
   "noarch": "python",
   "number": "0",
   "script": "PYTHON -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "glenn-jocher",
    "AyushExel",
    "Laughing-q",
    "abraha2d"
   ]
  },
  "package": {
   "name": "ultralytics",
   "version": "8.0.130"
  },
  "requirements": {
   "host": [
    "python >=3.7",
    "pip"
   ],
   "run": [
    "python >=3.7",
    "matplotlib-base >=3.2.2",
    "opencv >=4.6.0",
    "pillow >=7.1.2",
    "pyyaml >=5.3.1",
    "requests >=2.23.0",
    "scipy >=1.4.1",
    "pytorch >=1.7.0",
    "torchvision >=0.8.1",
    "tqdm >=4.64.0",
    "pandas >=1.1.4",
    "seaborn >=0.11.0",
    "psutil"
   ]
  },
  "source": {
   "sha256": "89a2256a88592811f32e250a1260ef748041cb5bcc9fe9b8ea34c010e28dbb5a",
   "url": "https://pypi.io/packages/source/u/ultralytics/ultralytics-8.0.130.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "yolo --help",
    "ultralytics --help"
   ],
   "imports": [
    "ultralytics"
   ],
   "requires": [
    "pip"
   ]
  }
 },
 "name": "ultralytics",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "ultralytics"
  ]
 },
 "parsing_error": false,
 "platforms": [
  "linux_64"
 ],
 "pr_info": {
  "__lazy_json__": "pr_info/ultralytics.json"
 },
 "raw_meta_yaml": "{% set name = \"ultralytics\" %}\n{% set version = \"8.0.130\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/ultralytics-{{ version }}.tar.gz\n  sha256: 89a2256a88592811f32e250a1260ef748041cb5bcc9fe9b8ea34c010e28dbb5a\n\nbuild:\n  entry_points:\n    - yolo = ultralytics.yolo.cfg:entrypoint\n    - ultralytics = ultralytics.yolo.cfg:entrypoint\n  noarch: python\n  script: {{ PYTHON }} -m pip install . -vv\n  number: 0\n\nrequirements:\n  host:\n    - python >=3.7\n    - pip\n  run:\n    - python >=3.7\n    - matplotlib-base >=3.2.2\n    - opencv >=4.6.0\n    - pillow >=7.1.2\n    - pyyaml >=5.3.1\n    - requests >=2.23.0\n    - scipy >=1.4.1\n    - pytorch >=1.7.0\n    - torchvision >=0.8.1\n    - tqdm >=4.64.0\n    - pandas >=1.1.4\n    - seaborn >=0.11.0\n    - psutil\n\ntest:\n  imports:\n    - ultralytics\n  commands:\n    - pip check\n    - yolo --help\n    - ultralytics --help\n  requires:\n    - pip\n\nabout:\n  home: https://ultralytics.com\n  summary: Ultralytics YOLOv8 for SOTA object detection, multi-object tracking, instance segmentation, pose estimation and image classification.\n  doc_url: https://docs.ultralytics.com\n  dev_url: https://github.com/ultralytics/ultralytics\n  license: AGPL-3.0-only\n  license_file: LICENSE\n  description: |\n    ![Ultralytics YOLOv8 banner](https://raw.githubusercontent.com/ultralytics/assets/main/yolov8/banner-yolov8.png)\n\n    [Ultralytics](https://ultralytics.com) [YOLOv8](https://github.com/ultralytics/ultralytics) is a cutting-edge, state-of-the-art (SOTA) model that builds upon the success of previous YOLO versions and introduces new features and improvements to further boost performance and flexibility. YOLOv8 is designed to be fast, accurate, and easy to use, making it an excellent choice for a wide range of object detection and tracking, instance segmentation, image classification and pose estimation tasks.\n\n    We hope that the resources here will help you get the most out of YOLOv8. Please browse the YOLOv8 <a href=\"https://docs.ultralytics.com/\">Docs</a> for details, raise an issue on <a href=\"https://github.com/ultralytics/ultralytics/issues/new/choose\">GitHub</a> for support, and join our <a href=\"https://discord.gg/2wNGbc6g9X\">Discord</a> community for questions and discussions!\n\n    To request an Enterprise License please complete the form at [Ultralytics Licensing](https://ultralytics.com/license).\n\n    ![Ultralytics YOLOv8 comparison plots](https://raw.githubusercontent.com/ultralytics/assets/main/yolov8/yolo-comparison-plots.png)\n\n    ## Documentation\n\n    See below for a quickstart installation and usage example, and see the [YOLOv8 Docs](https://docs.ultralytics.com) for full documentation on training, validation, prediction and deployment.\n\n    <details open>\n    <summary>Install</summary>\n\n    Conda install the ultralytics package including all [requirements](https://github.com/ultralytics/ultralytics/blob/main/requirements.txt) in a [**Python>=3.8**](https://www.python.org/) environment with [**PyTorch>=1.7**](https://pytorch.org/get-started/locally/).\n        \n    ```bash\n    conda install ultralytics\n    ```\n\n    For alternative installation methods including Pip, Docker, and Git, please refer to the [Quickstart Guide](https://docs.ultralytics.com/quickstart).\n\n    </details>\n\n    <details open>\n    <summary>Usage</summary>\n\n    #### CLI\n\n    YOLOv8 may be used directly in the Command Line Interface (CLI) with a `yolo` command:\n\n    ```bash\n    yolo predict model=yolov8n.pt source='https://ultralytics.com/images/bus.jpg'\n    ```\n\n    `yolo` can be used for a variety of tasks and modes and accepts additional arguments, i.e. `imgsz=640`. See the YOLOv8 [CLI Docs](https://docs.ultralytics.com/usage/cli) for examples.\n\n    #### Python\n\n    YOLOv8 may also be used directly in a Python environment, and accepts the same [arguments](https://docs.ultralytics.com/usage/cfg/) as in the CLI example above:\n\n    ```python\n    from ultralytics import YOLO\n\n    # Load a model\n    model = YOLO(\"yolov8n.yaml\")  # build a new model from scratch\n    model = YOLO(\"yolov8n.pt\")  # load a pretrained model (recommended for training)\n\n    # Use the model\n    results = model.train(data=\"coco128.yaml\", epochs=3)  # train the model\n    results = model.val()  # evaluate model performance on the validation set\n    results = model(\"https://ultralytics.com/images/bus.jpg\")  # predict on an image\n    results = model.export(format=\"onnx\")  # export the model to ONNX format\n    ```\n\n    [Models](https://github.com/ultralytics/ultralytics/tree/main/ultralytics/models) download automatically from the latest Ultralytics [release](https://github.com/ultralytics/assets/releases). See YOLOv8 [Python Docs](https://docs.ultralytics.com/usage/python) for more examples.\n\n    </details>\n\nextra:\n  recipe-maintainers:\n    - glenn-jocher\n    - AyushExel\n    - Laughing-q\n    - abraha2d\n",
 "req": {
  "__set__": true,
  "elements": [
   "matplotlib-base",
   "opencv",
   "pandas",
   "pillow",
   "pip",
   "psutil",
   "python",
   "pytorch",
   "pyyaml",
   "requests",
   "scipy",
   "seaborn",
   "torchvision",
   "tqdm"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "matplotlib-base",
    "opencv",
    "pandas",
    "pillow",
    "psutil",
    "python",
    "pytorch",
    "pyyaml",
    "requests",
    "scipy",
    "seaborn",
    "torchvision",
    "tqdm"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python >=3.7"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "matplotlib-base >=3.2.2",
    "opencv >=4.6.0",
    "pandas >=1.1.4",
    "pillow >=7.1.2",
    "psutil",
    "python >=3.7",
    "pytorch >=1.7.0",
    "pyyaml >=5.3.1",
    "requests >=2.23.0",
    "scipy >=1.4.1",
    "seaborn >=0.11.0",
    "torchvision >=0.8.1",
    "tqdm >=4.64.0"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "url": "https://pypi.io/packages/source/u/ultralytics/ultralytics-8.0.130.tar.gz",
 "version": "8.0.130",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/ultralytics.json"
 }
}