{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "floret",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "floret is an extended version of fastText that can produce word\nrepresentations for any word from a compact vector table. It combines:\n- fastText's subwords to provide embeddings for any word\n- Bloom embeddings (\"hashing trick\") for a compact vector table\n",
   "dev_url": "https://github.com/explosion/floret/",
   "home": "https://github.com/explosion/floret",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE.txt",
   "summary": "fastText + Bloom embeddings for compact, full-coverage vectors with spaCy"
  },
  "build": {
   "number": "1",
   "script": "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "jtilly",
    "jtilly",
    "jtilly",
    "jtilly"
   ]
  },
  "package": {
   "name": "floret",
   "version": "0.10.2"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "make",
    "cxx_compiler_stub",
    "make",
    "cxx_compiler_stub",
    "make",
    "cxx_compiler_stub",
    "make"
   ],
   "host": [
    "python",
    "numpy",
    "pip",
    "pybind11 >=2.2",
    "setuptools >=0.7.0",
    "python",
    "numpy",
    "pip",
    "pybind11 >=2.2",
    "setuptools >=0.7.0",
    "python",
    "numpy",
    "pip",
    "pybind11 >=2.2",
    "setuptools >=0.7.0",
    "python",
    "numpy",
    "pip",
    "pybind11 >=2.2",
    "setuptools >=0.7.0"
   ],
   "run": [
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy"
   ]
  },
  "source": {
   "patches": [
    "0001_do_not_hardcode_compiler.patch",
    "0001_do_not_hardcode_compiler.patch",
    "0001_do_not_hardcode_compiler.patch",
    "0001_do_not_hardcode_compiler.patch"
   ],
   "sha256": "9f4c2c0abbee7945b1787c0b4fc46a53b794179f1f10a63feee249b971a2ccae",
   "url": "https://github.com/explosion/floret/archive/refs/tags/v0.10.2.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "pip check",
    "pip check",
    "pip check"
   ],
   "imports": [
    "floret",
    "floret",
    "floret",
    "floret"
   ],
   "requires": [
    "pip",
    "pip",
    "pip",
    "pip"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "numpy",
    "pip",
    "pybind11",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "floret is an extended version of fastText that can produce word\nrepresentations for any word from a compact vector table. It combines:\n- fastText's subwords to provide embeddings for any word\n- Bloom embeddings (\"hashing trick\") for a compact vector table\n",
   "dev_url": "https://github.com/explosion/floret/",
   "home": "https://github.com/explosion/floret",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE.txt",
   "summary": "fastText + Bloom embeddings for compact, full-coverage vectors with spaCy"
  },
  "build": {
   "number": "1",
   "script": "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/python.exe -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "jtilly",
    "jtilly",
    "jtilly",
    "jtilly",
    "jtilly",
    "jtilly",
    "jtilly",
    "jtilly",
    "jtilly",
    "jtilly",
    "jtilly",
    "jtilly"
   ]
  },
  "package": {
   "name": "floret",
   "version": "0.10.2"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "make",
    "cxx_compiler_stub",
    "make",
    "cxx_compiler_stub",
    "make",
    "cxx_compiler_stub",
    "make",
    "cxx_compiler_stub",
    "make",
    "cxx_compiler_stub",
    "make",
    "cxx_compiler_stub",
    "make",
    "cxx_compiler_stub",
    "make",
    "cxx_compiler_stub",
    "make",
    "cxx_compiler_stub",
    "make",
    "cxx_compiler_stub",
    "make",
    "cxx_compiler_stub",
    "make"
   ],
   "host": [
    "python",
    "numpy",
    "pip",
    "pybind11 >=2.2",
    "setuptools >=0.7.0",
    "python",
    "numpy",
    "pip",
    "pybind11 >=2.2",
    "setuptools >=0.7.0",
    "python",
    "numpy",
    "pip",
    "pybind11 >=2.2",
    "setuptools >=0.7.0",
    "python",
    "numpy",
    "pip",
    "pybind11 >=2.2",
    "setuptools >=0.7.0",
    "python",
    "numpy",
    "pip",
    "pybind11 >=2.2",
    "setuptools >=0.7.0",
    "python",
    "numpy",
    "pip",
    "pybind11 >=2.2",
    "setuptools >=0.7.0",
    "python",
    "numpy",
    "pip",
    "pybind11 >=2.2",
    "setuptools >=0.7.0",
    "python",
    "numpy",
    "pip",
    "pybind11 >=2.2",
    "setuptools >=0.7.0",
    "python",
    "numpy",
    "pip",
    "pybind11 >=2.2",
    "setuptools >=0.7.0",
    "python",
    "numpy",
    "pip",
    "pybind11 >=2.2",
    "setuptools >=0.7.0",
    "python",
    "numpy",
    "pip",
    "pybind11 >=2.2",
    "setuptools >=0.7.0",
    "python",
    "numpy",
    "pip",
    "pybind11 >=2.2",
    "setuptools >=0.7.0"
   ],
   "run": [
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy"
   ]
  },
  "source": {
   "patches": [
    "0001_do_not_hardcode_compiler.patch",
    "0001_do_not_hardcode_compiler.patch",
    "0001_do_not_hardcode_compiler.patch",
    "0001_do_not_hardcode_compiler.patch",
    "0001_do_not_hardcode_compiler.patch",
    "0001_do_not_hardcode_compiler.patch",
    "0001_do_not_hardcode_compiler.patch",
    "0001_do_not_hardcode_compiler.patch",
    "0001_do_not_hardcode_compiler.patch",
    "0001_do_not_hardcode_compiler.patch",
    "0001_do_not_hardcode_compiler.patch",
    "0001_do_not_hardcode_compiler.patch"
   ],
   "sha256": "9f4c2c0abbee7945b1787c0b4fc46a53b794179f1f10a63feee249b971a2ccae",
   "url": "https://github.com/explosion/floret/archive/refs/tags/v0.10.2.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check"
   ],
   "imports": [
    "floret",
    "floret",
    "floret",
    "floret",
    "floret",
    "floret",
    "floret",
    "floret",
    "floret",
    "floret",
    "floret",
    "floret"
   ],
   "requires": [
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip"
   ]
  }
 },
 "name": "floret",
 "osx_64_meta_yaml": {
  "about": {
   "description": "floret is an extended version of fastText that can produce word\nrepresentations for any word from a compact vector table. It combines:\n- fastText's subwords to provide embeddings for any word\n- Bloom embeddings (\"hashing trick\") for a compact vector table\n",
   "dev_url": "https://github.com/explosion/floret/",
   "home": "https://github.com/explosion/floret",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE.txt",
   "summary": "fastText + Bloom embeddings for compact, full-coverage vectors with spaCy"
  },
  "build": {
   "number": "1",
   "script": "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "jtilly",
    "jtilly",
    "jtilly",
    "jtilly"
   ]
  },
  "package": {
   "name": "floret",
   "version": "0.10.2"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "make",
    "cxx_compiler_stub",
    "make",
    "cxx_compiler_stub",
    "make",
    "cxx_compiler_stub",
    "make"
   ],
   "host": [
    "python",
    "numpy",
    "pip",
    "pybind11 >=2.2",
    "setuptools >=0.7.0",
    "python",
    "numpy",
    "pip",
    "pybind11 >=2.2",
    "setuptools >=0.7.0",
    "python",
    "numpy",
    "pip",
    "pybind11 >=2.2",
    "setuptools >=0.7.0",
    "python",
    "numpy",
    "pip",
    "pybind11 >=2.2",
    "setuptools >=0.7.0"
   ],
   "run": [
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy"
   ]
  },
  "source": {
   "patches": [
    "0001_do_not_hardcode_compiler.patch",
    "0001_do_not_hardcode_compiler.patch",
    "0001_do_not_hardcode_compiler.patch",
    "0001_do_not_hardcode_compiler.patch"
   ],
   "sha256": "9f4c2c0abbee7945b1787c0b4fc46a53b794179f1f10a63feee249b971a2ccae",
   "url": "https://github.com/explosion/floret/archive/refs/tags/v0.10.2.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "pip check",
    "pip check",
    "pip check"
   ],
   "imports": [
    "floret",
    "floret",
    "floret",
    "floret"
   ],
   "requires": [
    "pip",
    "pip",
    "pip",
    "pip"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "numpy",
    "pip",
    "pybind11",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "floret"
  ]
 },
 "parsing_error": "make_graph: 500",
 "platforms": [
  "win_64",
  "osx_64",
  "linux_64"
 ],
 "pr_info": {
  "__lazy_json__": "pr_info/floret.json"
 },
 "raw_meta_yaml": "{% set name = \"floret\" %}\n{% set version = \"0.10.2\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/explosion/{{ name }}/archive/refs/tags/v{{ version }}.tar.gz\n  sha256: 9f4c2c0abbee7945b1787c0b4fc46a53b794179f1f10a63feee249b971a2ccae\n  patches:\n    - 0001_do_not_hardcode_compiler.patch\n\nbuild:\n  script: {{ PYTHON }} -m pip install . -vv\n  number: 1\n\nrequirements:\n  build:\n    - {{ compiler('cxx') }}\n    - make\n  host:\n    - python\n    - numpy\n    - pip\n    - pybind11 >=2.2\n    - setuptools >=0.7.0\n  run:\n    - python\n    - {{ pin_compatible('numpy') }}\n\ntest:\n  imports:\n    - floret\n  requires:\n    - pip\n  commands:\n    - pip check\n\nabout:\n  home: https://github.com/explosion/floret\n  summary: 'fastText + Bloom embeddings for compact, full-coverage vectors with spaCy'\n  description: |\n    floret is an extended version of fastText that can produce word \n    representations for any word from a compact vector table. It combines:\n    - fastText's subwords to provide embeddings for any word\n    - Bloom embeddings (\"hashing trick\") for a compact vector table\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE.txt\n  dev_url: https://github.com/explosion/floret/\n\nextra:\n  recipe-maintainers:\n    - jtilly\n",
 "req": {
  "__set__": true,
  "elements": [
   "cxx_compiler_stub",
   "make",
   "numpy",
   "pip",
   "pybind11",
   "python",
   "setuptools"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub",
    "numpy",
    "pip",
    "pybind11",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub",
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "numpy",
    "pip",
    "pybind11 >=2.2",
    "python",
    "setuptools >=0.7.0"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "url": "https://github.com/explosion/floret/archive/refs/tags/v0.10.2.tar.gz",
 "version": "0.10.2",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/floret.json"
 },
 "win_64_meta_yaml": {
  "about": {
   "description": "floret is an extended version of fastText that can produce word\nrepresentations for any word from a compact vector table. It combines:\n- fastText's subwords to provide embeddings for any word\n- Bloom embeddings (\"hashing trick\") for a compact vector table\n",
   "dev_url": "https://github.com/explosion/floret/",
   "home": "https://github.com/explosion/floret",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE.txt",
   "summary": "fastText + Bloom embeddings for compact, full-coverage vectors with spaCy"
  },
  "build": {
   "number": "1",
   "script": "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/python.exe -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "jtilly",
    "jtilly",
    "jtilly",
    "jtilly"
   ]
  },
  "package": {
   "name": "floret",
   "version": "0.10.2"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "make",
    "cxx_compiler_stub",
    "make",
    "cxx_compiler_stub",
    "make",
    "cxx_compiler_stub",
    "make"
   ],
   "host": [
    "python",
    "numpy",
    "pip",
    "pybind11 >=2.2",
    "setuptools >=0.7.0",
    "python",
    "numpy",
    "pip",
    "pybind11 >=2.2",
    "setuptools >=0.7.0",
    "python",
    "numpy",
    "pip",
    "pybind11 >=2.2",
    "setuptools >=0.7.0",
    "python",
    "numpy",
    "pip",
    "pybind11 >=2.2",
    "setuptools >=0.7.0"
   ],
   "run": [
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy",
    "python",
    "numpy"
   ]
  },
  "source": {
   "patches": [
    "0001_do_not_hardcode_compiler.patch",
    "0001_do_not_hardcode_compiler.patch",
    "0001_do_not_hardcode_compiler.patch",
    "0001_do_not_hardcode_compiler.patch"
   ],
   "sha256": "9f4c2c0abbee7945b1787c0b4fc46a53b794179f1f10a63feee249b971a2ccae",
   "url": "https://github.com/explosion/floret/archive/refs/tags/v0.10.2.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "pip check",
    "pip check",
    "pip check"
   ],
   "imports": [
    "floret",
    "floret",
    "floret",
    "floret"
   ],
   "requires": [
    "pip",
    "pip",
    "pip",
    "pip"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "numpy",
    "pip",
    "pybind11",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 }
}