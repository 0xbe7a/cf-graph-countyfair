{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  },
  "provider": {
   "linux_aarch64": "azure",
   "linux_ppc64le": "azure"
  }
 },
 "feedstock_name": "rust",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "dev_url": "https://doc.rust-lang.org/std/",
   "doc_url": "https://www.rust-lang.org/en-US/documentation.html",
   "home": "https://www.rust-lang.org",
   "license": "MIT",
   "license_file": [
    "LICENSE-APACHE",
    "LICENSE-MIT"
   ],
   "summary": "Rust is a systems programming language that runs blazingly fast, prevents segfaults, and guarantees thread safety.\nThis package provides the compiler (rustc) and the documentation utilities rustdoc.\n"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "timkpaine",
    "xhochy",
    "johanneskoester",
    "abhi18av",
    "pkgw",
    "dlaehnemann",
    "isuruf",
    "mbargull"
   ]
  },
  "outputs": [
   {
    "build": {
     "binary_relocation": false,
     "merge_build_host": false,
     "missing_dso_whitelist": [
      "/lib64/librt.so.1",
      "/lib64/libdl.so.2",
      "/lib64/libpthread.so.0",
      "/lib64/libm.so.6",
      "/lib64/libc.so.6",
      "/lib64/ld-linux-x86-64.so.2"
     ],
     "noarch": "generic"
    },
    "name": "rust-std-x86_64-unknown-linux-gnu",
    "requirements": {
     "build": [],
     "host": [],
     "run": [],
     "run_constrained": [
      "rust"
     ]
    },
    "script": "install-rust-std.sh",
    "test": {
     "commands": [
      "test -d $PREFIX/lib/rustlib",
      "echo x86_64-unknown-linux-gnu"
     ]
    }
   },
   {
    "build": {
     "binary_relocation": false,
     "missing_dso_whitelist": [
      "/lib64/librt.so.1",
      "/lib64/libdl.so.2",
      "/lib64/libpthread.so.0",
      "/lib64/libm.so.6",
      "/lib64/libc.so.6",
      "/lib64/ld-linux-x86-64.so.2"
     ]
    },
    "name": "rust",
    "requirements": {
     "build": [],
     "host": [
      "rust-std-x86_64-unknown-linux-gnu",
      "c_compiler_stub",
      "zlib"
     ],
     "run": [
      "rust-std-x86_64-unknown-linux-gnu",
      "gcc_impl_linux-64"
     ]
    },
    "run_exports": {
     "strong_constrains": null
    },
    "script": "install-rust.sh",
    "test": {
     "commands": [
      "rustc --help",
      "rustdoc --help",
      "cargo --help",
      "cargo --config registries.crates-io.protocol=\\\"sparse\\\" install --force xsv",
      "echo x86_64-unknown-linux-gnu"
     ],
     "requires": null
    }
   },
   {
    "build": {
     "noarch": "generic",
     "skip": false,
     "string": "unix_0"
    },
    "name": "rust-src",
    "requirements": {
     "build": [],
     "run": [
      "__unix"
     ],
     "run_constrained": [
      "rust"
     ]
    },
    "script": "install-rust-src.sh",
    "test": {
     "commands": [
      "test -f \"${PREFIX}\"/lib/rustlib/src/rust/Cargo.lock",
      "test \"$(ls \"${PREFIX}\"/lib/rustlib/)\" = \"$(printf \"manifest-rust-src\\nsrc\")\""
     ]
    }
   },
   {
    "build": {
     "noarch": "generic",
     "skip": false,
     "string": "unix_0"
    },
    "name": "rust-std-x86_64-linux-android",
    "requirements": {
     "build": [],
     "run": [
      "__unix"
     ],
     "run_constrained": [
      "rust"
     ]
    },
    "script": "install-rust-std-extra.sh",
    "test": {
     "commands": [
      "test -d $PREFIX/lib/rustlib/x86_64-linux-android",
      "test -f $PREFIX/lib/rustlib/manifest-rust-std-x86_64-linux-android",
      "test -z \"$(ls \"${PREFIX}\"/lib/rustlib/ | grep -v x86_64-linux-android)\"",
      "echo x86_64-linux-android"
     ]
    }
   }
  ],
  "package": {
   "name": "rust-split",
   "version": "1.72.1"
  },
  "requirements": {
   "build": [],
   "host": []
  },
  "source": [
   {
    "patches": [
     "0001-gh-106-install.sh-Perfomance-Use-more-shell-builtins.diff"
    ],
    "sha256": "4fbd8df2000cf73c632d67a219a7fc153537ceffa2e6474491e3db71fdd5a410",
    "url": "https://static.rust-lang.org/dist/rust-1.72.1-x86_64-unknown-linux-gnu.tar.gz"
   },
   {
    "folder": "rust-src",
    "sha256": "fb5629b21129c940daeb04a325df34b5dd7d6053c93fe3b3460794ef82012d69",
    "url": "https://static.rust-lang.org/dist/rust-src-1.72.1.tar.gz"
   },
   {
    "folder": "rust-std",
    "sha256": "0e5380f9640ea0c306e07007de3a48fdcc0cd8331ff60cfad37e55444a170876",
    "url": "https://static.rust-lang.org/dist/rust-std-1.72.1-aarch64-apple-ios.tar.gz"
   },
   {
    "folder": "rust-std",
    "sha256": "0c71ae4204eaf75cbc22459a64917ee364e98f66b2a9adae08899997cc3da741",
    "url": "https://static.rust-lang.org/dist/rust-std-1.72.1-x86_64-apple-ios.tar.gz"
   },
   {
    "folder": "rust-std",
    "sha256": "254465a91cd90de2cc1a909a5a2925deca3e104502e175b1fd7760d2111eaa07",
    "url": "https://static.rust-lang.org/dist/rust-std-1.72.1-aarch64-apple-ios-sim.tar.gz"
   },
   {
    "folder": "rust-std",
    "sha256": "41911d98eba3816e25550a0c8a7e9721ef1bc2369bba41c3b1d0fb0e065364aa",
    "url": "https://static.rust-lang.org/dist/rust-std-1.72.1-aarch64-linux-android.tar.gz"
   },
   {
    "folder": "rust-std",
    "sha256": "7915389b8e506c0a6334c31d043a3a40d8503b539cee64c2afd176ce00fabf94",
    "url": "https://static.rust-lang.org/dist/rust-std-1.72.1-arm-linux-androideabi.tar.gz"
   },
   {
    "folder": "rust-std",
    "sha256": "77f451df32f1623e0e4af5dbeec87e5cb4868e8e42e015f523bcb0ebe4fb1613",
    "url": "https://static.rust-lang.org/dist/rust-std-1.72.1-armv7-linux-androideabi.tar.gz"
   },
   {
    "folder": "rust-std",
    "sha256": "cc5723faad8519d733f5acfdb4451878538feddfc7d9ba13baf7e9a2880c8cef",
    "url": "https://static.rust-lang.org/dist/rust-std-1.72.1-i686-linux-android.tar.gz"
   },
   {
    "folder": "rust-std",
    "sha256": "17a87c8b1fc9e77609a7a7f330429b21f91e1a01ba95be7f2ada07ddd260795a",
    "url": "https://static.rust-lang.org/dist/rust-std-1.72.1-x86_64-linux-android.tar.gz"
   },
   {
    "folder": "rust-std",
    "sha256": "32e49d571a36dfd1440f48d97c5451780b5b12186ff6b60293f1a06231132932",
    "url": "https://static.rust-lang.org/dist/rust-std-1.72.1-wasm32-unknown-unknown.tar.gz"
   }
  ]
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "rust-std-x86_64-unknown-linux-gnu",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "__unix",
    "gcc_impl_linux-64",
    "rust-std-x86_64-unknown-linux-gnu"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "linux_aarch64_meta_yaml": {
  "about": {
   "dev_url": "https://doc.rust-lang.org/std/",
   "doc_url": "https://www.rust-lang.org/en-US/documentation.html",
   "home": "https://www.rust-lang.org",
   "license": "MIT",
   "license_file": [
    "LICENSE-APACHE",
    "LICENSE-MIT"
   ],
   "summary": "Rust is a systems programming language that runs blazingly fast, prevents segfaults, and guarantees thread safety.\nThis package provides the compiler (rustc) and the documentation utilities rustdoc.\n"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "timkpaine",
    "xhochy",
    "johanneskoester",
    "abhi18av",
    "pkgw",
    "dlaehnemann",
    "isuruf",
    "mbargull"
   ]
  },
  "outputs": [
   {
    "build": {
     "binary_relocation": false,
     "merge_build_host": false,
     "missing_dso_whitelist": [
      "/lib64/librt.so.1",
      "/lib64/libdl.so.2",
      "/lib64/libpthread.so.0",
      "/lib64/libm.so.6",
      "/lib64/libc.so.6",
      "/lib64/ld-linux-x86-64.so.2"
     ],
     "noarch": "generic"
    },
    "name": "rust-std-aarch64-unknown-linux-gnu",
    "requirements": {
     "build": [],
     "host": [],
     "run": [],
     "run_constrained": [
      "rust"
     ]
    },
    "script": "install-rust-std.sh",
    "test": {
     "commands": [
      "test -d $PREFIX/lib/rustlib",
      "echo aarch64-unknown-linux-gnu"
     ]
    }
   },
   {
    "build": {
     "binary_relocation": false,
     "missing_dso_whitelist": [
      "/lib64/librt.so.1",
      "/lib64/libdl.so.2",
      "/lib64/libpthread.so.0",
      "/lib64/libm.so.6",
      "/lib64/libc.so.6",
      "/lib64/ld-linux-x86-64.so.2"
     ]
    },
    "name": "rust",
    "requirements": {
     "build": [],
     "host": [
      "rust-std-aarch64-unknown-linux-gnu",
      "c_compiler_stub",
      "zlib"
     ],
     "run": [
      "rust-std-aarch64-unknown-linux-gnu",
      "gcc_impl_linux-aarch64"
     ]
    },
    "run_exports": {
     "strong_constrains": null
    },
    "script": "install-rust.sh",
    "test": {
     "commands": [
      "rustc --help",
      "rustdoc --help",
      "cargo --help",
      "cargo --config registries.crates-io.protocol=\\\"sparse\\\" install --force xsv",
      "echo aarch64-unknown-linux-gnu"
     ],
     "requires": null
    }
   },
   {
    "build": {
     "noarch": "generic",
     "skip": true,
     "string": "unix_0"
    },
    "name": "rust-src",
    "requirements": {
     "build": [],
     "run": [
      "__unix"
     ],
     "run_constrained": [
      "rust"
     ]
    },
    "script": "install-rust-src.sh",
    "test": {
     "commands": [
      "test -f \"${PREFIX}\"/lib/rustlib/src/rust/Cargo.lock",
      "test \"$(ls \"${PREFIX}\"/lib/rustlib/)\" = \"$(printf \"manifest-rust-src\\nsrc\")\""
     ]
    }
   },
   {
    "build": {
     "noarch": "generic",
     "skip": true,
     "string": "unix_0"
    },
    "name": "rust-std-x86_64-linux-android",
    "requirements": {
     "build": [],
     "run": [
      "__unix"
     ],
     "run_constrained": [
      "rust"
     ]
    },
    "script": "install-rust-std-extra.sh",
    "test": {
     "commands": [
      "test -d $PREFIX/lib/rustlib/x86_64-linux-android",
      "test -f $PREFIX/lib/rustlib/manifest-rust-std-x86_64-linux-android",
      "test -z \"$(ls \"${PREFIX}\"/lib/rustlib/ | grep -v x86_64-linux-android)\"",
      "echo x86_64-linux-android"
     ]
    }
   }
  ],
  "package": {
   "name": "rust-split",
   "version": "1.72.1"
  },
  "requirements": {
   "build": [],
   "host": []
  },
  "source": [
   {
    "patches": [
     "0001-gh-106-install.sh-Perfomance-Use-more-shell-builtins.diff"
    ],
    "sha256": "40c905d1093d464857f05d37e4ccdfa059baaee9bc5295882f0148c7725633b8",
    "url": "https://static.rust-lang.org/dist/rust-1.72.1-aarch64-unknown-linux-gnu.tar.xz"
   },
   {
    "folder": "rust-src",
    "sha256": "fb5629b21129c940daeb04a325df34b5dd7d6053c93fe3b3460794ef82012d69",
    "url": "https://static.rust-lang.org/dist/rust-src-1.72.1.tar.gz"
   }
  ]
 },
 "linux_aarch64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "rust-std-aarch64-unknown-linux-gnu",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "__unix",
    "gcc_impl_linux-aarch64",
    "rust-std-aarch64-unknown-linux-gnu"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "linux_ppc64le_meta_yaml": {
  "about": {
   "dev_url": "https://doc.rust-lang.org/std/",
   "doc_url": "https://www.rust-lang.org/en-US/documentation.html",
   "home": "https://www.rust-lang.org",
   "license": "MIT",
   "license_file": [
    "LICENSE-APACHE",
    "LICENSE-MIT"
   ],
   "summary": "Rust is a systems programming language that runs blazingly fast, prevents segfaults, and guarantees thread safety.\nThis package provides the compiler (rustc) and the documentation utilities rustdoc.\n"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "timkpaine",
    "xhochy",
    "johanneskoester",
    "abhi18av",
    "pkgw",
    "dlaehnemann",
    "isuruf",
    "mbargull"
   ]
  },
  "outputs": [
   {
    "build": {
     "binary_relocation": false,
     "merge_build_host": false,
     "missing_dso_whitelist": [
      "/lib64/librt.so.1",
      "/lib64/libdl.so.2",
      "/lib64/libpthread.so.0",
      "/lib64/libm.so.6",
      "/lib64/libc.so.6",
      "/lib64/ld-linux-x86-64.so.2"
     ],
     "noarch": "generic"
    },
    "name": "rust-std-powerpc64le-unknown-linux-gnu",
    "requirements": {
     "build": [],
     "host": [],
     "run": [],
     "run_constrained": [
      "rust"
     ]
    },
    "script": "install-rust-std.sh",
    "test": {
     "commands": [
      "test -d $PREFIX/lib/rustlib",
      "echo powerpc64le-unknown-linux-gnu"
     ]
    }
   },
   {
    "build": {
     "binary_relocation": false,
     "missing_dso_whitelist": [
      "/lib64/librt.so.1",
      "/lib64/libdl.so.2",
      "/lib64/libpthread.so.0",
      "/lib64/libm.so.6",
      "/lib64/libc.so.6",
      "/lib64/ld-linux-x86-64.so.2"
     ]
    },
    "name": "rust",
    "requirements": {
     "build": [],
     "host": [
      "rust-std-powerpc64le-unknown-linux-gnu",
      "c_compiler_stub",
      "zlib"
     ],
     "run": [
      "rust-std-powerpc64le-unknown-linux-gnu",
      "gcc_impl_linux-ppc64le"
     ]
    },
    "run_exports": {
     "strong_constrains": null
    },
    "script": "install-rust.sh",
    "test": {
     "commands": [
      "rustc --help",
      "rustdoc --help",
      "cargo --help",
      "cargo --config registries.crates-io.protocol=\\\"sparse\\\" install --force xsv",
      "echo powerpc64le-unknown-linux-gnu"
     ],
     "requires": null
    }
   },
   {
    "build": {
     "noarch": "generic",
     "skip": true,
     "string": "unix_0"
    },
    "name": "rust-src",
    "requirements": {
     "build": [],
     "run": [
      "__unix"
     ],
     "run_constrained": [
      "rust"
     ]
    },
    "script": "install-rust-src.sh",
    "test": {
     "commands": [
      "test -f \"${PREFIX}\"/lib/rustlib/src/rust/Cargo.lock",
      "test \"$(ls \"${PREFIX}\"/lib/rustlib/)\" = \"$(printf \"manifest-rust-src\\nsrc\")\""
     ]
    }
   },
   {
    "build": {
     "noarch": "generic",
     "skip": true,
     "string": "unix_0"
    },
    "name": "rust-std-x86_64-linux-android",
    "requirements": {
     "build": [],
     "run": [
      "__unix"
     ],
     "run_constrained": [
      "rust"
     ]
    },
    "script": "install-rust-std-extra.sh",
    "test": {
     "commands": [
      "test -d $PREFIX/lib/rustlib/x86_64-linux-android",
      "test -f $PREFIX/lib/rustlib/manifest-rust-std-x86_64-linux-android",
      "test -z \"$(ls \"${PREFIX}\"/lib/rustlib/ | grep -v x86_64-linux-android)\"",
      "echo x86_64-linux-android"
     ]
    }
   }
  ],
  "package": {
   "name": "rust-split",
   "version": "1.72.1"
  },
  "requirements": {
   "build": [],
   "host": []
  },
  "source": [
   {
    "patches": [
     "0001-gh-106-install.sh-Perfomance-Use-more-shell-builtins.diff"
    ],
    "sha256": "9310df247efc072f2ca27354a875c4989cf3c29c9e545255a7472895d830163c",
    "url": "https://static.rust-lang.org/dist/rust-1.72.1-powerpc64le-unknown-linux-gnu.tar.gz"
   },
   {
    "folder": "rust-src",
    "sha256": "fb5629b21129c940daeb04a325df34b5dd7d6053c93fe3b3460794ef82012d69",
    "url": "https://static.rust-lang.org/dist/rust-src-1.72.1.tar.gz"
   }
  ]
 },
 "linux_ppc64le_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "rust-std-powerpc64le-unknown-linux-gnu",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "__unix",
    "gcc_impl_linux-ppc64le",
    "rust-std-powerpc64le-unknown-linux-gnu"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "dev_url": "https://doc.rust-lang.org/std/",
   "doc_url": "https://www.rust-lang.org/en-US/documentation.html",
   "home": "https://www.rust-lang.org",
   "license": "MIT",
   "license_file": [
    "LICENSE-APACHE",
    "LICENSE-MIT",
    "LICENSE-APACHE",
    "LICENSE-MIT",
    "LICENSE-APACHE",
    "LICENSE-MIT",
    "LICENSE-APACHE",
    "LICENSE-MIT",
    "LICENSE-APACHE",
    "LICENSE-MIT",
    "LICENSE-APACHE",
    "LICENSE-MIT"
   ],
   "summary": "Rust is a systems programming language that runs blazingly fast, prevents segfaults, and guarantees thread safety.\nThis package provides the compiler (rustc) and the documentation utilities rustdoc.\n"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "timkpaine",
    "xhochy",
    "johanneskoester",
    "abhi18av",
    "pkgw",
    "dlaehnemann",
    "isuruf",
    "mbargull",
    "timkpaine",
    "xhochy",
    "johanneskoester",
    "abhi18av",
    "pkgw",
    "dlaehnemann",
    "isuruf",
    "mbargull",
    "timkpaine",
    "xhochy",
    "johanneskoester",
    "abhi18av",
    "pkgw",
    "dlaehnemann",
    "isuruf",
    "mbargull",
    "timkpaine",
    "xhochy",
    "johanneskoester",
    "abhi18av",
    "pkgw",
    "dlaehnemann",
    "isuruf",
    "mbargull",
    "timkpaine",
    "xhochy",
    "johanneskoester",
    "abhi18av",
    "pkgw",
    "dlaehnemann",
    "isuruf",
    "mbargull",
    "timkpaine",
    "xhochy",
    "johanneskoester",
    "abhi18av",
    "pkgw",
    "dlaehnemann",
    "isuruf",
    "mbargull"
   ]
  },
  "outputs": [
   {
    "build": {
     "binary_relocation": false,
     "merge_build_host": false,
     "missing_dso_whitelist": [
      "/lib64/librt.so.1",
      "/lib64/libdl.so.2",
      "/lib64/libpthread.so.0",
      "/lib64/libm.so.6",
      "/lib64/libc.so.6",
      "/lib64/ld-linux-x86-64.so.2"
     ],
     "noarch": "generic"
    },
    "name": "rust-std-x86_64-unknown-linux-gnu",
    "requirements": {
     "build": [],
     "host": [],
     "run": [],
     "run_constrained": [
      "rust"
     ]
    },
    "script": "install-rust-std.sh",
    "test": {
     "commands": [
      "test -d $PREFIX/lib/rustlib",
      "echo x86_64-unknown-linux-gnu"
     ]
    }
   },
   {
    "build": {
     "binary_relocation": false,
     "missing_dso_whitelist": [
      "/lib64/librt.so.1",
      "/lib64/libdl.so.2",
      "/lib64/libpthread.so.0",
      "/lib64/libm.so.6",
      "/lib64/libc.so.6",
      "/lib64/ld-linux-x86-64.so.2"
     ]
    },
    "name": "rust",
    "requirements": {
     "build": [],
     "host": [
      "rust-std-x86_64-unknown-linux-gnu",
      "c_compiler_stub",
      "zlib"
     ],
     "run": [
      "rust-std-x86_64-unknown-linux-gnu",
      "gcc_impl_linux-64"
     ]
    },
    "run_exports": {
     "strong_constrains": null
    },
    "script": "install-rust.sh",
    "test": {
     "commands": [
      "rustc --help",
      "rustdoc --help",
      "cargo --help",
      "cargo --config registries.crates-io.protocol=\\\"sparse\\\" install --force xsv",
      "echo x86_64-unknown-linux-gnu"
     ],
     "requires": null
    }
   },
   {
    "build": {
     "noarch": "generic",
     "skip": false,
     "string": "unix_0"
    },
    "name": "rust-src",
    "requirements": {
     "build": [],
     "run": [
      "__unix"
     ],
     "run_constrained": [
      "rust"
     ]
    },
    "script": "install-rust-src.sh",
    "test": {
     "commands": [
      "test -f \"${PREFIX}\"/lib/rustlib/src/rust/Cargo.lock",
      "test \"$(ls \"${PREFIX}\"/lib/rustlib/)\" = \"$(printf \"manifest-rust-src\\nsrc\")\""
     ]
    }
   },
   {
    "build": {
     "noarch": "generic",
     "skip": false,
     "string": "unix_0"
    },
    "name": "rust-std-x86_64-linux-android",
    "requirements": {
     "build": [],
     "run": [
      "__unix"
     ],
     "run_constrained": [
      "rust"
     ]
    },
    "script": "install-rust-std-extra.sh",
    "test": {
     "commands": [
      "test -d $PREFIX/lib/rustlib/x86_64-linux-android",
      "test -f $PREFIX/lib/rustlib/manifest-rust-std-x86_64-linux-android",
      "test -z \"$(ls \"${PREFIX}\"/lib/rustlib/ | grep -v x86_64-linux-android)\"",
      "echo x86_64-linux-android"
     ]
    }
   },
   {
    "build": {
     "binary_relocation": false,
     "merge_build_host": false,
     "missing_dso_whitelist": [
      "/lib64/librt.so.1",
      "/lib64/libdl.so.2",
      "/lib64/libpthread.so.0",
      "/lib64/libm.so.6",
      "/lib64/libc.so.6",
      "/lib64/ld-linux-x86-64.so.2"
     ],
     "noarch": "generic"
    },
    "name": "rust-std-aarch64-unknown-linux-gnu",
    "requirements": {
     "build": [],
     "host": [],
     "run": [],
     "run_constrained": [
      "rust"
     ]
    },
    "script": "install-rust-std.sh",
    "test": {
     "commands": [
      "test -d $PREFIX/lib/rustlib",
      "echo aarch64-unknown-linux-gnu"
     ]
    }
   },
   {
    "build": {
     "binary_relocation": false,
     "missing_dso_whitelist": [
      "/lib64/librt.so.1",
      "/lib64/libdl.so.2",
      "/lib64/libpthread.so.0",
      "/lib64/libm.so.6",
      "/lib64/libc.so.6",
      "/lib64/ld-linux-x86-64.so.2"
     ]
    },
    "name": "rust",
    "requirements": {
     "build": [],
     "host": [
      "rust-std-aarch64-unknown-linux-gnu",
      "c_compiler_stub",
      "zlib"
     ],
     "run": [
      "rust-std-aarch64-unknown-linux-gnu",
      "gcc_impl_linux-aarch64"
     ]
    },
    "run_exports": {
     "strong_constrains": null
    },
    "script": "install-rust.sh",
    "test": {
     "commands": [
      "rustc --help",
      "rustdoc --help",
      "cargo --help",
      "cargo --config registries.crates-io.protocol=\\\"sparse\\\" install --force xsv",
      "echo aarch64-unknown-linux-gnu"
     ],
     "requires": null
    }
   },
   {
    "build": {
     "noarch": "generic",
     "skip": true,
     "string": "unix_0"
    },
    "name": "rust-src",
    "requirements": {
     "build": [],
     "run": [
      "__unix"
     ],
     "run_constrained": [
      "rust"
     ]
    },
    "script": "install-rust-src.sh",
    "test": {
     "commands": [
      "test -f \"${PREFIX}\"/lib/rustlib/src/rust/Cargo.lock",
      "test \"$(ls \"${PREFIX}\"/lib/rustlib/)\" = \"$(printf \"manifest-rust-src\\nsrc\")\""
     ]
    }
   },
   {
    "build": {
     "noarch": "generic",
     "skip": true,
     "string": "unix_0"
    },
    "name": "rust-std-x86_64-linux-android",
    "requirements": {
     "build": [],
     "run": [
      "__unix"
     ],
     "run_constrained": [
      "rust"
     ]
    },
    "script": "install-rust-std-extra.sh",
    "test": {
     "commands": [
      "test -d $PREFIX/lib/rustlib/x86_64-linux-android",
      "test -f $PREFIX/lib/rustlib/manifest-rust-std-x86_64-linux-android",
      "test -z \"$(ls \"${PREFIX}\"/lib/rustlib/ | grep -v x86_64-linux-android)\"",
      "echo x86_64-linux-android"
     ]
    }
   },
   {
    "build": {
     "binary_relocation": false,
     "merge_build_host": false,
     "missing_dso_whitelist": [
      "/lib64/librt.so.1",
      "/lib64/libdl.so.2",
      "/lib64/libpthread.so.0",
      "/lib64/libm.so.6",
      "/lib64/libc.so.6",
      "/lib64/ld-linux-x86-64.so.2"
     ],
     "noarch": "generic"
    },
    "name": "rust-std-powerpc64le-unknown-linux-gnu",
    "requirements": {
     "build": [],
     "host": [],
     "run": [],
     "run_constrained": [
      "rust"
     ]
    },
    "script": "install-rust-std.sh",
    "test": {
     "commands": [
      "test -d $PREFIX/lib/rustlib",
      "echo powerpc64le-unknown-linux-gnu"
     ]
    }
   },
   {
    "build": {
     "binary_relocation": false,
     "missing_dso_whitelist": [
      "/lib64/librt.so.1",
      "/lib64/libdl.so.2",
      "/lib64/libpthread.so.0",
      "/lib64/libm.so.6",
      "/lib64/libc.so.6",
      "/lib64/ld-linux-x86-64.so.2"
     ]
    },
    "name": "rust",
    "requirements": {
     "build": [],
     "host": [
      "rust-std-powerpc64le-unknown-linux-gnu",
      "c_compiler_stub",
      "zlib"
     ],
     "run": [
      "rust-std-powerpc64le-unknown-linux-gnu",
      "gcc_impl_linux-ppc64le"
     ]
    },
    "run_exports": {
     "strong_constrains": null
    },
    "script": "install-rust.sh",
    "test": {
     "commands": [
      "rustc --help",
      "rustdoc --help",
      "cargo --help",
      "cargo --config registries.crates-io.protocol=\\\"sparse\\\" install --force xsv",
      "echo powerpc64le-unknown-linux-gnu"
     ],
     "requires": null
    }
   },
   {
    "build": {
     "noarch": "generic",
     "skip": true,
     "string": "unix_0"
    },
    "name": "rust-src",
    "requirements": {
     "build": [],
     "run": [
      "__unix"
     ],
     "run_constrained": [
      "rust"
     ]
    },
    "script": "install-rust-src.sh",
    "test": {
     "commands": [
      "test -f \"${PREFIX}\"/lib/rustlib/src/rust/Cargo.lock",
      "test \"$(ls \"${PREFIX}\"/lib/rustlib/)\" = \"$(printf \"manifest-rust-src\\nsrc\")\""
     ]
    }
   },
   {
    "build": {
     "noarch": "generic",
     "skip": true,
     "string": "unix_0"
    },
    "name": "rust-std-x86_64-linux-android",
    "requirements": {
     "build": [],
     "run": [
      "__unix"
     ],
     "run_constrained": [
      "rust"
     ]
    },
    "script": "install-rust-std-extra.sh",
    "test": {
     "commands": [
      "test -d $PREFIX/lib/rustlib/x86_64-linux-android",
      "test -f $PREFIX/lib/rustlib/manifest-rust-std-x86_64-linux-android",
      "test -z \"$(ls \"${PREFIX}\"/lib/rustlib/ | grep -v x86_64-linux-android)\"",
      "echo x86_64-linux-android"
     ]
    }
   },
   {
    "build": {
     "binary_relocation": false,
     "merge_build_host": false,
     "noarch": "generic"
    },
    "name": "rust-std-x86_64-apple-darwin",
    "requirements": {
     "build": [],
     "host": [],
     "run": [],
     "run_constrained": [
      "rust"
     ]
    },
    "script": "install-rust-std.sh",
    "test": {
     "commands": [
      "test -d $PREFIX/lib/rustlib",
      "echo x86_64-apple-darwin"
     ]
    }
   },
   {
    "build": {
     "binary_relocation": false
    },
    "name": "rust",
    "requirements": {
     "build": [],
     "host": [
      "rust-std-x86_64-apple-darwin"
     ],
     "run": [
      "rust-std-x86_64-apple-darwin"
     ]
    },
    "run_exports": {
     "strong_constrains": [
      "__osx >=10.9"
     ]
    },
    "script": "install-rust.sh",
    "test": {
     "commands": [
      "rustc --help",
      "rustdoc --help",
      "cargo --help",
      "cargo --config registries.crates-io.protocol=\\\"sparse\\\" install --force xsv",
      "echo x86_64-apple-darwin"
     ],
     "requires": null
    }
   },
   {
    "build": {
     "noarch": "generic",
     "skip": true,
     "string": "unix_0"
    },
    "name": "rust-src",
    "requirements": {
     "build": [],
     "run": [
      "__unix"
     ],
     "run_constrained": [
      "rust"
     ]
    },
    "script": "install-rust-src.sh",
    "test": {
     "commands": [
      "test -f \"${PREFIX}\"/lib/rustlib/src/rust/Cargo.lock",
      "test \"$(ls \"${PREFIX}\"/lib/rustlib/)\" = \"$(printf \"manifest-rust-src\\nsrc\")\""
     ]
    }
   },
   {
    "build": {
     "noarch": "generic",
     "skip": true,
     "string": "unix_0"
    },
    "name": "rust-std-x86_64-linux-android",
    "requirements": {
     "build": [],
     "run": [
      "__unix"
     ],
     "run_constrained": [
      "rust"
     ]
    },
    "script": "install-rust-std-extra.sh",
    "test": {
     "commands": [
      "test -d $PREFIX/lib/rustlib/x86_64-linux-android",
      "test -f $PREFIX/lib/rustlib/manifest-rust-std-x86_64-linux-android",
      "test -z \"$(ls \"${PREFIX}\"/lib/rustlib/ | grep -v x86_64-linux-android)\"",
      "echo x86_64-linux-android"
     ]
    }
   },
   {
    "build": {
     "binary_relocation": false,
     "merge_build_host": false,
     "noarch": "generic"
    },
    "name": "rust-std-aarch64-apple-darwin",
    "requirements": {
     "build": [],
     "host": [],
     "run": [],
     "run_constrained": [
      "rust"
     ]
    },
    "script": "install-rust-std.sh",
    "test": {
     "commands": [
      "test -d $PREFIX/lib/rustlib",
      "echo aarch64-apple-darwin"
     ]
    }
   },
   {
    "build": {
     "binary_relocation": false
    },
    "name": "rust",
    "requirements": {
     "build": [],
     "host": [
      "rust-std-aarch64-apple-darwin"
     ],
     "run": [
      "rust-std-aarch64-apple-darwin"
     ]
    },
    "run_exports": {
     "strong_constrains": null
    },
    "script": "install-rust.sh",
    "test": {
     "commands": [
      "rustc --help",
      "rustdoc --help",
      "cargo --help",
      "cargo --config registries.crates-io.protocol=\\\"sparse\\\" install --force xsv",
      "echo aarch64-apple-darwin"
     ],
     "requires": null
    }
   },
   {
    "build": {
     "noarch": "generic",
     "skip": true,
     "string": "unix_0"
    },
    "name": "rust-src",
    "requirements": {
     "build": [],
     "run": [
      "__unix"
     ],
     "run_constrained": [
      "rust"
     ]
    },
    "script": "install-rust-src.sh",
    "test": {
     "commands": [
      "test -f \"${PREFIX}\"/lib/rustlib/src/rust/Cargo.lock",
      "test \"$(ls \"${PREFIX}\"/lib/rustlib/)\" = \"$(printf \"manifest-rust-src\\nsrc\")\""
     ]
    }
   },
   {
    "build": {
     "noarch": "generic",
     "skip": true,
     "string": "unix_0"
    },
    "name": "rust-std-x86_64-linux-android",
    "requirements": {
     "build": [],
     "run": [
      "__unix"
     ],
     "run_constrained": [
      "rust"
     ]
    },
    "script": "install-rust-std-extra.sh",
    "test": {
     "commands": [
      "test -d $PREFIX/lib/rustlib/x86_64-linux-android",
      "test -f $PREFIX/lib/rustlib/manifest-rust-std-x86_64-linux-android",
      "test -z \"$(ls \"${PREFIX}\"/lib/rustlib/ | grep -v x86_64-linux-android)\"",
      "echo x86_64-linux-android"
     ]
    }
   },
   {
    "build": {
     "binary_relocation": false,
     "merge_build_host": false,
     "noarch": "generic"
    },
    "name": "rust-std-x86_64-pc-windows-msvc",
    "requirements": {
     "build": [
      "posix"
     ],
     "host": [],
     "run": [],
     "run_constrained": [
      "rust"
     ]
    },
    "script": "install-rust-std.bat",
    "test": {
     "commands": [
      "if not exist %LIBRARY_PREFIX%/lib/rustlib exit 1",
      "echo x86_64-pc-windows-msvc"
     ]
    }
   },
   {
    "build": {
     "binary_relocation": false
    },
    "name": "rust",
    "requirements": {
     "build": [
      "posix"
     ],
     "host": [
      "rust-std-x86_64-pc-windows-msvc"
     ],
     "run": [
      "rust-std-x86_64-pc-windows-msvc"
     ]
    },
    "run_exports": {
     "strong_constrains": null
    },
    "script": "install-rust.bat",
    "test": {
     "commands": [
      "rustc --help",
      "rustdoc --help",
      "cargo --help",
      "cargo --config registries.crates-io.protocol=\\\"sparse\\\" install --force xsv",
      "echo x86_64-pc-windows-msvc",
      "if exist %LIBRARY_PREFIX%\\share\\doc\\rust\\html\\sysroot exit 1"
     ],
     "requires": [
      "posix"
     ]
    }
   },
   {
    "build": {
     "noarch": "generic",
     "skip": false,
     "string": "win_0"
    },
    "name": "rust-src",
    "requirements": {
     "build": [
      "posix"
     ],
     "run": [
      "__win"
     ],
     "run_constrained": [
      "rust"
     ]
    },
    "script": "install-rust-src.bat",
    "test": {
     "commands": [
      "if not exist \"%LIBRARY_PREFIX%/lib/rustlib/src/rust/Cargo.lock\" exit 1",
      "if not exist \"%LIBRARY_PREFIX%/lib/rustlib/manifest-rust-src\" exit 1",
      "if not exist \"%LIBRARY_PREFIX%/lib/rustlib/src\" exit 1"
     ]
    }
   },
   {
    "build": {
     "noarch": "generic",
     "skip": false,
     "string": "win_0"
    },
    "name": "rust-std-x86_64-linux-android",
    "requirements": {
     "build": [
      "posix"
     ],
     "run": [
      "__win"
     ],
     "run_constrained": [
      "rust"
     ]
    },
    "script": "install-rust-std-extra.bat",
    "test": {
     "commands": [
      "if not exist \"%LIBRARY_PREFIX%/lib/rustlib/x86_64-linux-android\" exit 1",
      "if not exist \"%LIBRARY_PREFIX%/lib/rustlib/manifest-rust-std-x86_64-linux-android\" exit 1",
      "dir /b \"%LIBRARY_PREFIX%\" | findstr /v \"x86_64-linux-android\" >nul || exit 1",
      "echo x86_64-linux-android"
     ]
    }
   }
  ],
  "package": {
   "name": "rust-split",
   "version": "1.72.1"
  },
  "requirements": {
   "build": [
    "posix"
   ],
   "host": []
  },
  "source": [
   {
    "patches": [
     "0001-gh-106-install.sh-Perfomance-Use-more-shell-builtins.diff"
    ],
    "sha256": "4fbd8df2000cf73c632d67a219a7fc153537ceffa2e6474491e3db71fdd5a410",
    "url": "https://static.rust-lang.org/dist/rust-1.72.1-x86_64-unknown-linux-gnu.tar.gz"
   },
   {
    "folder": "rust-src",
    "sha256": "fb5629b21129c940daeb04a325df34b5dd7d6053c93fe3b3460794ef82012d69",
    "url": "https://static.rust-lang.org/dist/rust-src-1.72.1.tar.gz"
   },
   {
    "folder": "rust-std",
    "sha256": "0e5380f9640ea0c306e07007de3a48fdcc0cd8331ff60cfad37e55444a170876",
    "url": "https://static.rust-lang.org/dist/rust-std-1.72.1-aarch64-apple-ios.tar.gz"
   },
   {
    "folder": "rust-std",
    "sha256": "0c71ae4204eaf75cbc22459a64917ee364e98f66b2a9adae08899997cc3da741",
    "url": "https://static.rust-lang.org/dist/rust-std-1.72.1-x86_64-apple-ios.tar.gz"
   },
   {
    "folder": "rust-std",
    "sha256": "254465a91cd90de2cc1a909a5a2925deca3e104502e175b1fd7760d2111eaa07",
    "url": "https://static.rust-lang.org/dist/rust-std-1.72.1-aarch64-apple-ios-sim.tar.gz"
   },
   {
    "folder": "rust-std",
    "sha256": "41911d98eba3816e25550a0c8a7e9721ef1bc2369bba41c3b1d0fb0e065364aa",
    "url": "https://static.rust-lang.org/dist/rust-std-1.72.1-aarch64-linux-android.tar.gz"
   },
   {
    "folder": "rust-std",
    "sha256": "7915389b8e506c0a6334c31d043a3a40d8503b539cee64c2afd176ce00fabf94",
    "url": "https://static.rust-lang.org/dist/rust-std-1.72.1-arm-linux-androideabi.tar.gz"
   },
   {
    "folder": "rust-std",
    "sha256": "77f451df32f1623e0e4af5dbeec87e5cb4868e8e42e015f523bcb0ebe4fb1613",
    "url": "https://static.rust-lang.org/dist/rust-std-1.72.1-armv7-linux-androideabi.tar.gz"
   },
   {
    "folder": "rust-std",
    "sha256": "cc5723faad8519d733f5acfdb4451878538feddfc7d9ba13baf7e9a2880c8cef",
    "url": "https://static.rust-lang.org/dist/rust-std-1.72.1-i686-linux-android.tar.gz"
   },
   {
    "folder": "rust-std",
    "sha256": "17a87c8b1fc9e77609a7a7f330429b21f91e1a01ba95be7f2ada07ddd260795a",
    "url": "https://static.rust-lang.org/dist/rust-std-1.72.1-x86_64-linux-android.tar.gz"
   },
   {
    "folder": "rust-std",
    "sha256": "32e49d571a36dfd1440f48d97c5451780b5b12186ff6b60293f1a06231132932",
    "url": "https://static.rust-lang.org/dist/rust-std-1.72.1-wasm32-unknown-unknown.tar.gz"
   },
   {
    "patches": [
     "0001-gh-106-install.sh-Perfomance-Use-more-shell-builtins.diff"
    ],
    "sha256": "40c905d1093d464857f05d37e4ccdfa059baaee9bc5295882f0148c7725633b8",
    "url": "https://static.rust-lang.org/dist/rust-1.72.1-aarch64-unknown-linux-gnu.tar.xz"
   },
   {
    "folder": "rust-src",
    "sha256": "fb5629b21129c940daeb04a325df34b5dd7d6053c93fe3b3460794ef82012d69",
    "url": "https://static.rust-lang.org/dist/rust-src-1.72.1.tar.gz"
   },
   {
    "patches": [
     "0001-gh-106-install.sh-Perfomance-Use-more-shell-builtins.diff"
    ],
    "sha256": "9310df247efc072f2ca27354a875c4989cf3c29c9e545255a7472895d830163c",
    "url": "https://static.rust-lang.org/dist/rust-1.72.1-powerpc64le-unknown-linux-gnu.tar.gz"
   },
   {
    "folder": "rust-src",
    "sha256": "fb5629b21129c940daeb04a325df34b5dd7d6053c93fe3b3460794ef82012d69",
    "url": "https://static.rust-lang.org/dist/rust-src-1.72.1.tar.gz"
   },
   {
    "patches": [
     "0001-gh-106-install.sh-Perfomance-Use-more-shell-builtins.diff"
    ],
    "sha256": "d01e7e9a7482f88a51b4fd888f06234274b49f51b5476c2d14fd46fd6e99ba9e",
    "url": "https://static.rust-lang.org/dist/rust-1.72.1-x86_64-apple-darwin.tar.gz"
   },
   {
    "folder": "rust-src",
    "sha256": "fb5629b21129c940daeb04a325df34b5dd7d6053c93fe3b3460794ef82012d69",
    "url": "https://static.rust-lang.org/dist/rust-src-1.72.1.tar.gz"
   },
   {
    "patches": [
     "0001-gh-106-install.sh-Perfomance-Use-more-shell-builtins.diff"
    ],
    "sha256": "42b0aaf269b6d9c60db13a64a920336d6064ab11d0c7043c9deeb9d4f67b3983",
    "url": "https://static.rust-lang.org/dist/rust-1.72.1-aarch64-apple-darwin.tar.gz"
   },
   {
    "folder": "rust-src",
    "sha256": "fb5629b21129c940daeb04a325df34b5dd7d6053c93fe3b3460794ef82012d69",
    "url": "https://static.rust-lang.org/dist/rust-src-1.72.1.tar.gz"
   },
   {
    "patches": [
     "0001-gh-106-install.sh-Perfomance-Use-more-shell-builtins.diff"
    ],
    "sha256": "8c0619ce598f8d8878d594fcc77eb0dcbebeaffae75ae50481d066873f659974",
    "url": "https://static.rust-lang.org/dist/rust-1.72.1-x86_64-pc-windows-msvc.tar.gz"
   },
   {
    "folder": "rust-src",
    "sha256": "fb5629b21129c940daeb04a325df34b5dd7d6053c93fe3b3460794ef82012d69",
    "url": "https://static.rust-lang.org/dist/rust-src-1.72.1.tar.gz"
   },
   {
    "folder": "rust-std",
    "sha256": "0e5380f9640ea0c306e07007de3a48fdcc0cd8331ff60cfad37e55444a170876",
    "url": "https://static.rust-lang.org/dist/rust-std-1.72.1-aarch64-apple-ios.tar.gz"
   },
   {
    "folder": "rust-std",
    "sha256": "0c71ae4204eaf75cbc22459a64917ee364e98f66b2a9adae08899997cc3da741",
    "url": "https://static.rust-lang.org/dist/rust-std-1.72.1-x86_64-apple-ios.tar.gz"
   },
   {
    "folder": "rust-std",
    "sha256": "254465a91cd90de2cc1a909a5a2925deca3e104502e175b1fd7760d2111eaa07",
    "url": "https://static.rust-lang.org/dist/rust-std-1.72.1-aarch64-apple-ios-sim.tar.gz"
   },
   {
    "folder": "rust-std",
    "sha256": "41911d98eba3816e25550a0c8a7e9721ef1bc2369bba41c3b1d0fb0e065364aa",
    "url": "https://static.rust-lang.org/dist/rust-std-1.72.1-aarch64-linux-android.tar.gz"
   },
   {
    "folder": "rust-std",
    "sha256": "7915389b8e506c0a6334c31d043a3a40d8503b539cee64c2afd176ce00fabf94",
    "url": "https://static.rust-lang.org/dist/rust-std-1.72.1-arm-linux-androideabi.tar.gz"
   },
   {
    "folder": "rust-std",
    "sha256": "77f451df32f1623e0e4af5dbeec87e5cb4868e8e42e015f523bcb0ebe4fb1613",
    "url": "https://static.rust-lang.org/dist/rust-std-1.72.1-armv7-linux-androideabi.tar.gz"
   },
   {
    "folder": "rust-std",
    "sha256": "cc5723faad8519d733f5acfdb4451878538feddfc7d9ba13baf7e9a2880c8cef",
    "url": "https://static.rust-lang.org/dist/rust-std-1.72.1-i686-linux-android.tar.gz"
   },
   {
    "folder": "rust-std",
    "sha256": "17a87c8b1fc9e77609a7a7f330429b21f91e1a01ba95be7f2ada07ddd260795a",
    "url": "https://static.rust-lang.org/dist/rust-std-1.72.1-x86_64-linux-android.tar.gz"
   },
   {
    "folder": "rust-std",
    "sha256": "32e49d571a36dfd1440f48d97c5451780b5b12186ff6b60293f1a06231132932",
    "url": "https://static.rust-lang.org/dist/rust-std-1.72.1-wasm32-unknown-unknown.tar.gz"
   }
  ]
 },
 "name": "rust-split",
 "osx_64_meta_yaml": {
  "about": {
   "dev_url": "https://doc.rust-lang.org/std/",
   "doc_url": "https://www.rust-lang.org/en-US/documentation.html",
   "home": "https://www.rust-lang.org",
   "license": "MIT",
   "license_file": [
    "LICENSE-APACHE",
    "LICENSE-MIT"
   ],
   "summary": "Rust is a systems programming language that runs blazingly fast, prevents segfaults, and guarantees thread safety.\nThis package provides the compiler (rustc) and the documentation utilities rustdoc.\n"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "timkpaine",
    "xhochy",
    "johanneskoester",
    "abhi18av",
    "pkgw",
    "dlaehnemann",
    "isuruf",
    "mbargull"
   ]
  },
  "outputs": [
   {
    "build": {
     "binary_relocation": false,
     "merge_build_host": false,
     "noarch": "generic"
    },
    "name": "rust-std-x86_64-apple-darwin",
    "requirements": {
     "build": [],
     "host": [],
     "run": [],
     "run_constrained": [
      "rust"
     ]
    },
    "script": "install-rust-std.sh",
    "test": {
     "commands": [
      "test -d $PREFIX/lib/rustlib",
      "echo x86_64-apple-darwin"
     ]
    }
   },
   {
    "build": {
     "binary_relocation": false
    },
    "name": "rust",
    "requirements": {
     "build": [],
     "host": [
      "rust-std-x86_64-apple-darwin"
     ],
     "run": [
      "rust-std-x86_64-apple-darwin"
     ]
    },
    "run_exports": {
     "strong_constrains": [
      "__osx >=10.9"
     ]
    },
    "script": "install-rust.sh",
    "test": {
     "commands": [
      "rustc --help",
      "rustdoc --help",
      "cargo --help",
      "cargo --config registries.crates-io.protocol=\\\"sparse\\\" install --force xsv",
      "echo x86_64-apple-darwin"
     ],
     "requires": null
    }
   },
   {
    "build": {
     "noarch": "generic",
     "skip": true,
     "string": "unix_0"
    },
    "name": "rust-src",
    "requirements": {
     "build": [],
     "run": [
      "__unix"
     ],
     "run_constrained": [
      "rust"
     ]
    },
    "script": "install-rust-src.sh",
    "test": {
     "commands": [
      "test -f \"${PREFIX}\"/lib/rustlib/src/rust/Cargo.lock",
      "test \"$(ls \"${PREFIX}\"/lib/rustlib/)\" = \"$(printf \"manifest-rust-src\\nsrc\")\""
     ]
    }
   },
   {
    "build": {
     "noarch": "generic",
     "skip": true,
     "string": "unix_0"
    },
    "name": "rust-std-x86_64-linux-android",
    "requirements": {
     "build": [],
     "run": [
      "__unix"
     ],
     "run_constrained": [
      "rust"
     ]
    },
    "script": "install-rust-std-extra.sh",
    "test": {
     "commands": [
      "test -d $PREFIX/lib/rustlib/x86_64-linux-android",
      "test -f $PREFIX/lib/rustlib/manifest-rust-std-x86_64-linux-android",
      "test -z \"$(ls \"${PREFIX}\"/lib/rustlib/ | grep -v x86_64-linux-android)\"",
      "echo x86_64-linux-android"
     ]
    }
   }
  ],
  "package": {
   "name": "rust-split",
   "version": "1.72.1"
  },
  "requirements": {
   "build": [],
   "host": []
  },
  "source": [
   {
    "patches": [
     "0001-gh-106-install.sh-Perfomance-Use-more-shell-builtins.diff"
    ],
    "sha256": "d01e7e9a7482f88a51b4fd888f06234274b49f51b5476c2d14fd46fd6e99ba9e",
    "url": "https://static.rust-lang.org/dist/rust-1.72.1-x86_64-apple-darwin.tar.gz"
   },
   {
    "folder": "rust-src",
    "sha256": "fb5629b21129c940daeb04a325df34b5dd7d6053c93fe3b3460794ef82012d69",
    "url": "https://static.rust-lang.org/dist/rust-src-1.72.1.tar.gz"
   }
  ]
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "rust-std-x86_64-apple-darwin"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "__unix",
    "rust-std-x86_64-apple-darwin"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "osx_arm64_meta_yaml": {
  "about": {
   "dev_url": "https://doc.rust-lang.org/std/",
   "doc_url": "https://www.rust-lang.org/en-US/documentation.html",
   "home": "https://www.rust-lang.org",
   "license": "MIT",
   "license_file": [
    "LICENSE-APACHE",
    "LICENSE-MIT"
   ],
   "summary": "Rust is a systems programming language that runs blazingly fast, prevents segfaults, and guarantees thread safety.\nThis package provides the compiler (rustc) and the documentation utilities rustdoc.\n"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "timkpaine",
    "xhochy",
    "johanneskoester",
    "abhi18av",
    "pkgw",
    "dlaehnemann",
    "isuruf",
    "mbargull"
   ]
  },
  "outputs": [
   {
    "build": {
     "binary_relocation": false,
     "merge_build_host": false,
     "noarch": "generic"
    },
    "name": "rust-std-aarch64-apple-darwin",
    "requirements": {
     "build": [],
     "host": [],
     "run": [],
     "run_constrained": [
      "rust"
     ]
    },
    "script": "install-rust-std.sh",
    "test": {
     "commands": [
      "test -d $PREFIX/lib/rustlib",
      "echo aarch64-apple-darwin"
     ]
    }
   },
   {
    "build": {
     "binary_relocation": false
    },
    "name": "rust",
    "requirements": {
     "build": [],
     "host": [
      "rust-std-aarch64-apple-darwin"
     ],
     "run": [
      "rust-std-aarch64-apple-darwin"
     ]
    },
    "run_exports": {
     "strong_constrains": null
    },
    "script": "install-rust.sh",
    "test": {
     "commands": [
      "rustc --help",
      "rustdoc --help",
      "cargo --help",
      "cargo --config registries.crates-io.protocol=\\\"sparse\\\" install --force xsv",
      "echo aarch64-apple-darwin"
     ],
     "requires": null
    }
   },
   {
    "build": {
     "noarch": "generic",
     "skip": true,
     "string": "unix_0"
    },
    "name": "rust-src",
    "requirements": {
     "build": [],
     "run": [
      "__unix"
     ],
     "run_constrained": [
      "rust"
     ]
    },
    "script": "install-rust-src.sh",
    "test": {
     "commands": [
      "test -f \"${PREFIX}\"/lib/rustlib/src/rust/Cargo.lock",
      "test \"$(ls \"${PREFIX}\"/lib/rustlib/)\" = \"$(printf \"manifest-rust-src\\nsrc\")\""
     ]
    }
   },
   {
    "build": {
     "noarch": "generic",
     "skip": true,
     "string": "unix_0"
    },
    "name": "rust-std-x86_64-linux-android",
    "requirements": {
     "build": [],
     "run": [
      "__unix"
     ],
     "run_constrained": [
      "rust"
     ]
    },
    "script": "install-rust-std-extra.sh",
    "test": {
     "commands": [
      "test -d $PREFIX/lib/rustlib/x86_64-linux-android",
      "test -f $PREFIX/lib/rustlib/manifest-rust-std-x86_64-linux-android",
      "test -z \"$(ls \"${PREFIX}\"/lib/rustlib/ | grep -v x86_64-linux-android)\"",
      "echo x86_64-linux-android"
     ]
    }
   }
  ],
  "package": {
   "name": "rust-split",
   "version": "1.72.1"
  },
  "requirements": {
   "build": [],
   "host": []
  },
  "source": [
   {
    "patches": [
     "0001-gh-106-install.sh-Perfomance-Use-more-shell-builtins.diff"
    ],
    "sha256": "42b0aaf269b6d9c60db13a64a920336d6064ab11d0c7043c9deeb9d4f67b3983",
    "url": "https://static.rust-lang.org/dist/rust-1.72.1-aarch64-apple-darwin.tar.gz"
   },
   {
    "folder": "rust-src",
    "sha256": "fb5629b21129c940daeb04a325df34b5dd7d6053c93fe3b3460794ef82012d69",
    "url": "https://static.rust-lang.org/dist/rust-src-1.72.1.tar.gz"
   }
  ]
 },
 "osx_arm64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "rust-std-aarch64-apple-darwin"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "__unix",
    "rust-std-aarch64-apple-darwin"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "rust",
   "rust-src",
   "rust-std-aarch64-apple-darwin",
   "rust-std-aarch64-unknown-linux-gnu",
   "rust-std-powerpc64le-unknown-linux-gnu",
   "rust-std-x86_64-apple-darwin",
   "rust-std-x86_64-linux-android",
   "rust-std-x86_64-pc-windows-msvc",
   "rust-std-x86_64-unknown-linux-gnu"
  ]
 },
 "parsing_error": false,
 "platforms": [
  "linux_64",
  "linux_aarch64",
  "linux_ppc64le",
  "osx_64",
  "osx_arm64",
  "win_64"
 ],
 "pr_info": {
  "__lazy_json__": "pr_info/rust.json"
 },
 "raw_meta_yaml": "{% set version = \"1.72.1\" %}\n\npackage:\n  name: rust-split\n  version: {{ version }}\n\nsource:\n  # Note! This source file specification is structured specifically to interact\n  # well with the autotick bot. Importantly, the `patches:` block actually\n  # applies to *all* of these inputs, not just the last one in the list, because\n  # of the way that the YAML selector processing works.\n  - url: https://static.rust-lang.org/dist/rust-{{ version }}-x86_64-unknown-linux-gnu.tar.gz  # [linux and x86_64]\n    sha256: 4fbd8df2000cf73c632d67a219a7fc153537ceffa2e6474491e3db71fdd5a410  # [linux and x86_64]\n  - url: https://static.rust-lang.org/dist/rust-{{ version }}-aarch64-unknown-linux-gnu.tar.xz  # [aarch64]\n    sha256: 40c905d1093d464857f05d37e4ccdfa059baaee9bc5295882f0148c7725633b8  # [aarch64]\n  - url: https://static.rust-lang.org/dist/rust-{{ version }}-powerpc64le-unknown-linux-gnu.tar.gz  # [ppc64le]\n    sha256: 9310df247efc072f2ca27354a875c4989cf3c29c9e545255a7472895d830163c  # [ppc64le]\n  - url: https://static.rust-lang.org/dist/rust-{{ version }}-x86_64-apple-darwin.tar.gz  # [osx and x86_64]\n    sha256: d01e7e9a7482f88a51b4fd888f06234274b49f51b5476c2d14fd46fd6e99ba9e  # [osx and x86_64]\n  - url: https://static.rust-lang.org/dist/rust-{{ version }}-aarch64-apple-darwin.tar.gz  # [osx and arm64]\n    sha256: 42b0aaf269b6d9c60db13a64a920336d6064ab11d0c7043c9deeb9d4f67b3983  # [osx and arm64]\n  - url: https://static.rust-lang.org/dist/rust-{{ version }}-x86_64-pc-windows-msvc.tar.gz  # [win64]\n    sha256: 8c0619ce598f8d8878d594fcc77eb0dcbebeaffae75ae50481d066873f659974  # [win64]\n    patches:\n      - 0001-gh-106-install.sh-Perfomance-Use-more-shell-builtins.diff\n  # End of block of primary source files.\n  - url: https://static.rust-lang.org/dist/rust-src-{{ version }}.tar.gz\n    sha256: fb5629b21129c940daeb04a325df34b5dd7d6053c93fe3b3460794ef82012d69\n    folder: rust-src\n  - url: https://static.rust-lang.org/dist/rust-std-{{ version }}-aarch64-apple-ios.tar.gz  # [(linux or win) and x86_64]\n    sha256: 0e5380f9640ea0c306e07007de3a48fdcc0cd8331ff60cfad37e55444a170876  # [(linux or win) and x86_64]\n    folder: rust-std  # [(linux or win) and x86_64]\n  - url: https://static.rust-lang.org/dist/rust-std-{{ version }}-x86_64-apple-ios.tar.gz  # [(linux or win) and x86_64]\n    sha256: 0c71ae4204eaf75cbc22459a64917ee364e98f66b2a9adae08899997cc3da741  # [(linux or win) and x86_64]\n    folder: rust-std  # [(linux or win) and x86_64]\n  - url: https://static.rust-lang.org/dist/rust-std-{{ version }}-aarch64-apple-ios-sim.tar.gz  # [(linux or win) and x86_64]\n    sha256: 254465a91cd90de2cc1a909a5a2925deca3e104502e175b1fd7760d2111eaa07  # [(linux or win) and x86_64]\n    folder: rust-std  # [(linux or win) and x86_64]\n  - url: https://static.rust-lang.org/dist/rust-std-{{ version }}-aarch64-linux-android.tar.gz  # [(linux or win) and x86_64]\n    sha256: 41911d98eba3816e25550a0c8a7e9721ef1bc2369bba41c3b1d0fb0e065364aa  # [(linux or win) and x86_64]\n    folder: rust-std  # [(linux or win) and x86_64]\n  - url: https://static.rust-lang.org/dist/rust-std-{{ version }}-arm-linux-androideabi.tar.gz  # [(linux or win) and x86_64]\n    sha256: 7915389b8e506c0a6334c31d043a3a40d8503b539cee64c2afd176ce00fabf94  # [(linux or win) and x86_64]\n    folder: rust-std  # [(linux or win) and x86_64]\n  - url: https://static.rust-lang.org/dist/rust-std-{{ version }}-armv7-linux-androideabi.tar.gz  # [(linux or win) and x86_64]\n    sha256: 77f451df32f1623e0e4af5dbeec87e5cb4868e8e42e015f523bcb0ebe4fb1613  # [(linux or win) and x86_64]\n    folder: rust-std  # [(linux or win) and x86_64]\n  - url: https://static.rust-lang.org/dist/rust-std-{{ version }}-i686-linux-android.tar.gz  # [(linux or win) and x86_64]\n    sha256: cc5723faad8519d733f5acfdb4451878538feddfc7d9ba13baf7e9a2880c8cef  # [(linux or win) and x86_64]\n    folder: rust-std  # [(linux or win) and x86_64]\n  - url: https://static.rust-lang.org/dist/rust-std-{{ version }}-x86_64-linux-android.tar.gz  # [(linux or win) and x86_64]\n    sha256: 17a87c8b1fc9e77609a7a7f330429b21f91e1a01ba95be7f2ada07ddd260795a  # [(linux or win) and x86_64]\n    folder: rust-std  # [(linux or win) and x86_64]\n  - url: https://static.rust-lang.org/dist/rust-std-{{ version }}-wasm32-unknown-unknown.tar.gz  # [(linux or win) and x86_64]\n    sha256: 32e49d571a36dfd1440f48d97c5451780b5b12186ff6b60293f1a06231132932  # [(linux or win) and x86_64]\n    folder: rust-std  # [(linux or win) and x86_64]\n\nbuild:\n  number: 0\n\nrequirements:\n  build:\n    - posix  # [win]\n  host:\n\noutputs:\n  - name: rust-std-{{ rust_arch }}\n    build:\n      noarch: generic\n      binary_relocation: false\n      missing_dso_whitelist:   # [linux]\n        - /lib64/librt.so.1  # [linux]\n        - /lib64/libdl.so.2  # [linux]\n        - /lib64/libpthread.so.0  # [linux]\n        - /lib64/libm.so.6  # [linux]\n        - /lib64/libc.so.6  # [linux]\n        - /lib64/ld-linux-x86-64.so.2  # [linux]\n      merge_build_host: false\n    requirements:\n      build:\n        - posix  # [win]\n      host:\n      run:\n      run_constrained:\n        # Having different versions of rust-std and rust is confusing.\n        - {{ pin_subpackage(\"rust\", min_pin=\"x.x.x\", max_pin=\"x.x.x\") }}\n    script: install-rust-std.sh  # [unix]\n    script: install-rust-std.bat  # [win]\n    test:\n      commands:\n        - test -d $PREFIX/lib/rustlib   # [unix]\n        - if not exist %LIBRARY_PREFIX%/lib/rustlib exit 1  # [win]\n        - echo {{ rust_arch }}\n\n  - name: rust\n    script: install-rust.sh  # [unix]\n    script: install-rust.bat  # [win]\n    build:\n      # the distributed binaries are already relocatable\n      binary_relocation: false\n      missing_dso_whitelist:   # [linux]\n        - /lib64/librt.so.1  # [linux]\n        - /lib64/libdl.so.2  # [linux]\n        - /lib64/libpthread.so.0  # [linux]\n        - /lib64/libm.so.6  # [linux]\n        - /lib64/libc.so.6  # [linux]\n        - /lib64/ld-linux-x86-64.so.2  # [linux]\n        # Added as run deps: libgcc-ng (via compiler strong run_exports), zlib\n        # - /lib64/libgcc_s.so.1  # [linux]\n        # - /lib64/libz.so.1  # [linux]\n    run_exports:\n      strong_constrains:\n        - __osx >={{ MACOSX_DEPLOYMENT_TARGET|default(\"10.9\") }}  # [osx and x86_64]\n    requirements:\n      build:\n        - posix  # [win]\n      host:\n        - {{ pin_subpackage(\"rust-std-\" ~ rust_arch, exact=True) }}\n        - {{ compiler('c') }}  # [linux] -- rustc needs a toolchain to link executables\n        # zlib is linked by **/lib/libLLVM-*-rust-*.so\n        - zlib  # [linux]\n      run:\n        - {{ pin_subpackage(\"rust-std-\" ~ rust_arch, exact=True) }}\n        - gcc_impl_{{ target_platform }}  # [linux]\n    test:\n      requires:\n        - posix  # [win]\n      commands:\n        - rustc --help\n        - rustdoc --help\n        - cargo --help\n        - cargo --config registries.crates-io.protocol=\\\"sparse\\\" install --force xsv\n        - echo {{ rust_arch }}\n        - if exist %LIBRARY_PREFIX%\\share\\doc\\rust\\html\\sysroot exit 1  # [win]\n\n  - name: rust-src\n    script: install-rust-src.sh  # [unix]\n    script: install-rust-src.bat  # [win]\n    build:\n      skip: {{ rust_arch != \"x86_64-unknown-linux-gnu\" and rust_arch != \"x86_64-pc-windows-msvc\" }}\n      noarch: generic\n      # Need conda-build >=3.25 to have different hashes. Remove when conda-build 3.25 is out.\n      string: unix_{{ PKG_BUILDNUM }}  # [unix]\n      string: win_{{ PKG_BUILDNUM }}  # [win]\n    requirements:\n      build:\n        - posix  # [win]\n      run:\n        - __win   # [win]\n        - __unix  # [unix]\n      run_constrained:\n        # Having different versions of rust-src and rust is confusing.\n        # `rust-src` is specific to the toolchain in `rustup`,\n        # and we would like to keep that behavior.\n        - {{ pin_subpackage(\"rust\", min_pin=\"x.x.x\", max_pin=\"x.x.x\") }}\n    test:\n      commands:\n        - test -f \"${PREFIX}\"/lib/rustlib/src/rust/Cargo.lock  # [unix]\n        - if not exist \"%LIBRARY_PREFIX%/lib/rustlib/src/rust/Cargo.lock\" exit 1  # [win]\n        # Make sure that the outputs do not clobber with other rust components\n        - test \"$(ls \"${PREFIX}\"/lib/rustlib/)\" = \"$(printf \"manifest-rust-src\\nsrc\")\"  # [unix]\n        - if not exist \"%LIBRARY_PREFIX%/lib/rustlib/manifest-rust-src\" exit 1  # [win]\n        - if not exist \"%LIBRARY_PREFIX%/lib/rustlib/src\" exit 1  # [win]\n\n\n  - name: rust-std-{{ rust_std_extra }}\n    script: install-rust-std-extra.sh  # [unix]\n    script: install-rust-std-extra.bat  # [win]\n    build:\n      skip: {{ rust_arch != \"x86_64-unknown-linux-gnu\" and rust_arch != \"x86_64-pc-windows-msvc\" }}\n      noarch: generic\n      # Need conda-build >=3.25 to have different hashes. Remove when conda-build 3.25 is out.\n      string: unix_{{ PKG_BUILDNUM }}  # [unix]\n      string: win_{{ PKG_BUILDNUM }}  # [win]\n    requirements:\n      build:\n        - posix  # [win]\n      run:\n        - __win   # [win]\n        - __unix  # [unix]\n      run_constrained:\n        # Having different versions of rust-std and rust is confusing.\n        - {{ pin_subpackage(\"rust\", min_pin=\"x.x.x\", max_pin=\"x.x.x\") }}\n    test:\n      commands:\n        - test -d $PREFIX/lib/rustlib/{{ rust_std_extra }}  # [unix]\n        - if not exist \"%LIBRARY_PREFIX%/lib/rustlib/{{ rust_std_extra }}\" exit 1  # [win]\n        - test -f $PREFIX/lib/rustlib/manifest-rust-std-{{ rust_std_extra }}  # [unix]\n        - if not exist \"%LIBRARY_PREFIX%/lib/rustlib/manifest-rust-std-{{ rust_std_extra }}\" exit 1  # [win]\n        # Make sure that the outputs do not clobber with other rust components\n        - test -z \"$(ls \"${PREFIX}\"/lib/rustlib/ | grep -v {{ rust_std_extra }})\"  # [unix]\n        - dir /b \"%LIBRARY_PREFIX%\" | findstr /v \"{{ rust_std_extra }}\" >nul || exit 1  # [win]\n        - echo {{ rust_std_extra }}\n\nabout:\n  home: https://www.rust-lang.org\n  license: MIT\n  license_file:\n    - LICENSE-APACHE\n    - LICENSE-MIT\n  summary: |\n    Rust is a systems programming language that runs blazingly fast, prevents segfaults, and guarantees thread safety.\n    This package provides the compiler (rustc) and the documentation utilities rustdoc.\n  dev_url: https://doc.rust-lang.org/std/\n  doc_url: https://www.rust-lang.org/en-US/documentation.html\n\nextra:\n  recipe-maintainers:\n    - timkpaine\n    - xhochy\n    - johanneskoester\n    - abhi18av\n    - pkgw\n    - dlaehnemann\n    - isuruf\n    - mbargull\n",
 "req": {
  "__set__": true,
  "elements": [
   "__unix",
   "__win",
   "c_compiler_stub",
   "gcc_impl_linux-64",
   "gcc_impl_linux-aarch64",
   "gcc_impl_linux-ppc64le",
   "posix",
   "rust-std-aarch64-apple-darwin",
   "rust-std-aarch64-unknown-linux-gnu",
   "rust-std-powerpc64le-unknown-linux-gnu",
   "rust-std-x86_64-apple-darwin",
   "rust-std-x86_64-pc-windows-msvc",
   "rust-std-x86_64-unknown-linux-gnu",
   "zlib"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "posix"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "rust-std-aarch64-apple-darwin",
    "rust-std-aarch64-unknown-linux-gnu",
    "rust-std-powerpc64le-unknown-linux-gnu",
    "rust-std-x86_64-apple-darwin",
    "rust-std-x86_64-pc-windows-msvc",
    "rust-std-x86_64-unknown-linux-gnu",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "__unix",
    "__win",
    "c_compiler_stub",
    "gcc_impl_linux-64",
    "gcc_impl_linux-aarch64",
    "gcc_impl_linux-ppc64le",
    "rust-std-aarch64-apple-darwin",
    "rust-std-aarch64-unknown-linux-gnu",
    "rust-std-powerpc64le-unknown-linux-gnu",
    "rust-std-x86_64-apple-darwin",
    "rust-std-x86_64-pc-windows-msvc",
    "rust-std-x86_64-unknown-linux-gnu"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "posix"
   ]
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "posix"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "rust-std-aarch64-apple-darwin",
    "rust-std-aarch64-unknown-linux-gnu",
    "rust-std-powerpc64le-unknown-linux-gnu",
    "rust-std-x86_64-apple-darwin",
    "rust-std-x86_64-pc-windows-msvc",
    "rust-std-x86_64-unknown-linux-gnu",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "__unix",
    "__win",
    "gcc_impl_linux-64",
    "gcc_impl_linux-aarch64",
    "gcc_impl_linux-ppc64le",
    "rust-std-aarch64-apple-darwin",
    "rust-std-aarch64-unknown-linux-gnu",
    "rust-std-powerpc64le-unknown-linux-gnu",
    "rust-std-x86_64-apple-darwin",
    "rust-std-x86_64-pc-windows-msvc",
    "rust-std-x86_64-unknown-linux-gnu"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "posix"
   ]
  }
 },
 "url": "https://static.rust-lang.org/dist/rust-1.72.1-x86_64-unknown-linux-gnu.tar.gz",
 "version": "1.72.1",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/rust.json"
 },
 "win_64_meta_yaml": {
  "about": {
   "dev_url": "https://doc.rust-lang.org/std/",
   "doc_url": "https://www.rust-lang.org/en-US/documentation.html",
   "home": "https://www.rust-lang.org",
   "license": "MIT",
   "license_file": [
    "LICENSE-APACHE",
    "LICENSE-MIT"
   ],
   "summary": "Rust is a systems programming language that runs blazingly fast, prevents segfaults, and guarantees thread safety.\nThis package provides the compiler (rustc) and the documentation utilities rustdoc.\n"
  },
  "build": {
   "number": "0"
  },
  "extra": {
   "recipe-maintainers": [
    "timkpaine",
    "xhochy",
    "johanneskoester",
    "abhi18av",
    "pkgw",
    "dlaehnemann",
    "isuruf",
    "mbargull"
   ]
  },
  "outputs": [
   {
    "build": {
     "binary_relocation": false,
     "merge_build_host": false,
     "noarch": "generic"
    },
    "name": "rust-std-x86_64-pc-windows-msvc",
    "requirements": {
     "build": [
      "posix"
     ],
     "host": [],
     "run": [],
     "run_constrained": [
      "rust"
     ]
    },
    "script": "install-rust-std.bat",
    "test": {
     "commands": [
      "if not exist %LIBRARY_PREFIX%/lib/rustlib exit 1",
      "echo x86_64-pc-windows-msvc"
     ]
    }
   },
   {
    "build": {
     "binary_relocation": false
    },
    "name": "rust",
    "requirements": {
     "build": [
      "posix"
     ],
     "host": [
      "rust-std-x86_64-pc-windows-msvc"
     ],
     "run": [
      "rust-std-x86_64-pc-windows-msvc"
     ]
    },
    "run_exports": {
     "strong_constrains": null
    },
    "script": "install-rust.bat",
    "test": {
     "commands": [
      "rustc --help",
      "rustdoc --help",
      "cargo --help",
      "cargo --config registries.crates-io.protocol=\\\"sparse\\\" install --force xsv",
      "echo x86_64-pc-windows-msvc",
      "if exist %LIBRARY_PREFIX%\\share\\doc\\rust\\html\\sysroot exit 1"
     ],
     "requires": [
      "posix"
     ]
    }
   },
   {
    "build": {
     "noarch": "generic",
     "skip": false,
     "string": "win_0"
    },
    "name": "rust-src",
    "requirements": {
     "build": [
      "posix"
     ],
     "run": [
      "__win"
     ],
     "run_constrained": [
      "rust"
     ]
    },
    "script": "install-rust-src.bat",
    "test": {
     "commands": [
      "if not exist \"%LIBRARY_PREFIX%/lib/rustlib/src/rust/Cargo.lock\" exit 1",
      "if not exist \"%LIBRARY_PREFIX%/lib/rustlib/manifest-rust-src\" exit 1",
      "if not exist \"%LIBRARY_PREFIX%/lib/rustlib/src\" exit 1"
     ]
    }
   },
   {
    "build": {
     "noarch": "generic",
     "skip": false,
     "string": "win_0"
    },
    "name": "rust-std-x86_64-linux-android",
    "requirements": {
     "build": [
      "posix"
     ],
     "run": [
      "__win"
     ],
     "run_constrained": [
      "rust"
     ]
    },
    "script": "install-rust-std-extra.bat",
    "test": {
     "commands": [
      "if not exist \"%LIBRARY_PREFIX%/lib/rustlib/x86_64-linux-android\" exit 1",
      "if not exist \"%LIBRARY_PREFIX%/lib/rustlib/manifest-rust-std-x86_64-linux-android\" exit 1",
      "dir /b \"%LIBRARY_PREFIX%\" | findstr /v \"x86_64-linux-android\" >nul || exit 1",
      "echo x86_64-linux-android"
     ]
    }
   }
  ],
  "package": {
   "name": "rust-split",
   "version": "1.72.1"
  },
  "requirements": {
   "build": [
    "posix"
   ],
   "host": []
  },
  "source": [
   {
    "patches": [
     "0001-gh-106-install.sh-Perfomance-Use-more-shell-builtins.diff"
    ],
    "sha256": "8c0619ce598f8d8878d594fcc77eb0dcbebeaffae75ae50481d066873f659974",
    "url": "https://static.rust-lang.org/dist/rust-1.72.1-x86_64-pc-windows-msvc.tar.gz"
   },
   {
    "folder": "rust-src",
    "sha256": "fb5629b21129c940daeb04a325df34b5dd7d6053c93fe3b3460794ef82012d69",
    "url": "https://static.rust-lang.org/dist/rust-src-1.72.1.tar.gz"
   },
   {
    "folder": "rust-std",
    "sha256": "0e5380f9640ea0c306e07007de3a48fdcc0cd8331ff60cfad37e55444a170876",
    "url": "https://static.rust-lang.org/dist/rust-std-1.72.1-aarch64-apple-ios.tar.gz"
   },
   {
    "folder": "rust-std",
    "sha256": "0c71ae4204eaf75cbc22459a64917ee364e98f66b2a9adae08899997cc3da741",
    "url": "https://static.rust-lang.org/dist/rust-std-1.72.1-x86_64-apple-ios.tar.gz"
   },
   {
    "folder": "rust-std",
    "sha256": "254465a91cd90de2cc1a909a5a2925deca3e104502e175b1fd7760d2111eaa07",
    "url": "https://static.rust-lang.org/dist/rust-std-1.72.1-aarch64-apple-ios-sim.tar.gz"
   },
   {
    "folder": "rust-std",
    "sha256": "41911d98eba3816e25550a0c8a7e9721ef1bc2369bba41c3b1d0fb0e065364aa",
    "url": "https://static.rust-lang.org/dist/rust-std-1.72.1-aarch64-linux-android.tar.gz"
   },
   {
    "folder": "rust-std",
    "sha256": "7915389b8e506c0a6334c31d043a3a40d8503b539cee64c2afd176ce00fabf94",
    "url": "https://static.rust-lang.org/dist/rust-std-1.72.1-arm-linux-androideabi.tar.gz"
   },
   {
    "folder": "rust-std",
    "sha256": "77f451df32f1623e0e4af5dbeec87e5cb4868e8e42e015f523bcb0ebe4fb1613",
    "url": "https://static.rust-lang.org/dist/rust-std-1.72.1-armv7-linux-androideabi.tar.gz"
   },
   {
    "folder": "rust-std",
    "sha256": "cc5723faad8519d733f5acfdb4451878538feddfc7d9ba13baf7e9a2880c8cef",
    "url": "https://static.rust-lang.org/dist/rust-std-1.72.1-i686-linux-android.tar.gz"
   },
   {
    "folder": "rust-std",
    "sha256": "17a87c8b1fc9e77609a7a7f330429b21f91e1a01ba95be7f2ada07ddd260795a",
    "url": "https://static.rust-lang.org/dist/rust-std-1.72.1-x86_64-linux-android.tar.gz"
   },
   {
    "folder": "rust-std",
    "sha256": "32e49d571a36dfd1440f48d97c5451780b5b12186ff6b60293f1a06231132932",
    "url": "https://static.rust-lang.org/dist/rust-std-1.72.1-wasm32-unknown-unknown.tar.gz"
   }
  ]
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "posix"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "rust-std-x86_64-pc-windows-msvc"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "__win",
    "rust-std-x86_64-pc-windows-msvc"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "posix"
   ]
  }
 }
}