{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "raven-wps",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "Raven is a server providing access to hydrological modeling and analysis\nthrough the Web Processing Service (WPS) standard. It was made to help\nhydrologists work with climate data and automate some of the tedious work\nrequired to calibrate and run hydrological models. Its modeling engine is\nthe Raven hydrological modeling framework, which can emulate a variety of\nlumped and distributed models.\n",
   "dev_url": "https://github.com/Ouranosinc/raven",
   "doc_url": "https://pavics-sdi.readthedocs.io/projects/raven/en/latest/",
   "home": "https://github.com/Ouranosinc/raven",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE.txt",
   "summary": "An open source server project offering hydrological modeling and analysis capabilities through the Web Processing Service (WPS) standard"
  },
  "build": {
   "entry_points": [
    "raven-wps=raven.cli:cli"
   ],
   "noarch": "python",
   "number": "0",
   "script": "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv",
   "script_env": [
    "CONDA_BUILD"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "Zeitsperre",
    "cjauvin",
    "huard"
   ]
  },
  "package": {
   "name": "raven-wps",
   "version": "0.17.0"
  },
  "requirements": {
   "host": [
    "python >=3.8",
    "numpy >=1.20",
    "gdal >=3.0",
    "pip"
   ],
   "run": [
    "python >=3.8",
    "raven-hydro ==3.6",
    "ostrich ==21.03.16",
    "ravenpy >=0.11.0",
    "pywps ==4.5.1",
    "affine",
    "cartopy",
    "click",
    "dask",
    "fiona >=1.9,<2.0",
    "gdal >=3.0",
    "geopandas",
    "geojson",
    "ipyleaflet",
    "jinja2",
    "matplotlib-base",
    "nbval",
    "numpy",
    "owslib",
    "pandas",
    "poppler",
    "psutil",
    "psycopg2",
    "pymetalink",
    "pyproj >=3.4",
    "pysheds",
    "rasterio",
    "rasterstats",
    "rioxarray",
    "rtree",
    "scipy",
    "setuptools",
    "shapely",
    "spotpy",
    "statsmodels",
    "tbb",
    "unidecode",
    "urlpath",
    "xarray >=0.18",
    "xclim >=0.31.0",
    "xskillscore",
    "pip"
   ]
  },
  "source": {
   "sha256": "b82d9e7c3697eb9d01c94fb12fdf46714279ac6610be18f63cc0d106f8eb5e82",
   "url": "https://github.com/Ouranosinc/raven/archive/refs/tags/v0.17.0.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "make start",
    "sleep 2s",
    "make stop"
   ],
   "requires": [
    "make",
    "pip",
    "pytest-json-report"
   ],
   "source_files": [
    "Makefile"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "gdal",
    "numpy",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "affine",
    "cartopy",
    "click",
    "dask",
    "fiona",
    "gdal",
    "geojson",
    "geopandas",
    "ipyleaflet",
    "jinja2",
    "matplotlib-base",
    "nbval",
    "numpy",
    "ostrich",
    "owslib",
    "pandas",
    "pip",
    "poppler",
    "psutil",
    "psycopg2",
    "pymetalink",
    "pyproj",
    "pysheds",
    "python",
    "pywps",
    "rasterio",
    "rasterstats",
    "raven-hydro",
    "ravenpy",
    "rioxarray",
    "rtree",
    "scipy",
    "setuptools",
    "shapely",
    "spotpy",
    "statsmodels",
    "tbb",
    "unidecode",
    "urlpath",
    "xarray",
    "xclim",
    "xskillscore"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "make",
    "pip",
    "pytest-json-report"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "Raven is a server providing access to hydrological modeling and analysis\nthrough the Web Processing Service (WPS) standard. It was made to help\nhydrologists work with climate data and automate some of the tedious work\nrequired to calibrate and run hydrological models. Its modeling engine is\nthe Raven hydrological modeling framework, which can emulate a variety of\nlumped and distributed models.\n",
   "dev_url": "https://github.com/Ouranosinc/raven",
   "doc_url": "https://pavics-sdi.readthedocs.io/projects/raven/en/latest/",
   "home": "https://github.com/Ouranosinc/raven",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE.txt",
   "summary": "An open source server project offering hydrological modeling and analysis capabilities through the Web Processing Service (WPS) standard"
  },
  "build": {
   "entry_points": [
    "raven-wps=raven.cli:cli"
   ],
   "noarch": "python",
   "number": "0",
   "script": "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv",
   "script_env": [
    "CONDA_BUILD"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "Zeitsperre",
    "cjauvin",
    "huard"
   ]
  },
  "package": {
   "name": "raven-wps",
   "version": "0.17.0"
  },
  "requirements": {
   "host": [
    "python >=3.8",
    "numpy >=1.20",
    "gdal >=3.0",
    "pip"
   ],
   "run": [
    "python >=3.8",
    "raven-hydro ==3.6",
    "ostrich ==21.03.16",
    "ravenpy >=0.11.0",
    "pywps ==4.5.1",
    "affine",
    "cartopy",
    "click",
    "dask",
    "fiona >=1.9,<2.0",
    "gdal >=3.0",
    "geopandas",
    "geojson",
    "ipyleaflet",
    "jinja2",
    "matplotlib-base",
    "nbval",
    "numpy",
    "owslib",
    "pandas",
    "poppler",
    "psutil",
    "psycopg2",
    "pymetalink",
    "pyproj >=3.4",
    "pysheds",
    "rasterio",
    "rasterstats",
    "rioxarray",
    "rtree",
    "scipy",
    "setuptools",
    "shapely",
    "spotpy",
    "statsmodels",
    "tbb",
    "unidecode",
    "urlpath",
    "xarray >=0.18",
    "xclim >=0.31.0",
    "xskillscore",
    "pip"
   ]
  },
  "source": {
   "sha256": "b82d9e7c3697eb9d01c94fb12fdf46714279ac6610be18f63cc0d106f8eb5e82",
   "url": "https://github.com/Ouranosinc/raven/archive/refs/tags/v0.17.0.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "make start",
    "sleep 2s",
    "make stop"
   ],
   "requires": [
    "make",
    "pip",
    "pytest-json-report"
   ],
   "source_files": [
    "Makefile"
   ]
  }
 },
 "name": "raven-wps",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "raven-wps"
  ]
 },
 "parsing_error": false,
 "pr_info": {
  "__lazy_json__": "pr_info/raven-wps.json"
 },
 "raw_meta_yaml": "{% set name = \"raven-wps\" %}\n{% set version = \"0.17.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/Ouranosinc/raven/archive/refs/tags/v{{ version }}.tar.gz\n  sha256: b82d9e7c3697eb9d01c94fb12fdf46714279ac6610be18f63cc0d106f8eb5e82\n\nbuild:\n  number: 0\n  noarch: python\n  script: {{ PYTHON }} -m pip install . -vv\n  entry_points:\n    - raven-wps=raven.cli:cli\n  script_env:\n    - CONDA_BUILD\n\nrequirements:\n  host:\n    - python >=3.8\n    - numpy >=1.20\n    - gdal >=3.0\n    - pip\n  run:\n    - python >=3.8\n    - raven-hydro ==3.6\n    - ostrich ==21.03.16\n    - ravenpy >=0.11.0\n    - pywps ==4.5.1\n    - affine\n    - cartopy\n    - click\n    - dask\n    - fiona >=1.9,<2.0\n    - gdal >=3.0\n    - geopandas\n    - geojson\n    - ipyleaflet\n    - jinja2\n    - matplotlib-base\n    - nbval\n    - numpy\n    - owslib\n    - pandas\n    - poppler\n    - psutil\n    - psycopg2\n    - pymetalink\n    - pyproj >=3.4\n    - pysheds\n    - rasterio\n    - rasterstats\n    - rioxarray\n    - rtree\n    - scipy\n    - setuptools\n    - shapely\n    - spotpy\n    - statsmodels\n    - tbb\n    - unidecode\n    - urlpath\n    - xarray >=0.18\n    - xclim >=0.31.0\n    - xskillscore\n    - pip\n\n# TODO: We need more tests here\ntest:\n  requires:\n    - make\n    - pip\n    - pytest-json-report # Added due to a packaging bug with ESMPy. See: https://github.com/esmf-org/esmf/issues/115\n  source_files:\n    - Makefile\n  commands:\n    - pip check\n    - make start\n    - sleep 2s\n    - make stop\n\nabout:\n  home: https://github.com/Ouranosinc/raven\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE.txt\n  summary: An open source server project offering hydrological modeling and analysis capabilities through the Web Processing Service (WPS) standard\n  description: |\n    Raven is a server providing access to hydrological modeling and analysis\n    through the Web Processing Service (WPS) standard. It was made to help\n    hydrologists work with climate data and automate some of the tedious work\n    required to calibrate and run hydrological models. Its modeling engine is\n    the Raven hydrological modeling framework, which can emulate a variety of\n    lumped and distributed models.\n  doc_url: https://pavics-sdi.readthedocs.io/projects/raven/en/latest/\n  dev_url: https://github.com/Ouranosinc/raven\n\nextra:\n  recipe-maintainers:\n    - Zeitsperre\n    - cjauvin\n    - huard\n",
 "req": {
  "__set__": true,
  "elements": [
   "affine",
   "cartopy",
   "click",
   "dask",
   "fiona",
   "gdal",
   "geojson",
   "geopandas",
   "ipyleaflet",
   "jinja2",
   "matplotlib-base",
   "nbval",
   "numpy",
   "ostrich",
   "owslib",
   "pandas",
   "pip",
   "poppler",
   "psutil",
   "psycopg2",
   "pymetalink",
   "pyproj",
   "pysheds",
   "python",
   "pywps",
   "rasterio",
   "rasterstats",
   "raven-hydro",
   "ravenpy",
   "rioxarray",
   "rtree",
   "scipy",
   "setuptools",
   "shapely",
   "spotpy",
   "statsmodels",
   "tbb",
   "unidecode",
   "urlpath",
   "xarray",
   "xclim",
   "xskillscore"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "gdal",
    "numpy",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "affine",
    "cartopy",
    "click",
    "dask",
    "fiona",
    "gdal",
    "geojson",
    "geopandas",
    "ipyleaflet",
    "jinja2",
    "matplotlib-base",
    "nbval",
    "numpy",
    "ostrich",
    "owslib",
    "pandas",
    "pip",
    "poppler",
    "psutil",
    "psycopg2",
    "pymetalink",
    "pyproj",
    "pysheds",
    "python",
    "pywps",
    "rasterio",
    "rasterstats",
    "raven-hydro",
    "ravenpy",
    "rioxarray",
    "rtree",
    "scipy",
    "setuptools",
    "shapely",
    "spotpy",
    "statsmodels",
    "tbb",
    "unidecode",
    "urlpath",
    "xarray",
    "xclim",
    "xskillscore"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "make",
    "pip",
    "pytest-json-report"
   ]
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "gdal >=3.0",
    "numpy >=1.20",
    "pip",
    "python >=3.8"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "affine",
    "cartopy",
    "click",
    "dask",
    "fiona >=1.9,<2.0",
    "gdal >=3.0",
    "geojson",
    "geopandas",
    "ipyleaflet",
    "jinja2",
    "matplotlib-base",
    "nbval",
    "numpy",
    "ostrich ==21.03.16",
    "owslib",
    "pandas",
    "pip",
    "poppler",
    "psutil",
    "psycopg2",
    "pymetalink",
    "pyproj >=3.4",
    "pysheds",
    "python >=3.8",
    "pywps ==4.5.1",
    "rasterio",
    "rasterstats",
    "raven-hydro ==3.6",
    "ravenpy >=0.11.0",
    "rioxarray",
    "rtree",
    "scipy",
    "setuptools",
    "shapely",
    "spotpy",
    "statsmodels",
    "tbb",
    "unidecode",
    "urlpath",
    "xarray >=0.18",
    "xclim >=0.31.0",
    "xskillscore"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "make",
    "pip",
    "pytest-json-report"
   ]
  }
 },
 "url": "https://github.com/Ouranosinc/raven/archive/refs/tags/v0.17.0.tar.gz",
 "version": "0.17.0",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/raven-wps.json"
 }
}