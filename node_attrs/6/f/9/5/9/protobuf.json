{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "check_solvable": true
  },
  "build_platform": {
   "linux_aarch64": "linux_64",
   "linux_ppc64le": "linux_64",
   "osx_arm64": "osx_64"
  },
  "provider": {
   "linux_aarch64": "default",
   "linux_ppc64le": "default",
   "win": "azure"
  }
 },
 "feedstock_name": "protobuf",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "Protocol buffers are Google's language-neutral, platform-neutral, extensible\nmechanism for serializing structured data,think XML, but smaller, faster, and simpler.\n",
   "dev_url": "https://github.com/protocolbuffers/protobuf",
   "doc_source_url": "https://github.com/protocolbuffers/protobuf/blob/master/README.md",
   "doc_url": "https://developers.google.com/protocol-buffers/docs/tutorials",
   "home": "https://developers.google.com/protocol-buffers/",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "Protocol Buffers - Google's data interchange format."
  },
  "build": {
   "number": "0",
   "script": [
    "cd python",
    "export PROTOC=$PREFIX/bin/protoc",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv --install-option=\"--cpp_implementation\"",
    "cd python",
    "export PROTOC=$PREFIX/bin/protoc",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv --install-option=\"--cpp_implementation\"",
    "cd python",
    "export PROTOC=$PREFIX/bin/protoc",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv --install-option=\"--cpp_implementation\"",
    "cd python",
    "export PROTOC=$PREFIX/bin/protoc",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv --install-option=\"--cpp_implementation\"",
    "cd python",
    "export PROTOC=$PREFIX/bin/protoc",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv --install-option=\"--cpp_implementation\"",
    "cd python",
    "export PROTOC=$PREFIX/bin/protoc",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv --install-option=\"--cpp_implementation\""
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "xylar",
    "dopplershift",
    "jakirkham",
    "ocefpaf",
    "hajapy",
    "xhochy",
    "conda-forge/libprotobuf",
    "xylar",
    "dopplershift",
    "jakirkham",
    "ocefpaf",
    "hajapy",
    "xhochy",
    "conda-forge/libprotobuf",
    "xylar",
    "dopplershift",
    "jakirkham",
    "ocefpaf",
    "hajapy",
    "xhochy",
    "conda-forge/libprotobuf",
    "xylar",
    "dopplershift",
    "jakirkham",
    "ocefpaf",
    "hajapy",
    "xhochy",
    "conda-forge/libprotobuf",
    "xylar",
    "dopplershift",
    "jakirkham",
    "ocefpaf",
    "hajapy",
    "xhochy",
    "conda-forge/libprotobuf",
    "xylar",
    "dopplershift",
    "jakirkham",
    "ocefpaf",
    "hajapy",
    "xhochy",
    "conda-forge/libprotobuf"
   ]
  },
  "package": {
   "name": "protobuf",
   "version": "4.23.2"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "pip <23.1",
    "setuptools",
    "libabseil",
    "libprotobuf 4.23.2",
    "python",
    "pip <23.1",
    "setuptools",
    "libabseil",
    "libprotobuf 4.23.2",
    "python",
    "pip <23.1",
    "setuptools",
    "libabseil",
    "libprotobuf 4.23.2",
    "python",
    "pip <23.1",
    "setuptools",
    "libabseil",
    "libprotobuf 4.23.2",
    "python",
    "pip <23.1",
    "setuptools",
    "libabseil",
    "libprotobuf 4.23.2",
    "python",
    "pip <23.1",
    "setuptools",
    "libabseil",
    "libprotobuf 4.23.2"
   ],
   "run": [
    "python",
    "setuptools",
    "python",
    "setuptools",
    "python",
    "setuptools",
    "python",
    "setuptools",
    "python",
    "setuptools",
    "python",
    "setuptools"
   ]
  },
  "source": {
   "patches": [
    "patches/0001-do-not-link-msvc-runtime-statically.patch",
    "patches/0002-fix-paths-for-include-lib-directories.patch",
    "patches/0003-adapt-to-name-of-protobuf-lib-on-windows.patch",
    "patches/0004-use-C-17-everywhere.patch",
    "patches/0005-set-PROTOBUF_USE_DLLS-clean-up-other-symbols-on-win.patch",
    "patches/0006-explicitly-link-to-abseil_dll-on-windows.patch",
    "patches/0007-be-more-lenient-with-abseil-version.patch",
    "patches/0001-do-not-link-msvc-runtime-statically.patch",
    "patches/0002-fix-paths-for-include-lib-directories.patch",
    "patches/0003-adapt-to-name-of-protobuf-lib-on-windows.patch",
    "patches/0004-use-C-17-everywhere.patch",
    "patches/0005-set-PROTOBUF_USE_DLLS-clean-up-other-symbols-on-win.patch",
    "patches/0006-explicitly-link-to-abseil_dll-on-windows.patch",
    "patches/0007-be-more-lenient-with-abseil-version.patch",
    "patches/0001-do-not-link-msvc-runtime-statically.patch",
    "patches/0002-fix-paths-for-include-lib-directories.patch",
    "patches/0003-adapt-to-name-of-protobuf-lib-on-windows.patch",
    "patches/0004-use-C-17-everywhere.patch",
    "patches/0005-set-PROTOBUF_USE_DLLS-clean-up-other-symbols-on-win.patch",
    "patches/0006-explicitly-link-to-abseil_dll-on-windows.patch",
    "patches/0007-be-more-lenient-with-abseil-version.patch",
    "patches/0001-do-not-link-msvc-runtime-statically.patch",
    "patches/0002-fix-paths-for-include-lib-directories.patch",
    "patches/0003-adapt-to-name-of-protobuf-lib-on-windows.patch",
    "patches/0004-use-C-17-everywhere.patch",
    "patches/0005-set-PROTOBUF_USE_DLLS-clean-up-other-symbols-on-win.patch",
    "patches/0006-explicitly-link-to-abseil_dll-on-windows.patch",
    "patches/0007-be-more-lenient-with-abseil-version.patch",
    "patches/0001-do-not-link-msvc-runtime-statically.patch",
    "patches/0002-fix-paths-for-include-lib-directories.patch",
    "patches/0003-adapt-to-name-of-protobuf-lib-on-windows.patch",
    "patches/0004-use-C-17-everywhere.patch",
    "patches/0005-set-PROTOBUF_USE_DLLS-clean-up-other-symbols-on-win.patch",
    "patches/0006-explicitly-link-to-abseil_dll-on-windows.patch",
    "patches/0007-be-more-lenient-with-abseil-version.patch",
    "patches/0001-do-not-link-msvc-runtime-statically.patch",
    "patches/0002-fix-paths-for-include-lib-directories.patch",
    "patches/0003-adapt-to-name-of-protobuf-lib-on-windows.patch",
    "patches/0004-use-C-17-everywhere.patch",
    "patches/0005-set-PROTOBUF_USE_DLLS-clean-up-other-symbols-on-win.patch",
    "patches/0006-explicitly-link-to-abseil_dll-on-windows.patch",
    "patches/0007-be-more-lenient-with-abseil-version.patch"
   ],
   "sha256": "0b0395d34e000f1229679e10d984ed7913078f3dd7f26cf0476467f5e65716f4",
   "url": "https://github.com/protocolbuffers/protobuf/archive/refs/tags/v23.2.tar.gz"
  },
  "test": {
   "commands": [
    "python -c \"from google.protobuf.internal import api_implementation; assert api_implementation.Type() == 'python'\"",
    "python -c \"from google.protobuf.internal import api_implementation; assert api_implementation.Type() == 'cpp'\"",
    "python -c \"from google.protobuf.internal import api_implementation; assert api_implementation.Type() == 'cpp'\"",
    "python -c \"from google.protobuf.internal import api_implementation; assert api_implementation.Type() == 'cpp'\"",
    "python -c \"from google.protobuf.internal import api_implementation; assert api_implementation.Type() == 'cpp'\"",
    "python -c \"from google.protobuf.internal import api_implementation; assert api_implementation.Type() == 'python'\""
   ],
   "imports": [
    "google",
    "google.protobuf",
    "google.protobuf.internal",
    "google.protobuf.pyext",
    "google.protobuf.util",
    "google.protobuf.compiler",
    "google",
    "google.protobuf",
    "google.protobuf.internal",
    "google.protobuf.pyext",
    "google.protobuf.util",
    "google.protobuf.compiler",
    "google",
    "google.protobuf",
    "google.protobuf.internal",
    "google.protobuf.pyext",
    "google.protobuf.util",
    "google.protobuf.compiler",
    "google",
    "google.protobuf",
    "google.protobuf.internal",
    "google.protobuf.pyext",
    "google.protobuf.util",
    "google.protobuf.compiler",
    "google",
    "google.protobuf",
    "google.protobuf.internal",
    "google.protobuf.pyext",
    "google.protobuf.util",
    "google.protobuf.compiler",
    "google",
    "google.protobuf",
    "google.protobuf.internal",
    "google.protobuf.pyext",
    "google.protobuf.util",
    "google.protobuf.compiler"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "libabseil",
    "libprotobuf",
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python",
    "setuptools"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "linux_aarch64_meta_yaml": {
  "about": {
   "description": "Protocol buffers are Google's language-neutral, platform-neutral, extensible\nmechanism for serializing structured data,think XML, but smaller, faster, and simpler.\n",
   "dev_url": "https://github.com/protocolbuffers/protobuf",
   "doc_source_url": "https://github.com/protocolbuffers/protobuf/blob/master/README.md",
   "doc_url": "https://developers.google.com/protocol-buffers/docs/tutorials",
   "home": "https://developers.google.com/protocol-buffers/",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "Protocol Buffers - Google's data interchange format."
  },
  "build": {
   "number": "0",
   "script": [
    "cd python",
    "export PROTOC=$PREFIX/bin/protoc",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv --install-option=\"--cpp_implementation\"",
    "cd python",
    "export PROTOC=$PREFIX/bin/protoc",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv --install-option=\"--cpp_implementation\"",
    "cd python",
    "export PROTOC=$PREFIX/bin/protoc",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv --install-option=\"--cpp_implementation\"",
    "cd python",
    "export PROTOC=$PREFIX/bin/protoc",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv --install-option=\"--cpp_implementation\"",
    "cd python",
    "export PROTOC=$PREFIX/bin/protoc",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv --install-option=\"--cpp_implementation\"",
    "cd python",
    "export PROTOC=$PREFIX/bin/protoc",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv --install-option=\"--cpp_implementation\""
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "xylar",
    "dopplershift",
    "jakirkham",
    "ocefpaf",
    "hajapy",
    "xhochy",
    "conda-forge/libprotobuf",
    "xylar",
    "dopplershift",
    "jakirkham",
    "ocefpaf",
    "hajapy",
    "xhochy",
    "conda-forge/libprotobuf",
    "xylar",
    "dopplershift",
    "jakirkham",
    "ocefpaf",
    "hajapy",
    "xhochy",
    "conda-forge/libprotobuf",
    "xylar",
    "dopplershift",
    "jakirkham",
    "ocefpaf",
    "hajapy",
    "xhochy",
    "conda-forge/libprotobuf",
    "xylar",
    "dopplershift",
    "jakirkham",
    "ocefpaf",
    "hajapy",
    "xhochy",
    "conda-forge/libprotobuf",
    "xylar",
    "dopplershift",
    "jakirkham",
    "ocefpaf",
    "hajapy",
    "xhochy",
    "conda-forge/libprotobuf"
   ]
  },
  "package": {
   "name": "protobuf",
   "version": "4.23.2"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "pip <23.1",
    "setuptools",
    "libabseil",
    "libprotobuf 4.23.2",
    "python",
    "pip <23.1",
    "setuptools",
    "libabseil",
    "libprotobuf 4.23.2",
    "python",
    "pip <23.1",
    "setuptools",
    "libabseil",
    "libprotobuf 4.23.2",
    "python",
    "pip <23.1",
    "setuptools",
    "libabseil",
    "libprotobuf 4.23.2",
    "python",
    "pip <23.1",
    "setuptools",
    "libabseil",
    "libprotobuf 4.23.2",
    "python",
    "pip <23.1",
    "setuptools",
    "libabseil",
    "libprotobuf 4.23.2"
   ],
   "run": [
    "python",
    "setuptools",
    "python",
    "setuptools",
    "python",
    "setuptools",
    "python",
    "setuptools",
    "python",
    "setuptools",
    "python",
    "setuptools"
   ]
  },
  "source": {
   "patches": [
    "patches/0001-do-not-link-msvc-runtime-statically.patch",
    "patches/0002-fix-paths-for-include-lib-directories.patch",
    "patches/0003-adapt-to-name-of-protobuf-lib-on-windows.patch",
    "patches/0004-use-C-17-everywhere.patch",
    "patches/0005-set-PROTOBUF_USE_DLLS-clean-up-other-symbols-on-win.patch",
    "patches/0006-explicitly-link-to-abseil_dll-on-windows.patch",
    "patches/0007-be-more-lenient-with-abseil-version.patch",
    "patches/0001-do-not-link-msvc-runtime-statically.patch",
    "patches/0002-fix-paths-for-include-lib-directories.patch",
    "patches/0003-adapt-to-name-of-protobuf-lib-on-windows.patch",
    "patches/0004-use-C-17-everywhere.patch",
    "patches/0005-set-PROTOBUF_USE_DLLS-clean-up-other-symbols-on-win.patch",
    "patches/0006-explicitly-link-to-abseil_dll-on-windows.patch",
    "patches/0007-be-more-lenient-with-abseil-version.patch",
    "patches/0001-do-not-link-msvc-runtime-statically.patch",
    "patches/0002-fix-paths-for-include-lib-directories.patch",
    "patches/0003-adapt-to-name-of-protobuf-lib-on-windows.patch",
    "patches/0004-use-C-17-everywhere.patch",
    "patches/0005-set-PROTOBUF_USE_DLLS-clean-up-other-symbols-on-win.patch",
    "patches/0006-explicitly-link-to-abseil_dll-on-windows.patch",
    "patches/0007-be-more-lenient-with-abseil-version.patch",
    "patches/0001-do-not-link-msvc-runtime-statically.patch",
    "patches/0002-fix-paths-for-include-lib-directories.patch",
    "patches/0003-adapt-to-name-of-protobuf-lib-on-windows.patch",
    "patches/0004-use-C-17-everywhere.patch",
    "patches/0005-set-PROTOBUF_USE_DLLS-clean-up-other-symbols-on-win.patch",
    "patches/0006-explicitly-link-to-abseil_dll-on-windows.patch",
    "patches/0007-be-more-lenient-with-abseil-version.patch",
    "patches/0001-do-not-link-msvc-runtime-statically.patch",
    "patches/0002-fix-paths-for-include-lib-directories.patch",
    "patches/0003-adapt-to-name-of-protobuf-lib-on-windows.patch",
    "patches/0004-use-C-17-everywhere.patch",
    "patches/0005-set-PROTOBUF_USE_DLLS-clean-up-other-symbols-on-win.patch",
    "patches/0006-explicitly-link-to-abseil_dll-on-windows.patch",
    "patches/0007-be-more-lenient-with-abseil-version.patch",
    "patches/0001-do-not-link-msvc-runtime-statically.patch",
    "patches/0002-fix-paths-for-include-lib-directories.patch",
    "patches/0003-adapt-to-name-of-protobuf-lib-on-windows.patch",
    "patches/0004-use-C-17-everywhere.patch",
    "patches/0005-set-PROTOBUF_USE_DLLS-clean-up-other-symbols-on-win.patch",
    "patches/0006-explicitly-link-to-abseil_dll-on-windows.patch",
    "patches/0007-be-more-lenient-with-abseil-version.patch"
   ],
   "sha256": "0b0395d34e000f1229679e10d984ed7913078f3dd7f26cf0476467f5e65716f4",
   "url": "https://github.com/protocolbuffers/protobuf/archive/refs/tags/v23.2.tar.gz"
  },
  "test": {
   "commands": [
    "python -c \"from google.protobuf.internal import api_implementation; assert api_implementation.Type() == 'cpp'\"",
    "python -c \"from google.protobuf.internal import api_implementation; assert api_implementation.Type() == 'python'\"",
    "python -c \"from google.protobuf.internal import api_implementation; assert api_implementation.Type() == 'cpp'\"",
    "python -c \"from google.protobuf.internal import api_implementation; assert api_implementation.Type() == 'cpp'\"",
    "python -c \"from google.protobuf.internal import api_implementation; assert api_implementation.Type() == 'cpp'\"",
    "python -c \"from google.protobuf.internal import api_implementation; assert api_implementation.Type() == 'python'\""
   ],
   "imports": [
    "google",
    "google.protobuf",
    "google.protobuf.internal",
    "google.protobuf.pyext",
    "google.protobuf.util",
    "google.protobuf.compiler",
    "google",
    "google.protobuf",
    "google.protobuf.internal",
    "google.protobuf.pyext",
    "google.protobuf.util",
    "google.protobuf.compiler",
    "google",
    "google.protobuf",
    "google.protobuf.internal",
    "google.protobuf.pyext",
    "google.protobuf.util",
    "google.protobuf.compiler",
    "google",
    "google.protobuf",
    "google.protobuf.internal",
    "google.protobuf.pyext",
    "google.protobuf.util",
    "google.protobuf.compiler",
    "google",
    "google.protobuf",
    "google.protobuf.internal",
    "google.protobuf.pyext",
    "google.protobuf.util",
    "google.protobuf.compiler",
    "google",
    "google.protobuf",
    "google.protobuf.internal",
    "google.protobuf.pyext",
    "google.protobuf.util",
    "google.protobuf.compiler"
   ]
  }
 },
 "linux_aarch64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "libabseil",
    "libprotobuf",
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python",
    "setuptools"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "linux_ppc64le_meta_yaml": {
  "about": {
   "description": "Protocol buffers are Google's language-neutral, platform-neutral, extensible\nmechanism for serializing structured data,think XML, but smaller, faster, and simpler.\n",
   "dev_url": "https://github.com/protocolbuffers/protobuf",
   "doc_source_url": "https://github.com/protocolbuffers/protobuf/blob/master/README.md",
   "doc_url": "https://developers.google.com/protocol-buffers/docs/tutorials",
   "home": "https://developers.google.com/protocol-buffers/",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "Protocol Buffers - Google's data interchange format."
  },
  "build": {
   "number": "0",
   "script": [
    "cd python",
    "export PROTOC=$PREFIX/bin/protoc",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv --install-option=\"--cpp_implementation\"",
    "cd python",
    "export PROTOC=$PREFIX/bin/protoc",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv --install-option=\"--cpp_implementation\"",
    "cd python",
    "export PROTOC=$PREFIX/bin/protoc",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv --install-option=\"--cpp_implementation\"",
    "cd python",
    "export PROTOC=$PREFIX/bin/protoc",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv --install-option=\"--cpp_implementation\"",
    "cd python",
    "export PROTOC=$PREFIX/bin/protoc",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv --install-option=\"--cpp_implementation\"",
    "cd python",
    "export PROTOC=$PREFIX/bin/protoc",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv --install-option=\"--cpp_implementation\""
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "xylar",
    "dopplershift",
    "jakirkham",
    "ocefpaf",
    "hajapy",
    "xhochy",
    "conda-forge/libprotobuf",
    "xylar",
    "dopplershift",
    "jakirkham",
    "ocefpaf",
    "hajapy",
    "xhochy",
    "conda-forge/libprotobuf",
    "xylar",
    "dopplershift",
    "jakirkham",
    "ocefpaf",
    "hajapy",
    "xhochy",
    "conda-forge/libprotobuf",
    "xylar",
    "dopplershift",
    "jakirkham",
    "ocefpaf",
    "hajapy",
    "xhochy",
    "conda-forge/libprotobuf",
    "xylar",
    "dopplershift",
    "jakirkham",
    "ocefpaf",
    "hajapy",
    "xhochy",
    "conda-forge/libprotobuf",
    "xylar",
    "dopplershift",
    "jakirkham",
    "ocefpaf",
    "hajapy",
    "xhochy",
    "conda-forge/libprotobuf"
   ]
  },
  "package": {
   "name": "protobuf",
   "version": "4.23.2"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "pip <23.1",
    "setuptools",
    "libabseil",
    "libprotobuf 4.23.2",
    "python",
    "pip <23.1",
    "setuptools",
    "libabseil",
    "libprotobuf 4.23.2",
    "python",
    "pip <23.1",
    "setuptools",
    "libabseil",
    "libprotobuf 4.23.2",
    "python",
    "pip <23.1",
    "setuptools",
    "libabseil",
    "libprotobuf 4.23.2",
    "python",
    "pip <23.1",
    "setuptools",
    "libabseil",
    "libprotobuf 4.23.2",
    "python",
    "pip <23.1",
    "setuptools",
    "libabseil",
    "libprotobuf 4.23.2"
   ],
   "run": [
    "python",
    "setuptools",
    "python",
    "setuptools",
    "python",
    "setuptools",
    "python",
    "setuptools",
    "python",
    "setuptools",
    "python",
    "setuptools"
   ]
  },
  "source": {
   "patches": [
    "patches/0001-do-not-link-msvc-runtime-statically.patch",
    "patches/0002-fix-paths-for-include-lib-directories.patch",
    "patches/0003-adapt-to-name-of-protobuf-lib-on-windows.patch",
    "patches/0004-use-C-17-everywhere.patch",
    "patches/0005-set-PROTOBUF_USE_DLLS-clean-up-other-symbols-on-win.patch",
    "patches/0006-explicitly-link-to-abseil_dll-on-windows.patch",
    "patches/0007-be-more-lenient-with-abseil-version.patch",
    "patches/0001-do-not-link-msvc-runtime-statically.patch",
    "patches/0002-fix-paths-for-include-lib-directories.patch",
    "patches/0003-adapt-to-name-of-protobuf-lib-on-windows.patch",
    "patches/0004-use-C-17-everywhere.patch",
    "patches/0005-set-PROTOBUF_USE_DLLS-clean-up-other-symbols-on-win.patch",
    "patches/0006-explicitly-link-to-abseil_dll-on-windows.patch",
    "patches/0007-be-more-lenient-with-abseil-version.patch",
    "patches/0001-do-not-link-msvc-runtime-statically.patch",
    "patches/0002-fix-paths-for-include-lib-directories.patch",
    "patches/0003-adapt-to-name-of-protobuf-lib-on-windows.patch",
    "patches/0004-use-C-17-everywhere.patch",
    "patches/0005-set-PROTOBUF_USE_DLLS-clean-up-other-symbols-on-win.patch",
    "patches/0006-explicitly-link-to-abseil_dll-on-windows.patch",
    "patches/0007-be-more-lenient-with-abseil-version.patch",
    "patches/0001-do-not-link-msvc-runtime-statically.patch",
    "patches/0002-fix-paths-for-include-lib-directories.patch",
    "patches/0003-adapt-to-name-of-protobuf-lib-on-windows.patch",
    "patches/0004-use-C-17-everywhere.patch",
    "patches/0005-set-PROTOBUF_USE_DLLS-clean-up-other-symbols-on-win.patch",
    "patches/0006-explicitly-link-to-abseil_dll-on-windows.patch",
    "patches/0007-be-more-lenient-with-abseil-version.patch",
    "patches/0001-do-not-link-msvc-runtime-statically.patch",
    "patches/0002-fix-paths-for-include-lib-directories.patch",
    "patches/0003-adapt-to-name-of-protobuf-lib-on-windows.patch",
    "patches/0004-use-C-17-everywhere.patch",
    "patches/0005-set-PROTOBUF_USE_DLLS-clean-up-other-symbols-on-win.patch",
    "patches/0006-explicitly-link-to-abseil_dll-on-windows.patch",
    "patches/0007-be-more-lenient-with-abseil-version.patch",
    "patches/0001-do-not-link-msvc-runtime-statically.patch",
    "patches/0002-fix-paths-for-include-lib-directories.patch",
    "patches/0003-adapt-to-name-of-protobuf-lib-on-windows.patch",
    "patches/0004-use-C-17-everywhere.patch",
    "patches/0005-set-PROTOBUF_USE_DLLS-clean-up-other-symbols-on-win.patch",
    "patches/0006-explicitly-link-to-abseil_dll-on-windows.patch",
    "patches/0007-be-more-lenient-with-abseil-version.patch"
   ],
   "sha256": "0b0395d34e000f1229679e10d984ed7913078f3dd7f26cf0476467f5e65716f4",
   "url": "https://github.com/protocolbuffers/protobuf/archive/refs/tags/v23.2.tar.gz"
  },
  "test": {
   "commands": [
    "python -c \"from google.protobuf.internal import api_implementation; assert api_implementation.Type() == 'cpp'\"",
    "python -c \"from google.protobuf.internal import api_implementation; assert api_implementation.Type() == 'cpp'\"",
    "python -c \"from google.protobuf.internal import api_implementation; assert api_implementation.Type() == 'python'\"",
    "python -c \"from google.protobuf.internal import api_implementation; assert api_implementation.Type() == 'cpp'\"",
    "python -c \"from google.protobuf.internal import api_implementation; assert api_implementation.Type() == 'cpp'\"",
    "python -c \"from google.protobuf.internal import api_implementation; assert api_implementation.Type() == 'python'\""
   ],
   "imports": [
    "google",
    "google.protobuf",
    "google.protobuf.internal",
    "google.protobuf.pyext",
    "google.protobuf.util",
    "google.protobuf.compiler",
    "google",
    "google.protobuf",
    "google.protobuf.internal",
    "google.protobuf.pyext",
    "google.protobuf.util",
    "google.protobuf.compiler",
    "google",
    "google.protobuf",
    "google.protobuf.internal",
    "google.protobuf.pyext",
    "google.protobuf.util",
    "google.protobuf.compiler",
    "google",
    "google.protobuf",
    "google.protobuf.internal",
    "google.protobuf.pyext",
    "google.protobuf.util",
    "google.protobuf.compiler",
    "google",
    "google.protobuf",
    "google.protobuf.internal",
    "google.protobuf.pyext",
    "google.protobuf.util",
    "google.protobuf.compiler",
    "google",
    "google.protobuf",
    "google.protobuf.internal",
    "google.protobuf.pyext",
    "google.protobuf.util",
    "google.protobuf.compiler"
   ]
  }
 },
 "linux_ppc64le_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "libabseil",
    "libprotobuf",
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python",
    "setuptools"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "Protocol buffers are Google's language-neutral, platform-neutral, extensible\nmechanism for serializing structured data,think XML, but smaller, faster, and simpler.\n",
   "dev_url": "https://github.com/protocolbuffers/protobuf",
   "doc_source_url": "https://github.com/protocolbuffers/protobuf/blob/master/README.md",
   "doc_url": "https://developers.google.com/protocol-buffers/docs/tutorials",
   "home": "https://developers.google.com/protocol-buffers/",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "Protocol Buffers - Google's data interchange format."
  },
  "build": {
   "number": "0",
   "script": [
    "cd python",
    "export PROTOC=$PREFIX/bin/protoc",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv --install-option=\"--cpp_implementation\"",
    "cd python",
    "export PROTOC=$PREFIX/bin/protoc",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv --install-option=\"--cpp_implementation\"",
    "cd python",
    "export PROTOC=$PREFIX/bin/protoc",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv --install-option=\"--cpp_implementation\"",
    "cd python",
    "export PROTOC=$PREFIX/bin/protoc",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv --install-option=\"--cpp_implementation\"",
    "cd python",
    "export PROTOC=$PREFIX/bin/protoc",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv --install-option=\"--cpp_implementation\"",
    "cd python",
    "export PROTOC=$PREFIX/bin/protoc",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv --install-option=\"--cpp_implementation\"",
    "cd python",
    "export PROTOC=$PREFIX/bin/protoc",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv --install-option=\"--cpp_implementation\"",
    "cd python",
    "export PROTOC=$PREFIX/bin/protoc",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv --install-option=\"--cpp_implementation\"",
    "cd python",
    "export PROTOC=$PREFIX/bin/protoc",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv --install-option=\"--cpp_implementation\"",
    "cd python",
    "export PROTOC=$PREFIX/bin/protoc",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv --install-option=\"--cpp_implementation\"",
    "cd python",
    "export PROTOC=$PREFIX/bin/protoc",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv --install-option=\"--cpp_implementation\"",
    "cd python",
    "export PROTOC=$PREFIX/bin/protoc",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv --install-option=\"--cpp_implementation\"",
    "cd python",
    "export PROTOC=$PREFIX/bin/protoc",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv --install-option=\"--cpp_implementation\"",
    "cd python",
    "export PROTOC=$PREFIX/bin/protoc",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv --install-option=\"--cpp_implementation\"",
    "cd python",
    "export PROTOC=$PREFIX/bin/protoc",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv --install-option=\"--cpp_implementation\"",
    "cd python",
    "export PROTOC=$PREFIX/bin/protoc",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv --install-option=\"--cpp_implementation\"",
    "cd python",
    "export PROTOC=$PREFIX/bin/protoc",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv --install-option=\"--cpp_implementation\"",
    "cd python",
    "export PROTOC=$PREFIX/bin/protoc",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv --install-option=\"--cpp_implementation\"",
    "cd python",
    "export PROTOC=$PREFIX/bin/protoc",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv --install-option=\"--cpp_implementation\"",
    "cd python",
    "export PROTOC=$PREFIX/bin/protoc",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv --install-option=\"--cpp_implementation\"",
    "cd python",
    "export PROTOC=$PREFIX/bin/protoc",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv --install-option=\"--cpp_implementation\"",
    "cd python",
    "export PROTOC=$PREFIX/bin/protoc",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv --install-option=\"--cpp_implementation\"",
    "cd python",
    "export PROTOC=$PREFIX/bin/protoc",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv --install-option=\"--cpp_implementation\"",
    "cd python",
    "export PROTOC=$PREFIX/bin/protoc",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv --install-option=\"--cpp_implementation\"",
    "cd python",
    "export PROTOC=$PREFIX/bin/protoc",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv --install-option=\"--cpp_implementation\"",
    "cd python",
    "export PROTOC=$PREFIX/bin/protoc",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv --install-option=\"--cpp_implementation\"",
    "cd python",
    "export PROTOC=$PREFIX/bin/protoc",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv --install-option=\"--cpp_implementation\"",
    "cd python",
    "export PROTOC=$PREFIX/bin/protoc",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv --install-option=\"--cpp_implementation\"",
    "cd python",
    "set PROTOC=%LIBRARY_BIN%\\protoc",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/python.exe -m pip install . -vv --install-option=\"--cpp_implementation\"",
    "cd python",
    "set PROTOC=%LIBRARY_BIN%\\protoc",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/python.exe -m pip install . -vv --install-option=\"--cpp_implementation\"",
    "cd python",
    "set PROTOC=%LIBRARY_BIN%\\protoc",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/python.exe -m pip install . -vv --install-option=\"--cpp_implementation\"",
    "cd python",
    "set PROTOC=%LIBRARY_BIN%\\protoc",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/python.exe -m pip install . -vv --install-option=\"--cpp_implementation\"",
    "cd python",
    "set PROTOC=%LIBRARY_BIN%\\protoc",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/python.exe -m pip install . -vv --install-option=\"--cpp_implementation\"",
    "cd python",
    "set PROTOC=%LIBRARY_BIN%\\protoc",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/python.exe -m pip install . -vv --install-option=\"--cpp_implementation\""
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "xylar",
    "dopplershift",
    "jakirkham",
    "ocefpaf",
    "hajapy",
    "xhochy",
    "conda-forge/libprotobuf",
    "xylar",
    "dopplershift",
    "jakirkham",
    "ocefpaf",
    "hajapy",
    "xhochy",
    "conda-forge/libprotobuf",
    "xylar",
    "dopplershift",
    "jakirkham",
    "ocefpaf",
    "hajapy",
    "xhochy",
    "conda-forge/libprotobuf",
    "xylar",
    "dopplershift",
    "jakirkham",
    "ocefpaf",
    "hajapy",
    "xhochy",
    "conda-forge/libprotobuf",
    "xylar",
    "dopplershift",
    "jakirkham",
    "ocefpaf",
    "hajapy",
    "xhochy",
    "conda-forge/libprotobuf",
    "xylar",
    "dopplershift",
    "jakirkham",
    "ocefpaf",
    "hajapy",
    "xhochy",
    "conda-forge/libprotobuf",
    "xylar",
    "dopplershift",
    "jakirkham",
    "ocefpaf",
    "hajapy",
    "xhochy",
    "conda-forge/libprotobuf",
    "xylar",
    "dopplershift",
    "jakirkham",
    "ocefpaf",
    "hajapy",
    "xhochy",
    "conda-forge/libprotobuf",
    "xylar",
    "dopplershift",
    "jakirkham",
    "ocefpaf",
    "hajapy",
    "xhochy",
    "conda-forge/libprotobuf",
    "xylar",
    "dopplershift",
    "jakirkham",
    "ocefpaf",
    "hajapy",
    "xhochy",
    "conda-forge/libprotobuf",
    "xylar",
    "dopplershift",
    "jakirkham",
    "ocefpaf",
    "hajapy",
    "xhochy",
    "conda-forge/libprotobuf",
    "xylar",
    "dopplershift",
    "jakirkham",
    "ocefpaf",
    "hajapy",
    "xhochy",
    "conda-forge/libprotobuf",
    "xylar",
    "dopplershift",
    "jakirkham",
    "ocefpaf",
    "hajapy",
    "xhochy",
    "conda-forge/libprotobuf",
    "xylar",
    "dopplershift",
    "jakirkham",
    "ocefpaf",
    "hajapy",
    "xhochy",
    "conda-forge/libprotobuf",
    "xylar",
    "dopplershift",
    "jakirkham",
    "ocefpaf",
    "hajapy",
    "xhochy",
    "conda-forge/libprotobuf",
    "xylar",
    "dopplershift",
    "jakirkham",
    "ocefpaf",
    "hajapy",
    "xhochy",
    "conda-forge/libprotobuf",
    "xylar",
    "dopplershift",
    "jakirkham",
    "ocefpaf",
    "hajapy",
    "xhochy",
    "conda-forge/libprotobuf",
    "xylar",
    "dopplershift",
    "jakirkham",
    "ocefpaf",
    "hajapy",
    "xhochy",
    "conda-forge/libprotobuf",
    "xylar",
    "dopplershift",
    "jakirkham",
    "ocefpaf",
    "hajapy",
    "xhochy",
    "conda-forge/libprotobuf",
    "xylar",
    "dopplershift",
    "jakirkham",
    "ocefpaf",
    "hajapy",
    "xhochy",
    "conda-forge/libprotobuf",
    "xylar",
    "dopplershift",
    "jakirkham",
    "ocefpaf",
    "hajapy",
    "xhochy",
    "conda-forge/libprotobuf",
    "xylar",
    "dopplershift",
    "jakirkham",
    "ocefpaf",
    "hajapy",
    "xhochy",
    "conda-forge/libprotobuf",
    "xylar",
    "dopplershift",
    "jakirkham",
    "ocefpaf",
    "hajapy",
    "xhochy",
    "conda-forge/libprotobuf",
    "xylar",
    "dopplershift",
    "jakirkham",
    "ocefpaf",
    "hajapy",
    "xhochy",
    "conda-forge/libprotobuf",
    "xylar",
    "dopplershift",
    "jakirkham",
    "ocefpaf",
    "hajapy",
    "xhochy",
    "conda-forge/libprotobuf",
    "xylar",
    "dopplershift",
    "jakirkham",
    "ocefpaf",
    "hajapy",
    "xhochy",
    "conda-forge/libprotobuf",
    "xylar",
    "dopplershift",
    "jakirkham",
    "ocefpaf",
    "hajapy",
    "xhochy",
    "conda-forge/libprotobuf",
    "xylar",
    "dopplershift",
    "jakirkham",
    "ocefpaf",
    "hajapy",
    "xhochy",
    "conda-forge/libprotobuf",
    "xylar",
    "dopplershift",
    "jakirkham",
    "ocefpaf",
    "hajapy",
    "xhochy",
    "conda-forge/libprotobuf",
    "xylar",
    "dopplershift",
    "jakirkham",
    "ocefpaf",
    "hajapy",
    "xhochy",
    "conda-forge/libprotobuf",
    "xylar",
    "dopplershift",
    "jakirkham",
    "ocefpaf",
    "hajapy",
    "xhochy",
    "conda-forge/libprotobuf",
    "xylar",
    "dopplershift",
    "jakirkham",
    "ocefpaf",
    "hajapy",
    "xhochy",
    "conda-forge/libprotobuf",
    "xylar",
    "dopplershift",
    "jakirkham",
    "ocefpaf",
    "hajapy",
    "xhochy",
    "conda-forge/libprotobuf",
    "xylar",
    "dopplershift",
    "jakirkham",
    "ocefpaf",
    "hajapy",
    "xhochy",
    "conda-forge/libprotobuf"
   ]
  },
  "package": {
   "name": "protobuf",
   "version": "4.23.2"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "pip <23.1",
    "setuptools",
    "libabseil",
    "libprotobuf 4.23.2",
    "python",
    "pip <23.1",
    "setuptools",
    "libabseil",
    "libprotobuf 4.23.2",
    "python",
    "pip <23.1",
    "setuptools",
    "libabseil",
    "libprotobuf 4.23.2",
    "python",
    "pip <23.1",
    "setuptools",
    "libabseil",
    "libprotobuf 4.23.2",
    "python",
    "pip <23.1",
    "setuptools",
    "libabseil",
    "libprotobuf 4.23.2",
    "python",
    "pip <23.1",
    "setuptools",
    "libabseil",
    "libprotobuf 4.23.2",
    "python",
    "pip <23.1",
    "setuptools",
    "libabseil",
    "libprotobuf 4.23.2",
    "python",
    "pip <23.1",
    "setuptools",
    "libabseil",
    "libprotobuf 4.23.2",
    "python",
    "pip <23.1",
    "setuptools",
    "libabseil",
    "libprotobuf 4.23.2",
    "python",
    "pip <23.1",
    "setuptools",
    "libabseil",
    "libprotobuf 4.23.2",
    "python",
    "pip <23.1",
    "setuptools",
    "libabseil",
    "libprotobuf 4.23.2",
    "python",
    "pip <23.1",
    "setuptools",
    "libabseil",
    "libprotobuf 4.23.2",
    "python",
    "pip <23.1",
    "setuptools",
    "libabseil",
    "libprotobuf 4.23.2",
    "python",
    "pip <23.1",
    "setuptools",
    "libabseil",
    "libprotobuf 4.23.2",
    "python",
    "pip <23.1",
    "setuptools",
    "libabseil",
    "libprotobuf 4.23.2",
    "python",
    "pip <23.1",
    "setuptools",
    "libabseil",
    "libprotobuf 4.23.2",
    "python",
    "pip <23.1",
    "setuptools",
    "libabseil",
    "libprotobuf 4.23.2",
    "python",
    "pip <23.1",
    "setuptools",
    "libabseil",
    "libprotobuf 4.23.2",
    "python",
    "pip <23.1",
    "setuptools",
    "libabseil",
    "libprotobuf 4.23.2",
    "python",
    "pip <23.1",
    "setuptools",
    "libabseil",
    "libprotobuf 4.23.2",
    "python",
    "pip <23.1",
    "setuptools",
    "libabseil",
    "libprotobuf 4.23.2",
    "python",
    "pip <23.1",
    "setuptools",
    "libabseil",
    "libprotobuf 4.23.2",
    "python",
    "pip <23.1",
    "setuptools",
    "libabseil",
    "libprotobuf 4.23.2",
    "python",
    "pip <23.1",
    "setuptools",
    "libabseil",
    "libprotobuf 4.23.2",
    "python",
    "pip <23.1",
    "setuptools",
    "libabseil",
    "libprotobuf 4.23.2",
    "python",
    "pip <23.1",
    "setuptools",
    "libabseil",
    "libprotobuf 4.23.2",
    "python",
    "pip <23.1",
    "setuptools",
    "libabseil",
    "libprotobuf 4.23.2",
    "python",
    "pip <23.1",
    "setuptools",
    "libabseil",
    "libprotobuf 4.23.2",
    "python",
    "pip <23.1",
    "setuptools",
    "libabseil",
    "libprotobuf 4.23.2",
    "python",
    "pip <23.1",
    "setuptools",
    "libabseil",
    "libprotobuf 4.23.2",
    "python",
    "pip <23.1",
    "setuptools",
    "libabseil",
    "libprotobuf 4.23.2",
    "python",
    "pip <23.1",
    "setuptools",
    "libabseil",
    "libprotobuf 4.23.2",
    "python",
    "pip <23.1",
    "setuptools",
    "libabseil",
    "libprotobuf 4.23.2",
    "python",
    "pip <23.1",
    "setuptools",
    "libabseil",
    "libprotobuf 4.23.2"
   ],
   "run": [
    "python",
    "setuptools",
    "python",
    "setuptools",
    "python",
    "setuptools",
    "python",
    "setuptools",
    "python",
    "setuptools",
    "python",
    "setuptools",
    "python",
    "setuptools",
    "python",
    "setuptools",
    "python",
    "setuptools",
    "python",
    "setuptools",
    "python",
    "setuptools",
    "python",
    "setuptools",
    "python",
    "setuptools",
    "python",
    "setuptools",
    "python",
    "setuptools",
    "python",
    "setuptools",
    "python",
    "setuptools",
    "python",
    "setuptools",
    "python",
    "setuptools",
    "python",
    "setuptools",
    "python",
    "setuptools",
    "python",
    "setuptools",
    "python",
    "setuptools",
    "python",
    "setuptools",
    "python",
    "setuptools",
    "python",
    "setuptools",
    "python",
    "setuptools",
    "python",
    "setuptools",
    "python",
    "setuptools",
    "python",
    "setuptools",
    "python",
    "setuptools",
    "python",
    "setuptools",
    "python",
    "setuptools",
    "python",
    "setuptools"
   ]
  },
  "source": {
   "patches": [
    "patches/0001-do-not-link-msvc-runtime-statically.patch",
    "patches/0002-fix-paths-for-include-lib-directories.patch",
    "patches/0003-adapt-to-name-of-protobuf-lib-on-windows.patch",
    "patches/0004-use-C-17-everywhere.patch",
    "patches/0005-set-PROTOBUF_USE_DLLS-clean-up-other-symbols-on-win.patch",
    "patches/0006-explicitly-link-to-abseil_dll-on-windows.patch",
    "patches/0007-be-more-lenient-with-abseil-version.patch",
    "patches/0001-do-not-link-msvc-runtime-statically.patch",
    "patches/0002-fix-paths-for-include-lib-directories.patch",
    "patches/0003-adapt-to-name-of-protobuf-lib-on-windows.patch",
    "patches/0004-use-C-17-everywhere.patch",
    "patches/0005-set-PROTOBUF_USE_DLLS-clean-up-other-symbols-on-win.patch",
    "patches/0006-explicitly-link-to-abseil_dll-on-windows.patch",
    "patches/0007-be-more-lenient-with-abseil-version.patch",
    "patches/0001-do-not-link-msvc-runtime-statically.patch",
    "patches/0002-fix-paths-for-include-lib-directories.patch",
    "patches/0003-adapt-to-name-of-protobuf-lib-on-windows.patch",
    "patches/0004-use-C-17-everywhere.patch",
    "patches/0005-set-PROTOBUF_USE_DLLS-clean-up-other-symbols-on-win.patch",
    "patches/0006-explicitly-link-to-abseil_dll-on-windows.patch",
    "patches/0007-be-more-lenient-with-abseil-version.patch",
    "patches/0001-do-not-link-msvc-runtime-statically.patch",
    "patches/0002-fix-paths-for-include-lib-directories.patch",
    "patches/0003-adapt-to-name-of-protobuf-lib-on-windows.patch",
    "patches/0004-use-C-17-everywhere.patch",
    "patches/0005-set-PROTOBUF_USE_DLLS-clean-up-other-symbols-on-win.patch",
    "patches/0006-explicitly-link-to-abseil_dll-on-windows.patch",
    "patches/0007-be-more-lenient-with-abseil-version.patch",
    "patches/0001-do-not-link-msvc-runtime-statically.patch",
    "patches/0002-fix-paths-for-include-lib-directories.patch",
    "patches/0003-adapt-to-name-of-protobuf-lib-on-windows.patch",
    "patches/0004-use-C-17-everywhere.patch",
    "patches/0005-set-PROTOBUF_USE_DLLS-clean-up-other-symbols-on-win.patch",
    "patches/0006-explicitly-link-to-abseil_dll-on-windows.patch",
    "patches/0007-be-more-lenient-with-abseil-version.patch",
    "patches/0001-do-not-link-msvc-runtime-statically.patch",
    "patches/0002-fix-paths-for-include-lib-directories.patch",
    "patches/0003-adapt-to-name-of-protobuf-lib-on-windows.patch",
    "patches/0004-use-C-17-everywhere.patch",
    "patches/0005-set-PROTOBUF_USE_DLLS-clean-up-other-symbols-on-win.patch",
    "patches/0006-explicitly-link-to-abseil_dll-on-windows.patch",
    "patches/0007-be-more-lenient-with-abseil-version.patch",
    "patches/0001-do-not-link-msvc-runtime-statically.patch",
    "patches/0002-fix-paths-for-include-lib-directories.patch",
    "patches/0003-adapt-to-name-of-protobuf-lib-on-windows.patch",
    "patches/0004-use-C-17-everywhere.patch",
    "patches/0005-set-PROTOBUF_USE_DLLS-clean-up-other-symbols-on-win.patch",
    "patches/0006-explicitly-link-to-abseil_dll-on-windows.patch",
    "patches/0007-be-more-lenient-with-abseil-version.patch",
    "patches/0001-do-not-link-msvc-runtime-statically.patch",
    "patches/0002-fix-paths-for-include-lib-directories.patch",
    "patches/0003-adapt-to-name-of-protobuf-lib-on-windows.patch",
    "patches/0004-use-C-17-everywhere.patch",
    "patches/0005-set-PROTOBUF_USE_DLLS-clean-up-other-symbols-on-win.patch",
    "patches/0006-explicitly-link-to-abseil_dll-on-windows.patch",
    "patches/0007-be-more-lenient-with-abseil-version.patch",
    "patches/0001-do-not-link-msvc-runtime-statically.patch",
    "patches/0002-fix-paths-for-include-lib-directories.patch",
    "patches/0003-adapt-to-name-of-protobuf-lib-on-windows.patch",
    "patches/0004-use-C-17-everywhere.patch",
    "patches/0005-set-PROTOBUF_USE_DLLS-clean-up-other-symbols-on-win.patch",
    "patches/0006-explicitly-link-to-abseil_dll-on-windows.patch",
    "patches/0007-be-more-lenient-with-abseil-version.patch",
    "patches/0001-do-not-link-msvc-runtime-statically.patch",
    "patches/0002-fix-paths-for-include-lib-directories.patch",
    "patches/0003-adapt-to-name-of-protobuf-lib-on-windows.patch",
    "patches/0004-use-C-17-everywhere.patch",
    "patches/0005-set-PROTOBUF_USE_DLLS-clean-up-other-symbols-on-win.patch",
    "patches/0006-explicitly-link-to-abseil_dll-on-windows.patch",
    "patches/0007-be-more-lenient-with-abseil-version.patch",
    "patches/0001-do-not-link-msvc-runtime-statically.patch",
    "patches/0002-fix-paths-for-include-lib-directories.patch",
    "patches/0003-adapt-to-name-of-protobuf-lib-on-windows.patch",
    "patches/0004-use-C-17-everywhere.patch",
    "patches/0005-set-PROTOBUF_USE_DLLS-clean-up-other-symbols-on-win.patch",
    "patches/0006-explicitly-link-to-abseil_dll-on-windows.patch",
    "patches/0007-be-more-lenient-with-abseil-version.patch",
    "patches/0001-do-not-link-msvc-runtime-statically.patch",
    "patches/0002-fix-paths-for-include-lib-directories.patch",
    "patches/0003-adapt-to-name-of-protobuf-lib-on-windows.patch",
    "patches/0004-use-C-17-everywhere.patch",
    "patches/0005-set-PROTOBUF_USE_DLLS-clean-up-other-symbols-on-win.patch",
    "patches/0006-explicitly-link-to-abseil_dll-on-windows.patch",
    "patches/0007-be-more-lenient-with-abseil-version.patch",
    "patches/0001-do-not-link-msvc-runtime-statically.patch",
    "patches/0002-fix-paths-for-include-lib-directories.patch",
    "patches/0003-adapt-to-name-of-protobuf-lib-on-windows.patch",
    "patches/0004-use-C-17-everywhere.patch",
    "patches/0005-set-PROTOBUF_USE_DLLS-clean-up-other-symbols-on-win.patch",
    "patches/0006-explicitly-link-to-abseil_dll-on-windows.patch",
    "patches/0007-be-more-lenient-with-abseil-version.patch",
    "patches/0001-do-not-link-msvc-runtime-statically.patch",
    "patches/0002-fix-paths-for-include-lib-directories.patch",
    "patches/0003-adapt-to-name-of-protobuf-lib-on-windows.patch",
    "patches/0004-use-C-17-everywhere.patch",
    "patches/0005-set-PROTOBUF_USE_DLLS-clean-up-other-symbols-on-win.patch",
    "patches/0006-explicitly-link-to-abseil_dll-on-windows.patch",
    "patches/0007-be-more-lenient-with-abseil-version.patch",
    "patches/0001-do-not-link-msvc-runtime-statically.patch",
    "patches/0002-fix-paths-for-include-lib-directories.patch",
    "patches/0003-adapt-to-name-of-protobuf-lib-on-windows.patch",
    "patches/0004-use-C-17-everywhere.patch",
    "patches/0005-set-PROTOBUF_USE_DLLS-clean-up-other-symbols-on-win.patch",
    "patches/0006-explicitly-link-to-abseil_dll-on-windows.patch",
    "patches/0007-be-more-lenient-with-abseil-version.patch",
    "patches/0001-do-not-link-msvc-runtime-statically.patch",
    "patches/0002-fix-paths-for-include-lib-directories.patch",
    "patches/0003-adapt-to-name-of-protobuf-lib-on-windows.patch",
    "patches/0004-use-C-17-everywhere.patch",
    "patches/0005-set-PROTOBUF_USE_DLLS-clean-up-other-symbols-on-win.patch",
    "patches/0006-explicitly-link-to-abseil_dll-on-windows.patch",
    "patches/0007-be-more-lenient-with-abseil-version.patch",
    "patches/0001-do-not-link-msvc-runtime-statically.patch",
    "patches/0002-fix-paths-for-include-lib-directories.patch",
    "patches/0003-adapt-to-name-of-protobuf-lib-on-windows.patch",
    "patches/0004-use-C-17-everywhere.patch",
    "patches/0005-set-PROTOBUF_USE_DLLS-clean-up-other-symbols-on-win.patch",
    "patches/0006-explicitly-link-to-abseil_dll-on-windows.patch",
    "patches/0007-be-more-lenient-with-abseil-version.patch",
    "patches/0001-do-not-link-msvc-runtime-statically.patch",
    "patches/0002-fix-paths-for-include-lib-directories.patch",
    "patches/0003-adapt-to-name-of-protobuf-lib-on-windows.patch",
    "patches/0004-use-C-17-everywhere.patch",
    "patches/0005-set-PROTOBUF_USE_DLLS-clean-up-other-symbols-on-win.patch",
    "patches/0006-explicitly-link-to-abseil_dll-on-windows.patch",
    "patches/0007-be-more-lenient-with-abseil-version.patch",
    "patches/0001-do-not-link-msvc-runtime-statically.patch",
    "patches/0002-fix-paths-for-include-lib-directories.patch",
    "patches/0003-adapt-to-name-of-protobuf-lib-on-windows.patch",
    "patches/0004-use-C-17-everywhere.patch",
    "patches/0005-set-PROTOBUF_USE_DLLS-clean-up-other-symbols-on-win.patch",
    "patches/0006-explicitly-link-to-abseil_dll-on-windows.patch",
    "patches/0007-be-more-lenient-with-abseil-version.patch",
    "patches/0001-do-not-link-msvc-runtime-statically.patch",
    "patches/0002-fix-paths-for-include-lib-directories.patch",
    "patches/0003-adapt-to-name-of-protobuf-lib-on-windows.patch",
    "patches/0004-use-C-17-everywhere.patch",
    "patches/0005-set-PROTOBUF_USE_DLLS-clean-up-other-symbols-on-win.patch",
    "patches/0006-explicitly-link-to-abseil_dll-on-windows.patch",
    "patches/0007-be-more-lenient-with-abseil-version.patch",
    "patches/0001-do-not-link-msvc-runtime-statically.patch",
    "patches/0002-fix-paths-for-include-lib-directories.patch",
    "patches/0003-adapt-to-name-of-protobuf-lib-on-windows.patch",
    "patches/0004-use-C-17-everywhere.patch",
    "patches/0005-set-PROTOBUF_USE_DLLS-clean-up-other-symbols-on-win.patch",
    "patches/0006-explicitly-link-to-abseil_dll-on-windows.patch",
    "patches/0007-be-more-lenient-with-abseil-version.patch",
    "patches/0001-do-not-link-msvc-runtime-statically.patch",
    "patches/0002-fix-paths-for-include-lib-directories.patch",
    "patches/0003-adapt-to-name-of-protobuf-lib-on-windows.patch",
    "patches/0004-use-C-17-everywhere.patch",
    "patches/0005-set-PROTOBUF_USE_DLLS-clean-up-other-symbols-on-win.patch",
    "patches/0006-explicitly-link-to-abseil_dll-on-windows.patch",
    "patches/0007-be-more-lenient-with-abseil-version.patch",
    "patches/0001-do-not-link-msvc-runtime-statically.patch",
    "patches/0002-fix-paths-for-include-lib-directories.patch",
    "patches/0003-adapt-to-name-of-protobuf-lib-on-windows.patch",
    "patches/0004-use-C-17-everywhere.patch",
    "patches/0005-set-PROTOBUF_USE_DLLS-clean-up-other-symbols-on-win.patch",
    "patches/0006-explicitly-link-to-abseil_dll-on-windows.patch",
    "patches/0007-be-more-lenient-with-abseil-version.patch",
    "patches/0001-do-not-link-msvc-runtime-statically.patch",
    "patches/0002-fix-paths-for-include-lib-directories.patch",
    "patches/0003-adapt-to-name-of-protobuf-lib-on-windows.patch",
    "patches/0004-use-C-17-everywhere.patch",
    "patches/0005-set-PROTOBUF_USE_DLLS-clean-up-other-symbols-on-win.patch",
    "patches/0006-explicitly-link-to-abseil_dll-on-windows.patch",
    "patches/0007-be-more-lenient-with-abseil-version.patch",
    "patches/0001-do-not-link-msvc-runtime-statically.patch",
    "patches/0002-fix-paths-for-include-lib-directories.patch",
    "patches/0003-adapt-to-name-of-protobuf-lib-on-windows.patch",
    "patches/0004-use-C-17-everywhere.patch",
    "patches/0005-set-PROTOBUF_USE_DLLS-clean-up-other-symbols-on-win.patch",
    "patches/0006-explicitly-link-to-abseil_dll-on-windows.patch",
    "patches/0007-be-more-lenient-with-abseil-version.patch",
    "patches/0001-do-not-link-msvc-runtime-statically.patch",
    "patches/0002-fix-paths-for-include-lib-directories.patch",
    "patches/0003-adapt-to-name-of-protobuf-lib-on-windows.patch",
    "patches/0004-use-C-17-everywhere.patch",
    "patches/0005-set-PROTOBUF_USE_DLLS-clean-up-other-symbols-on-win.patch",
    "patches/0006-explicitly-link-to-abseil_dll-on-windows.patch",
    "patches/0007-be-more-lenient-with-abseil-version.patch",
    "patches/0001-do-not-link-msvc-runtime-statically.patch",
    "patches/0002-fix-paths-for-include-lib-directories.patch",
    "patches/0003-adapt-to-name-of-protobuf-lib-on-windows.patch",
    "patches/0004-use-C-17-everywhere.patch",
    "patches/0005-set-PROTOBUF_USE_DLLS-clean-up-other-symbols-on-win.patch",
    "patches/0006-explicitly-link-to-abseil_dll-on-windows.patch",
    "patches/0007-be-more-lenient-with-abseil-version.patch",
    "patches/0001-do-not-link-msvc-runtime-statically.patch",
    "patches/0002-fix-paths-for-include-lib-directories.patch",
    "patches/0003-adapt-to-name-of-protobuf-lib-on-windows.patch",
    "patches/0004-use-C-17-everywhere.patch",
    "patches/0005-set-PROTOBUF_USE_DLLS-clean-up-other-symbols-on-win.patch",
    "patches/0006-explicitly-link-to-abseil_dll-on-windows.patch",
    "patches/0007-be-more-lenient-with-abseil-version.patch",
    "patches/0001-do-not-link-msvc-runtime-statically.patch",
    "patches/0002-fix-paths-for-include-lib-directories.patch",
    "patches/0003-adapt-to-name-of-protobuf-lib-on-windows.patch",
    "patches/0004-use-C-17-everywhere.patch",
    "patches/0005-set-PROTOBUF_USE_DLLS-clean-up-other-symbols-on-win.patch",
    "patches/0006-explicitly-link-to-abseil_dll-on-windows.patch",
    "patches/0007-be-more-lenient-with-abseil-version.patch",
    "patches/0001-do-not-link-msvc-runtime-statically.patch",
    "patches/0002-fix-paths-for-include-lib-directories.patch",
    "patches/0003-adapt-to-name-of-protobuf-lib-on-windows.patch",
    "patches/0004-use-C-17-everywhere.patch",
    "patches/0005-set-PROTOBUF_USE_DLLS-clean-up-other-symbols-on-win.patch",
    "patches/0006-explicitly-link-to-abseil_dll-on-windows.patch",
    "patches/0007-be-more-lenient-with-abseil-version.patch",
    "patches/0001-do-not-link-msvc-runtime-statically.patch",
    "patches/0002-fix-paths-for-include-lib-directories.patch",
    "patches/0003-adapt-to-name-of-protobuf-lib-on-windows.patch",
    "patches/0004-use-C-17-everywhere.patch",
    "patches/0005-set-PROTOBUF_USE_DLLS-clean-up-other-symbols-on-win.patch",
    "patches/0006-explicitly-link-to-abseil_dll-on-windows.patch",
    "patches/0007-be-more-lenient-with-abseil-version.patch",
    "patches/0001-do-not-link-msvc-runtime-statically.patch",
    "patches/0002-fix-paths-for-include-lib-directories.patch",
    "patches/0003-adapt-to-name-of-protobuf-lib-on-windows.patch",
    "patches/0004-use-C-17-everywhere.patch",
    "patches/0005-set-PROTOBUF_USE_DLLS-clean-up-other-symbols-on-win.patch",
    "patches/0006-explicitly-link-to-abseil_dll-on-windows.patch",
    "patches/0007-be-more-lenient-with-abseil-version.patch",
    "patches/0001-do-not-link-msvc-runtime-statically.patch",
    "patches/0002-fix-paths-for-include-lib-directories.patch",
    "patches/0003-adapt-to-name-of-protobuf-lib-on-windows.patch",
    "patches/0004-use-C-17-everywhere.patch",
    "patches/0005-set-PROTOBUF_USE_DLLS-clean-up-other-symbols-on-win.patch",
    "patches/0006-explicitly-link-to-abseil_dll-on-windows.patch",
    "patches/0007-be-more-lenient-with-abseil-version.patch",
    "patches/0001-do-not-link-msvc-runtime-statically.patch",
    "patches/0002-fix-paths-for-include-lib-directories.patch",
    "patches/0003-adapt-to-name-of-protobuf-lib-on-windows.patch",
    "patches/0004-use-C-17-everywhere.patch",
    "patches/0005-set-PROTOBUF_USE_DLLS-clean-up-other-symbols-on-win.patch",
    "patches/0006-explicitly-link-to-abseil_dll-on-windows.patch",
    "patches/0007-be-more-lenient-with-abseil-version.patch"
   ],
   "sha256": "0b0395d34e000f1229679e10d984ed7913078f3dd7f26cf0476467f5e65716f4",
   "url": "https://github.com/protocolbuffers/protobuf/archive/refs/tags/v23.2.tar.gz"
  },
  "test": {
   "commands": [
    "python -c \"from google.protobuf.internal import api_implementation; assert api_implementation.Type() == 'python'\"",
    "python -c \"from google.protobuf.internal import api_implementation; assert api_implementation.Type() == 'cpp'\"",
    "python -c \"from google.protobuf.internal import api_implementation; assert api_implementation.Type() == 'cpp'\"",
    "python -c \"from google.protobuf.internal import api_implementation; assert api_implementation.Type() == 'cpp'\"",
    "python -c \"from google.protobuf.internal import api_implementation; assert api_implementation.Type() == 'cpp'\"",
    "python -c \"from google.protobuf.internal import api_implementation; assert api_implementation.Type() == 'python'\"",
    "python -c \"from google.protobuf.internal import api_implementation; assert api_implementation.Type() == 'cpp'\"",
    "python -c \"from google.protobuf.internal import api_implementation; assert api_implementation.Type() == 'python'\"",
    "python -c \"from google.protobuf.internal import api_implementation; assert api_implementation.Type() == 'cpp'\"",
    "python -c \"from google.protobuf.internal import api_implementation; assert api_implementation.Type() == 'cpp'\"",
    "python -c \"from google.protobuf.internal import api_implementation; assert api_implementation.Type() == 'cpp'\"",
    "python -c \"from google.protobuf.internal import api_implementation; assert api_implementation.Type() == 'python'\"",
    "python -c \"from google.protobuf.internal import api_implementation; assert api_implementation.Type() == 'cpp'\"",
    "python -c \"from google.protobuf.internal import api_implementation; assert api_implementation.Type() == 'cpp'\"",
    "python -c \"from google.protobuf.internal import api_implementation; assert api_implementation.Type() == 'python'\"",
    "python -c \"from google.protobuf.internal import api_implementation; assert api_implementation.Type() == 'cpp'\"",
    "python -c \"from google.protobuf.internal import api_implementation; assert api_implementation.Type() == 'cpp'\"",
    "python -c \"from google.protobuf.internal import api_implementation; assert api_implementation.Type() == 'python'\"",
    "python -c \"from google.protobuf.internal import api_implementation; assert api_implementation.Type() == 'cpp'\"",
    "python -c \"from google.protobuf.internal import api_implementation; assert api_implementation.Type() == 'cpp'\"",
    "python -c \"from google.protobuf.internal import api_implementation; assert api_implementation.Type() == 'python'\"",
    "python -c \"from google.protobuf.internal import api_implementation; assert api_implementation.Type() == 'cpp'\"",
    "python -c \"from google.protobuf.internal import api_implementation; assert api_implementation.Type() == 'cpp'\"",
    "python -c \"from google.protobuf.internal import api_implementation; assert api_implementation.Type() == 'python'\"",
    "python -c \"from google.protobuf.internal import api_implementation; assert api_implementation.Type() == 'cpp'\"",
    "python -c \"from google.protobuf.internal import api_implementation; assert api_implementation.Type() == 'cpp'\"",
    "python -c \"from google.protobuf.internal import api_implementation; assert api_implementation.Type() == 'cpp'\"",
    "python -c \"from google.protobuf.internal import api_implementation; assert api_implementation.Type() == 'cpp'\"",
    "python -c \"from google.protobuf.internal import api_implementation; assert api_implementation.Type() == 'python'\"",
    "python -c \"from google.protobuf.internal import api_implementation; assert api_implementation.Type() == 'cpp'\"",
    "python -c \"from google.protobuf.internal import api_implementation; assert api_implementation.Type() == 'cpp'\"",
    "python -c \"from google.protobuf.internal import api_implementation; assert api_implementation.Type() == 'cpp'\"",
    "python -c \"from google.protobuf.internal import api_implementation; assert api_implementation.Type() == 'python'\"",
    "python -c \"from google.protobuf.internal import api_implementation; assert api_implementation.Type() == 'cpp'\""
   ],
   "imports": [
    "google",
    "google.protobuf",
    "google.protobuf.internal",
    "google.protobuf.pyext",
    "google.protobuf.util",
    "google.protobuf.compiler",
    "google",
    "google.protobuf",
    "google.protobuf.internal",
    "google.protobuf.pyext",
    "google.protobuf.util",
    "google.protobuf.compiler",
    "google",
    "google.protobuf",
    "google.protobuf.internal",
    "google.protobuf.pyext",
    "google.protobuf.util",
    "google.protobuf.compiler",
    "google",
    "google.protobuf",
    "google.protobuf.internal",
    "google.protobuf.pyext",
    "google.protobuf.util",
    "google.protobuf.compiler",
    "google",
    "google.protobuf",
    "google.protobuf.internal",
    "google.protobuf.pyext",
    "google.protobuf.util",
    "google.protobuf.compiler",
    "google",
    "google.protobuf",
    "google.protobuf.internal",
    "google.protobuf.pyext",
    "google.protobuf.util",
    "google.protobuf.compiler",
    "google",
    "google.protobuf",
    "google.protobuf.internal",
    "google.protobuf.pyext",
    "google.protobuf.util",
    "google.protobuf.compiler",
    "google",
    "google.protobuf",
    "google.protobuf.internal",
    "google.protobuf.pyext",
    "google.protobuf.util",
    "google.protobuf.compiler",
    "google",
    "google.protobuf",
    "google.protobuf.internal",
    "google.protobuf.pyext",
    "google.protobuf.util",
    "google.protobuf.compiler",
    "google",
    "google.protobuf",
    "google.protobuf.internal",
    "google.protobuf.pyext",
    "google.protobuf.util",
    "google.protobuf.compiler",
    "google",
    "google.protobuf",
    "google.protobuf.internal",
    "google.protobuf.pyext",
    "google.protobuf.util",
    "google.protobuf.compiler",
    "google",
    "google.protobuf",
    "google.protobuf.internal",
    "google.protobuf.pyext",
    "google.protobuf.util",
    "google.protobuf.compiler",
    "google",
    "google.protobuf",
    "google.protobuf.internal",
    "google.protobuf.pyext",
    "google.protobuf.util",
    "google.protobuf.compiler",
    "google",
    "google.protobuf",
    "google.protobuf.internal",
    "google.protobuf.pyext",
    "google.protobuf.util",
    "google.protobuf.compiler",
    "google",
    "google.protobuf",
    "google.protobuf.internal",
    "google.protobuf.pyext",
    "google.protobuf.util",
    "google.protobuf.compiler",
    "google",
    "google.protobuf",
    "google.protobuf.internal",
    "google.protobuf.pyext",
    "google.protobuf.util",
    "google.protobuf.compiler",
    "google",
    "google.protobuf",
    "google.protobuf.internal",
    "google.protobuf.pyext",
    "google.protobuf.util",
    "google.protobuf.compiler",
    "google",
    "google.protobuf",
    "google.protobuf.internal",
    "google.protobuf.pyext",
    "google.protobuf.util",
    "google.protobuf.compiler",
    "google",
    "google.protobuf",
    "google.protobuf.internal",
    "google.protobuf.pyext",
    "google.protobuf.util",
    "google.protobuf.compiler",
    "google",
    "google.protobuf",
    "google.protobuf.internal",
    "google.protobuf.pyext",
    "google.protobuf.util",
    "google.protobuf.compiler",
    "google",
    "google.protobuf",
    "google.protobuf.internal",
    "google.protobuf.pyext",
    "google.protobuf.util",
    "google.protobuf.compiler",
    "google",
    "google.protobuf",
    "google.protobuf.internal",
    "google.protobuf.pyext",
    "google.protobuf.util",
    "google.protobuf.compiler",
    "google",
    "google.protobuf",
    "google.protobuf.internal",
    "google.protobuf.pyext",
    "google.protobuf.util",
    "google.protobuf.compiler",
    "google",
    "google.protobuf",
    "google.protobuf.internal",
    "google.protobuf.pyext",
    "google.protobuf.util",
    "google.protobuf.compiler",
    "google",
    "google.protobuf",
    "google.protobuf.internal",
    "google.protobuf.pyext",
    "google.protobuf.util",
    "google.protobuf.compiler",
    "google",
    "google.protobuf",
    "google.protobuf.internal",
    "google.protobuf.pyext",
    "google.protobuf.util",
    "google.protobuf.compiler",
    "google",
    "google.protobuf",
    "google.protobuf.internal",
    "google.protobuf.pyext",
    "google.protobuf.util",
    "google.protobuf.compiler",
    "google",
    "google.protobuf",
    "google.protobuf.internal",
    "google.protobuf.pyext",
    "google.protobuf.util",
    "google.protobuf.compiler",
    "google",
    "google.protobuf",
    "google.protobuf.internal",
    "google.protobuf.pyext",
    "google.protobuf.util",
    "google.protobuf.compiler",
    "google",
    "google.protobuf",
    "google.protobuf.internal",
    "google.protobuf.pyext",
    "google.protobuf.util",
    "google.protobuf.compiler",
    "google",
    "google.protobuf",
    "google.protobuf.internal",
    "google.protobuf.pyext",
    "google.protobuf.util",
    "google.protobuf.compiler",
    "google",
    "google.protobuf",
    "google.protobuf.internal",
    "google.protobuf.pyext",
    "google.protobuf.util",
    "google.protobuf.compiler",
    "google",
    "google.protobuf",
    "google.protobuf.internal",
    "google.protobuf.pyext",
    "google.protobuf.util",
    "google.protobuf.compiler",
    "google",
    "google.protobuf",
    "google.protobuf.internal",
    "google.protobuf.pyext",
    "google.protobuf.util",
    "google.protobuf.compiler"
   ]
  }
 },
 "name": "protobuf",
 "osx_64_meta_yaml": {
  "about": {
   "description": "Protocol buffers are Google's language-neutral, platform-neutral, extensible\nmechanism for serializing structured data,think XML, but smaller, faster, and simpler.\n",
   "dev_url": "https://github.com/protocolbuffers/protobuf",
   "doc_source_url": "https://github.com/protocolbuffers/protobuf/blob/master/README.md",
   "doc_url": "https://developers.google.com/protocol-buffers/docs/tutorials",
   "home": "https://developers.google.com/protocol-buffers/",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "Protocol Buffers - Google's data interchange format."
  },
  "build": {
   "number": "0",
   "script": [
    "cd python",
    "export PROTOC=$PREFIX/bin/protoc",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv --install-option=\"--cpp_implementation\"",
    "cd python",
    "export PROTOC=$PREFIX/bin/protoc",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv --install-option=\"--cpp_implementation\"",
    "cd python",
    "export PROTOC=$PREFIX/bin/protoc",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv --install-option=\"--cpp_implementation\"",
    "cd python",
    "export PROTOC=$PREFIX/bin/protoc",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv --install-option=\"--cpp_implementation\"",
    "cd python",
    "export PROTOC=$PREFIX/bin/protoc",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv --install-option=\"--cpp_implementation\"",
    "cd python",
    "export PROTOC=$PREFIX/bin/protoc",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv --install-option=\"--cpp_implementation\""
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "xylar",
    "dopplershift",
    "jakirkham",
    "ocefpaf",
    "hajapy",
    "xhochy",
    "conda-forge/libprotobuf",
    "xylar",
    "dopplershift",
    "jakirkham",
    "ocefpaf",
    "hajapy",
    "xhochy",
    "conda-forge/libprotobuf",
    "xylar",
    "dopplershift",
    "jakirkham",
    "ocefpaf",
    "hajapy",
    "xhochy",
    "conda-forge/libprotobuf",
    "xylar",
    "dopplershift",
    "jakirkham",
    "ocefpaf",
    "hajapy",
    "xhochy",
    "conda-forge/libprotobuf",
    "xylar",
    "dopplershift",
    "jakirkham",
    "ocefpaf",
    "hajapy",
    "xhochy",
    "conda-forge/libprotobuf",
    "xylar",
    "dopplershift",
    "jakirkham",
    "ocefpaf",
    "hajapy",
    "xhochy",
    "conda-forge/libprotobuf"
   ]
  },
  "package": {
   "name": "protobuf",
   "version": "4.23.2"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "pip <23.1",
    "setuptools",
    "libabseil",
    "libprotobuf 4.23.2",
    "python",
    "pip <23.1",
    "setuptools",
    "libabseil",
    "libprotobuf 4.23.2",
    "python",
    "pip <23.1",
    "setuptools",
    "libabseil",
    "libprotobuf 4.23.2",
    "python",
    "pip <23.1",
    "setuptools",
    "libabseil",
    "libprotobuf 4.23.2",
    "python",
    "pip <23.1",
    "setuptools",
    "libabseil",
    "libprotobuf 4.23.2",
    "python",
    "pip <23.1",
    "setuptools",
    "libabseil",
    "libprotobuf 4.23.2"
   ],
   "run": [
    "python",
    "setuptools",
    "python",
    "setuptools",
    "python",
    "setuptools",
    "python",
    "setuptools",
    "python",
    "setuptools",
    "python",
    "setuptools"
   ]
  },
  "source": {
   "patches": [
    "patches/0001-do-not-link-msvc-runtime-statically.patch",
    "patches/0002-fix-paths-for-include-lib-directories.patch",
    "patches/0003-adapt-to-name-of-protobuf-lib-on-windows.patch",
    "patches/0004-use-C-17-everywhere.patch",
    "patches/0005-set-PROTOBUF_USE_DLLS-clean-up-other-symbols-on-win.patch",
    "patches/0006-explicitly-link-to-abseil_dll-on-windows.patch",
    "patches/0007-be-more-lenient-with-abseil-version.patch",
    "patches/0001-do-not-link-msvc-runtime-statically.patch",
    "patches/0002-fix-paths-for-include-lib-directories.patch",
    "patches/0003-adapt-to-name-of-protobuf-lib-on-windows.patch",
    "patches/0004-use-C-17-everywhere.patch",
    "patches/0005-set-PROTOBUF_USE_DLLS-clean-up-other-symbols-on-win.patch",
    "patches/0006-explicitly-link-to-abseil_dll-on-windows.patch",
    "patches/0007-be-more-lenient-with-abseil-version.patch",
    "patches/0001-do-not-link-msvc-runtime-statically.patch",
    "patches/0002-fix-paths-for-include-lib-directories.patch",
    "patches/0003-adapt-to-name-of-protobuf-lib-on-windows.patch",
    "patches/0004-use-C-17-everywhere.patch",
    "patches/0005-set-PROTOBUF_USE_DLLS-clean-up-other-symbols-on-win.patch",
    "patches/0006-explicitly-link-to-abseil_dll-on-windows.patch",
    "patches/0007-be-more-lenient-with-abseil-version.patch",
    "patches/0001-do-not-link-msvc-runtime-statically.patch",
    "patches/0002-fix-paths-for-include-lib-directories.patch",
    "patches/0003-adapt-to-name-of-protobuf-lib-on-windows.patch",
    "patches/0004-use-C-17-everywhere.patch",
    "patches/0005-set-PROTOBUF_USE_DLLS-clean-up-other-symbols-on-win.patch",
    "patches/0006-explicitly-link-to-abseil_dll-on-windows.patch",
    "patches/0007-be-more-lenient-with-abseil-version.patch",
    "patches/0001-do-not-link-msvc-runtime-statically.patch",
    "patches/0002-fix-paths-for-include-lib-directories.patch",
    "patches/0003-adapt-to-name-of-protobuf-lib-on-windows.patch",
    "patches/0004-use-C-17-everywhere.patch",
    "patches/0005-set-PROTOBUF_USE_DLLS-clean-up-other-symbols-on-win.patch",
    "patches/0006-explicitly-link-to-abseil_dll-on-windows.patch",
    "patches/0007-be-more-lenient-with-abseil-version.patch",
    "patches/0001-do-not-link-msvc-runtime-statically.patch",
    "patches/0002-fix-paths-for-include-lib-directories.patch",
    "patches/0003-adapt-to-name-of-protobuf-lib-on-windows.patch",
    "patches/0004-use-C-17-everywhere.patch",
    "patches/0005-set-PROTOBUF_USE_DLLS-clean-up-other-symbols-on-win.patch",
    "patches/0006-explicitly-link-to-abseil_dll-on-windows.patch",
    "patches/0007-be-more-lenient-with-abseil-version.patch"
   ],
   "sha256": "0b0395d34e000f1229679e10d984ed7913078f3dd7f26cf0476467f5e65716f4",
   "url": "https://github.com/protocolbuffers/protobuf/archive/refs/tags/v23.2.tar.gz"
  },
  "test": {
   "commands": [
    "python -c \"from google.protobuf.internal import api_implementation; assert api_implementation.Type() == 'cpp'\"",
    "python -c \"from google.protobuf.internal import api_implementation; assert api_implementation.Type() == 'cpp'\"",
    "python -c \"from google.protobuf.internal import api_implementation; assert api_implementation.Type() == 'python'\"",
    "python -c \"from google.protobuf.internal import api_implementation; assert api_implementation.Type() == 'cpp'\"",
    "python -c \"from google.protobuf.internal import api_implementation; assert api_implementation.Type() == 'cpp'\"",
    "python -c \"from google.protobuf.internal import api_implementation; assert api_implementation.Type() == 'python'\""
   ],
   "imports": [
    "google",
    "google.protobuf",
    "google.protobuf.internal",
    "google.protobuf.pyext",
    "google.protobuf.util",
    "google.protobuf.compiler",
    "google",
    "google.protobuf",
    "google.protobuf.internal",
    "google.protobuf.pyext",
    "google.protobuf.util",
    "google.protobuf.compiler",
    "google",
    "google.protobuf",
    "google.protobuf.internal",
    "google.protobuf.pyext",
    "google.protobuf.util",
    "google.protobuf.compiler",
    "google",
    "google.protobuf",
    "google.protobuf.internal",
    "google.protobuf.pyext",
    "google.protobuf.util",
    "google.protobuf.compiler",
    "google",
    "google.protobuf",
    "google.protobuf.internal",
    "google.protobuf.pyext",
    "google.protobuf.util",
    "google.protobuf.compiler",
    "google",
    "google.protobuf",
    "google.protobuf.internal",
    "google.protobuf.pyext",
    "google.protobuf.util",
    "google.protobuf.compiler"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "libabseil",
    "libprotobuf",
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python",
    "setuptools"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "osx_arm64_meta_yaml": {
  "about": {
   "description": "Protocol buffers are Google's language-neutral, platform-neutral, extensible\nmechanism for serializing structured data,think XML, but smaller, faster, and simpler.\n",
   "dev_url": "https://github.com/protocolbuffers/protobuf",
   "doc_source_url": "https://github.com/protocolbuffers/protobuf/blob/master/README.md",
   "doc_url": "https://developers.google.com/protocol-buffers/docs/tutorials",
   "home": "https://developers.google.com/protocol-buffers/",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "Protocol Buffers - Google's data interchange format."
  },
  "build": {
   "number": "0",
   "script": [
    "cd python",
    "export PROTOC=$PREFIX/bin/protoc",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv --install-option=\"--cpp_implementation\"",
    "cd python",
    "export PROTOC=$PREFIX/bin/protoc",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv --install-option=\"--cpp_implementation\"",
    "cd python",
    "export PROTOC=$PREFIX/bin/protoc",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv --install-option=\"--cpp_implementation\"",
    "cd python",
    "export PROTOC=$PREFIX/bin/protoc",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv --install-option=\"--cpp_implementation\""
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "xylar",
    "dopplershift",
    "jakirkham",
    "ocefpaf",
    "hajapy",
    "xhochy",
    "conda-forge/libprotobuf",
    "xylar",
    "dopplershift",
    "jakirkham",
    "ocefpaf",
    "hajapy",
    "xhochy",
    "conda-forge/libprotobuf",
    "xylar",
    "dopplershift",
    "jakirkham",
    "ocefpaf",
    "hajapy",
    "xhochy",
    "conda-forge/libprotobuf",
    "xylar",
    "dopplershift",
    "jakirkham",
    "ocefpaf",
    "hajapy",
    "xhochy",
    "conda-forge/libprotobuf"
   ]
  },
  "package": {
   "name": "protobuf",
   "version": "4.23.2"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "pip <23.1",
    "setuptools",
    "libabseil",
    "libprotobuf 4.23.2",
    "python",
    "pip <23.1",
    "setuptools",
    "libabseil",
    "libprotobuf 4.23.2",
    "python",
    "pip <23.1",
    "setuptools",
    "libabseil",
    "libprotobuf 4.23.2",
    "python",
    "pip <23.1",
    "setuptools",
    "libabseil",
    "libprotobuf 4.23.2"
   ],
   "run": [
    "python",
    "setuptools",
    "python",
    "setuptools",
    "python",
    "setuptools",
    "python",
    "setuptools"
   ]
  },
  "source": {
   "patches": [
    "patches/0001-do-not-link-msvc-runtime-statically.patch",
    "patches/0002-fix-paths-for-include-lib-directories.patch",
    "patches/0003-adapt-to-name-of-protobuf-lib-on-windows.patch",
    "patches/0004-use-C-17-everywhere.patch",
    "patches/0005-set-PROTOBUF_USE_DLLS-clean-up-other-symbols-on-win.patch",
    "patches/0006-explicitly-link-to-abseil_dll-on-windows.patch",
    "patches/0007-be-more-lenient-with-abseil-version.patch",
    "patches/0001-do-not-link-msvc-runtime-statically.patch",
    "patches/0002-fix-paths-for-include-lib-directories.patch",
    "patches/0003-adapt-to-name-of-protobuf-lib-on-windows.patch",
    "patches/0004-use-C-17-everywhere.patch",
    "patches/0005-set-PROTOBUF_USE_DLLS-clean-up-other-symbols-on-win.patch",
    "patches/0006-explicitly-link-to-abseil_dll-on-windows.patch",
    "patches/0007-be-more-lenient-with-abseil-version.patch",
    "patches/0001-do-not-link-msvc-runtime-statically.patch",
    "patches/0002-fix-paths-for-include-lib-directories.patch",
    "patches/0003-adapt-to-name-of-protobuf-lib-on-windows.patch",
    "patches/0004-use-C-17-everywhere.patch",
    "patches/0005-set-PROTOBUF_USE_DLLS-clean-up-other-symbols-on-win.patch",
    "patches/0006-explicitly-link-to-abseil_dll-on-windows.patch",
    "patches/0007-be-more-lenient-with-abseil-version.patch",
    "patches/0001-do-not-link-msvc-runtime-statically.patch",
    "patches/0002-fix-paths-for-include-lib-directories.patch",
    "patches/0003-adapt-to-name-of-protobuf-lib-on-windows.patch",
    "patches/0004-use-C-17-everywhere.patch",
    "patches/0005-set-PROTOBUF_USE_DLLS-clean-up-other-symbols-on-win.patch",
    "patches/0006-explicitly-link-to-abseil_dll-on-windows.patch",
    "patches/0007-be-more-lenient-with-abseil-version.patch"
   ],
   "sha256": "0b0395d34e000f1229679e10d984ed7913078f3dd7f26cf0476467f5e65716f4",
   "url": "https://github.com/protocolbuffers/protobuf/archive/refs/tags/v23.2.tar.gz"
  },
  "test": {
   "commands": [
    "python -c \"from google.protobuf.internal import api_implementation; assert api_implementation.Type() == 'cpp'\"",
    "python -c \"from google.protobuf.internal import api_implementation; assert api_implementation.Type() == 'cpp'\"",
    "python -c \"from google.protobuf.internal import api_implementation; assert api_implementation.Type() == 'cpp'\"",
    "python -c \"from google.protobuf.internal import api_implementation; assert api_implementation.Type() == 'cpp'\""
   ],
   "imports": [
    "google",
    "google.protobuf",
    "google.protobuf.internal",
    "google.protobuf.pyext",
    "google.protobuf.util",
    "google.protobuf.compiler",
    "google",
    "google.protobuf",
    "google.protobuf.internal",
    "google.protobuf.pyext",
    "google.protobuf.util",
    "google.protobuf.compiler",
    "google",
    "google.protobuf",
    "google.protobuf.internal",
    "google.protobuf.pyext",
    "google.protobuf.util",
    "google.protobuf.compiler",
    "google",
    "google.protobuf",
    "google.protobuf.internal",
    "google.protobuf.pyext",
    "google.protobuf.util",
    "google.protobuf.compiler"
   ]
  }
 },
 "osx_arm64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "libabseil",
    "libprotobuf",
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python",
    "setuptools"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "protobuf"
  ]
 },
 "parsing_error": false,
 "platforms": [
  "win_64",
  "osx_64",
  "linux_aarch64",
  "linux_64",
  "osx_arm64",
  "linux_ppc64le"
 ],
 "pr_info": {
  "__lazy_json__": "pr_info/protobuf.json"
 },
 "raw_meta_yaml": "# keep this without major version to let the bot pick it up\n{% set version = \"23.2\" %}\n# protobuf doesn't add the major version in the tag, it's defined per language in\n# https://github.com/protocolbuffers/protobuf/blob/main/version.json\n{% set major = \"4\" %}\n# libprotobuf can have a different major version than protobuf\n{% set lib_major = \"4\" %}\n\npackage:\n  name: protobuf\n  version: {{ major ~ \".\" ~ version }}\n\nsource:\n  url: https://github.com/protocolbuffers/protobuf/archive/refs/tags/v{{ version }}.tar.gz\n  sha256: 0b0395d34e000f1229679e10d984ed7913078f3dd7f26cf0476467f5e65716f4\n  patches:\n    - patches/0001-do-not-link-msvc-runtime-statically.patch\n    - patches/0002-fix-paths-for-include-lib-directories.patch\n    - patches/0003-adapt-to-name-of-protobuf-lib-on-windows.patch\n    - patches/0004-use-C-17-everywhere.patch\n    - patches/0005-set-PROTOBUF_USE_DLLS-clean-up-other-symbols-on-win.patch\n    - patches/0006-explicitly-link-to-abseil_dll-on-windows.patch\n    - patches/0007-be-more-lenient-with-abseil-version.patch\n\nbuild:\n  number: 0\n  script:\n    - cd python\n    - export PROTOC=$PREFIX/bin/protoc        # [unix and (build_platform == target_platform)]\n    - export PROTOC=$BUILD_PREFIX/bin/protoc  # [unix and (build_platform != target_platform)]\n    - set PROTOC=%LIBRARY_BIN%\\protoc         # [win]\n    - {{ PYTHON }} -m pip install . -vv --install-option=\"--cpp_implementation\"\n\nrequirements:\n  build:\n    - python                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n    - libprotobuf {{ lib_major ~ \".\" ~ version }}  # [build_platform != target_platform]\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n  host:\n    - python\n    - pip <23.1\n    - setuptools\n    - libabseil\n    - libprotobuf {{ lib_major ~ \".\" ~ version }}\n  run:\n    - python\n    - setuptools\n\ntest:\n  commands:\n    - python -c \"from google.protobuf.internal import api_implementation; assert api_implementation.Type() == 'cpp'\"     # [python_impl != \"pypy\"]\n    - python -c \"from google.protobuf.internal import api_implementation; assert api_implementation.Type() == 'python'\"  # [python_impl == \"pypy\"]\n  imports:\n    - google\n    - google.protobuf\n    - google.protobuf.internal\n    - google.protobuf.pyext\n    - google.protobuf.util\n    - google.protobuf.compiler\n\nabout:\n  home: https://developers.google.com/protocol-buffers/\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE\n  summary: Protocol Buffers - Google's data interchange format.\n  description: |\n    Protocol buffers are Google's language-neutral, platform-neutral, extensible\n    mechanism for serializing structured data,think XML, but smaller, faster, and simpler.\n  dev_url: https://github.com/protocolbuffers/protobuf\n  doc_url: https://developers.google.com/protocol-buffers/docs/tutorials\n  doc_source_url: https://github.com/protocolbuffers/protobuf/blob/master/README.md\n\nextra:\n  recipe-maintainers:\n    - xylar\n    - dopplershift\n    - jakirkham\n    - ocefpaf\n    - hajapy\n    - xhochy\n    - conda-forge/libprotobuf\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "cxx_compiler_stub",
   "libabseil",
   "libprotobuf",
   "pip",
   "python",
   "setuptools"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "libabseil",
    "libprotobuf",
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "python",
    "setuptools"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "libabseil",
    "libprotobuf 4.23.2",
    "pip <23.1",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python",
    "setuptools"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://github.com/protocolbuffers/protobuf/archive/refs/tags/v23.2.tar.gz",
 "version": "4.23.2",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/protobuf.json"
 },
 "win_64_meta_yaml": {
  "about": {
   "description": "Protocol buffers are Google's language-neutral, platform-neutral, extensible\nmechanism for serializing structured data,think XML, but smaller, faster, and simpler.\n",
   "dev_url": "https://github.com/protocolbuffers/protobuf",
   "doc_source_url": "https://github.com/protocolbuffers/protobuf/blob/master/README.md",
   "doc_url": "https://developers.google.com/protocol-buffers/docs/tutorials",
   "home": "https://developers.google.com/protocol-buffers/",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "Protocol Buffers - Google's data interchange format."
  },
  "build": {
   "number": "0",
   "script": [
    "cd python",
    "set PROTOC=%LIBRARY_BIN%\\protoc",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/python.exe -m pip install . -vv --install-option=\"--cpp_implementation\"",
    "cd python",
    "set PROTOC=%LIBRARY_BIN%\\protoc",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/python.exe -m pip install . -vv --install-option=\"--cpp_implementation\"",
    "cd python",
    "set PROTOC=%LIBRARY_BIN%\\protoc",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/python.exe -m pip install . -vv --install-option=\"--cpp_implementation\"",
    "cd python",
    "set PROTOC=%LIBRARY_BIN%\\protoc",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/python.exe -m pip install . -vv --install-option=\"--cpp_implementation\"",
    "cd python",
    "set PROTOC=%LIBRARY_BIN%\\protoc",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/python.exe -m pip install . -vv --install-option=\"--cpp_implementation\"",
    "cd python",
    "set PROTOC=%LIBRARY_BIN%\\protoc",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/python.exe -m pip install . -vv --install-option=\"--cpp_implementation\""
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "xylar",
    "dopplershift",
    "jakirkham",
    "ocefpaf",
    "hajapy",
    "xhochy",
    "conda-forge/libprotobuf",
    "xylar",
    "dopplershift",
    "jakirkham",
    "ocefpaf",
    "hajapy",
    "xhochy",
    "conda-forge/libprotobuf",
    "xylar",
    "dopplershift",
    "jakirkham",
    "ocefpaf",
    "hajapy",
    "xhochy",
    "conda-forge/libprotobuf",
    "xylar",
    "dopplershift",
    "jakirkham",
    "ocefpaf",
    "hajapy",
    "xhochy",
    "conda-forge/libprotobuf",
    "xylar",
    "dopplershift",
    "jakirkham",
    "ocefpaf",
    "hajapy",
    "xhochy",
    "conda-forge/libprotobuf",
    "xylar",
    "dopplershift",
    "jakirkham",
    "ocefpaf",
    "hajapy",
    "xhochy",
    "conda-forge/libprotobuf"
   ]
  },
  "package": {
   "name": "protobuf",
   "version": "4.23.2"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "pip <23.1",
    "setuptools",
    "libabseil",
    "libprotobuf 4.23.2",
    "python",
    "pip <23.1",
    "setuptools",
    "libabseil",
    "libprotobuf 4.23.2",
    "python",
    "pip <23.1",
    "setuptools",
    "libabseil",
    "libprotobuf 4.23.2",
    "python",
    "pip <23.1",
    "setuptools",
    "libabseil",
    "libprotobuf 4.23.2",
    "python",
    "pip <23.1",
    "setuptools",
    "libabseil",
    "libprotobuf 4.23.2",
    "python",
    "pip <23.1",
    "setuptools",
    "libabseil",
    "libprotobuf 4.23.2"
   ],
   "run": [
    "python",
    "setuptools",
    "python",
    "setuptools",
    "python",
    "setuptools",
    "python",
    "setuptools",
    "python",
    "setuptools",
    "python",
    "setuptools"
   ]
  },
  "source": {
   "patches": [
    "patches/0001-do-not-link-msvc-runtime-statically.patch",
    "patches/0002-fix-paths-for-include-lib-directories.patch",
    "patches/0003-adapt-to-name-of-protobuf-lib-on-windows.patch",
    "patches/0004-use-C-17-everywhere.patch",
    "patches/0005-set-PROTOBUF_USE_DLLS-clean-up-other-symbols-on-win.patch",
    "patches/0006-explicitly-link-to-abseil_dll-on-windows.patch",
    "patches/0007-be-more-lenient-with-abseil-version.patch",
    "patches/0001-do-not-link-msvc-runtime-statically.patch",
    "patches/0002-fix-paths-for-include-lib-directories.patch",
    "patches/0003-adapt-to-name-of-protobuf-lib-on-windows.patch",
    "patches/0004-use-C-17-everywhere.patch",
    "patches/0005-set-PROTOBUF_USE_DLLS-clean-up-other-symbols-on-win.patch",
    "patches/0006-explicitly-link-to-abseil_dll-on-windows.patch",
    "patches/0007-be-more-lenient-with-abseil-version.patch",
    "patches/0001-do-not-link-msvc-runtime-statically.patch",
    "patches/0002-fix-paths-for-include-lib-directories.patch",
    "patches/0003-adapt-to-name-of-protobuf-lib-on-windows.patch",
    "patches/0004-use-C-17-everywhere.patch",
    "patches/0005-set-PROTOBUF_USE_DLLS-clean-up-other-symbols-on-win.patch",
    "patches/0006-explicitly-link-to-abseil_dll-on-windows.patch",
    "patches/0007-be-more-lenient-with-abseil-version.patch",
    "patches/0001-do-not-link-msvc-runtime-statically.patch",
    "patches/0002-fix-paths-for-include-lib-directories.patch",
    "patches/0003-adapt-to-name-of-protobuf-lib-on-windows.patch",
    "patches/0004-use-C-17-everywhere.patch",
    "patches/0005-set-PROTOBUF_USE_DLLS-clean-up-other-symbols-on-win.patch",
    "patches/0006-explicitly-link-to-abseil_dll-on-windows.patch",
    "patches/0007-be-more-lenient-with-abseil-version.patch",
    "patches/0001-do-not-link-msvc-runtime-statically.patch",
    "patches/0002-fix-paths-for-include-lib-directories.patch",
    "patches/0003-adapt-to-name-of-protobuf-lib-on-windows.patch",
    "patches/0004-use-C-17-everywhere.patch",
    "patches/0005-set-PROTOBUF_USE_DLLS-clean-up-other-symbols-on-win.patch",
    "patches/0006-explicitly-link-to-abseil_dll-on-windows.patch",
    "patches/0007-be-more-lenient-with-abseil-version.patch",
    "patches/0001-do-not-link-msvc-runtime-statically.patch",
    "patches/0002-fix-paths-for-include-lib-directories.patch",
    "patches/0003-adapt-to-name-of-protobuf-lib-on-windows.patch",
    "patches/0004-use-C-17-everywhere.patch",
    "patches/0005-set-PROTOBUF_USE_DLLS-clean-up-other-symbols-on-win.patch",
    "patches/0006-explicitly-link-to-abseil_dll-on-windows.patch",
    "patches/0007-be-more-lenient-with-abseil-version.patch"
   ],
   "sha256": "0b0395d34e000f1229679e10d984ed7913078f3dd7f26cf0476467f5e65716f4",
   "url": "https://github.com/protocolbuffers/protobuf/archive/refs/tags/v23.2.tar.gz"
  },
  "test": {
   "commands": [
    "python -c \"from google.protobuf.internal import api_implementation; assert api_implementation.Type() == 'python'\"",
    "python -c \"from google.protobuf.internal import api_implementation; assert api_implementation.Type() == 'cpp'\"",
    "python -c \"from google.protobuf.internal import api_implementation; assert api_implementation.Type() == 'cpp'\"",
    "python -c \"from google.protobuf.internal import api_implementation; assert api_implementation.Type() == 'cpp'\"",
    "python -c \"from google.protobuf.internal import api_implementation; assert api_implementation.Type() == 'python'\"",
    "python -c \"from google.protobuf.internal import api_implementation; assert api_implementation.Type() == 'cpp'\""
   ],
   "imports": [
    "google",
    "google.protobuf",
    "google.protobuf.internal",
    "google.protobuf.pyext",
    "google.protobuf.util",
    "google.protobuf.compiler",
    "google",
    "google.protobuf",
    "google.protobuf.internal",
    "google.protobuf.pyext",
    "google.protobuf.util",
    "google.protobuf.compiler",
    "google",
    "google.protobuf",
    "google.protobuf.internal",
    "google.protobuf.pyext",
    "google.protobuf.util",
    "google.protobuf.compiler",
    "google",
    "google.protobuf",
    "google.protobuf.internal",
    "google.protobuf.pyext",
    "google.protobuf.util",
    "google.protobuf.compiler",
    "google",
    "google.protobuf",
    "google.protobuf.internal",
    "google.protobuf.pyext",
    "google.protobuf.util",
    "google.protobuf.compiler",
    "google",
    "google.protobuf",
    "google.protobuf.internal",
    "google.protobuf.pyext",
    "google.protobuf.util",
    "google.protobuf.compiler"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "libabseil",
    "libprotobuf",
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python",
    "setuptools"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}