{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  },
  "provider": {
   "win": "azure"
  }
 },
 "feedstock_name": "montreal-forced-aligner",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "The Montreal Forced Aligner is a command line utility for performing forced alignment of speech datasets using\nKaldi <http://kaldi-asr.org/>.\n",
   "dev_url": "https://github.com/MontrealCorpusTools/Montreal-Forced-Aligner",
   "doc_url": "https://montreal-forced-aligner.readthedocs.io/",
   "home": "https://github.com/MontrealCorpusTools/Montreal-Forced-Aligner",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Forced aligner for speech to text alignment"
  },
  "build": {
   "entry_points": [
    "mfa = montreal_forced_aligner.command_line.mfa:mfa_cli",
    "mfa = montreal_forced_aligner.command_line.mfa:mfa_cli",
    "mfa = montreal_forced_aligner.command_line.mfa:mfa_cli"
   ],
   "number": "0",
   "script": "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "mmcauliffe",
    "mmcauliffe",
    "mmcauliffe"
   ]
  },
  "package": {
   "name": "montreal-forced-aligner",
   "version": "2.2.4"
  },
  "requirements": {
   "build": [],
   "host": [
    "setuptools",
    "setuptools_scm",
    "wheel",
    "python",
    "pip",
    "kaldi",
    "sox",
    "ffmpeg",
    "openfst",
    "baumwelch",
    "ngram",
    "pynini",
    "librosa",
    "pysoundfile",
    "numpy",
    "tqdm",
    "requests",
    "pyyaml",
    "biopython =1.79",
    "praatio =6.0.0",
    "sqlalchemy >=2.0",
    "dataclassy",
    "numba",
    "kneed",
    "matplotlib-base",
    "seaborn",
    "pgvector",
    "pgvector-python",
    "postgresql",
    "hdbscan",
    "psycopg2",
    "click",
    "rich",
    "rich-click",
    "setuptools",
    "setuptools_scm",
    "wheel",
    "python",
    "pip",
    "kaldi",
    "sox",
    "ffmpeg",
    "openfst",
    "baumwelch",
    "ngram",
    "pynini",
    "librosa",
    "pysoundfile",
    "numpy",
    "tqdm",
    "requests",
    "pyyaml",
    "biopython =1.79",
    "praatio =6.0.0",
    "sqlalchemy >=2.0",
    "dataclassy",
    "numba",
    "kneed",
    "matplotlib-base",
    "seaborn",
    "pgvector",
    "pgvector-python",
    "postgresql",
    "hdbscan",
    "psycopg2",
    "click",
    "rich",
    "rich-click",
    "setuptools",
    "setuptools_scm",
    "wheel",
    "python",
    "pip",
    "kaldi",
    "sox",
    "ffmpeg",
    "openfst",
    "baumwelch",
    "ngram",
    "pynini",
    "librosa",
    "pysoundfile",
    "numpy",
    "tqdm",
    "requests",
    "pyyaml",
    "biopython =1.79",
    "praatio =6.0.0",
    "sqlalchemy >=2.0",
    "dataclassy",
    "numba",
    "kneed",
    "matplotlib-base",
    "seaborn",
    "pgvector",
    "pgvector-python",
    "postgresql",
    "hdbscan",
    "psycopg2",
    "click",
    "rich",
    "rich-click"
   ],
   "run": [
    "python",
    "kaldi",
    "pynini",
    "openfst",
    "baumwelch",
    "ngram",
    "sox",
    "ffmpeg",
    "librosa",
    "pysoundfile",
    "numpy",
    "tqdm",
    "requests",
    "pyyaml",
    "biopython =1.79",
    "praatio =6.0.0",
    "sqlalchemy >=2.0",
    "dataclassy",
    "numba",
    "kneed",
    "matplotlib-base",
    "seaborn",
    "pgvector",
    "pgvector-python",
    "postgresql",
    "hdbscan",
    "psycopg2",
    "click",
    "rich",
    "rich-click",
    "python",
    "kaldi",
    "pynini",
    "openfst",
    "baumwelch",
    "ngram",
    "sox",
    "ffmpeg",
    "librosa",
    "pysoundfile",
    "numpy",
    "tqdm",
    "requests",
    "pyyaml",
    "biopython =1.79",
    "praatio =6.0.0",
    "sqlalchemy >=2.0",
    "dataclassy",
    "numba",
    "kneed",
    "matplotlib-base",
    "seaborn",
    "pgvector",
    "pgvector-python",
    "postgresql",
    "hdbscan",
    "psycopg2",
    "click",
    "rich",
    "rich-click",
    "python",
    "kaldi",
    "pynini",
    "openfst",
    "baumwelch",
    "ngram",
    "sox",
    "ffmpeg",
    "librosa",
    "pysoundfile",
    "numpy",
    "tqdm",
    "requests",
    "pyyaml",
    "biopython =1.79",
    "praatio =6.0.0",
    "sqlalchemy >=2.0",
    "dataclassy",
    "numba",
    "kneed",
    "matplotlib-base",
    "seaborn",
    "pgvector",
    "pgvector-python",
    "postgresql",
    "hdbscan",
    "psycopg2",
    "click",
    "rich",
    "rich-click"
   ]
  },
  "source": {
   "sha256": "a0d0dca2490cd149e60a2a6b6fdc43c0b883f41d7f642db122ea9e6aba041536",
   "url": "https://pypi.io/packages/source/m/montreal-forced-aligner/Montreal Forced Aligner-2.2.4.tar.gz"
  },
  "test": {
   "commands": [
    "mfa --help",
    "mfa --help",
    "mfa --help"
   ],
   "imports": [
    "montreal_forced_aligner",
    "montreal_forced_aligner.acoustic_modeling",
    "montreal_forced_aligner.alignment",
    "montreal_forced_aligner.command_line",
    "montreal_forced_aligner.corpus",
    "montreal_forced_aligner.diarization",
    "montreal_forced_aligner.dictionary",
    "montreal_forced_aligner.g2p",
    "montreal_forced_aligner.ivector",
    "montreal_forced_aligner.language_modeling",
    "montreal_forced_aligner.online",
    "montreal_forced_aligner.transcription",
    "montreal_forced_aligner.vad",
    "montreal_forced_aligner.validation",
    "montreal_forced_aligner._version",
    "montreal_forced_aligner.abc",
    "montreal_forced_aligner.config",
    "montreal_forced_aligner.data",
    "montreal_forced_aligner.exceptions",
    "montreal_forced_aligner.helper",
    "montreal_forced_aligner.models",
    "montreal_forced_aligner.textgrid",
    "montreal_forced_aligner.utils",
    "montreal_forced_aligner",
    "montreal_forced_aligner.acoustic_modeling",
    "montreal_forced_aligner.alignment",
    "montreal_forced_aligner.command_line",
    "montreal_forced_aligner.corpus",
    "montreal_forced_aligner.diarization",
    "montreal_forced_aligner.dictionary",
    "montreal_forced_aligner.g2p",
    "montreal_forced_aligner.ivector",
    "montreal_forced_aligner.language_modeling",
    "montreal_forced_aligner.online",
    "montreal_forced_aligner.transcription",
    "montreal_forced_aligner.vad",
    "montreal_forced_aligner.validation",
    "montreal_forced_aligner._version",
    "montreal_forced_aligner.abc",
    "montreal_forced_aligner.config",
    "montreal_forced_aligner.data",
    "montreal_forced_aligner.exceptions",
    "montreal_forced_aligner.helper",
    "montreal_forced_aligner.models",
    "montreal_forced_aligner.textgrid",
    "montreal_forced_aligner.utils",
    "montreal_forced_aligner",
    "montreal_forced_aligner.acoustic_modeling",
    "montreal_forced_aligner.alignment",
    "montreal_forced_aligner.command_line",
    "montreal_forced_aligner.corpus",
    "montreal_forced_aligner.diarization",
    "montreal_forced_aligner.dictionary",
    "montreal_forced_aligner.g2p",
    "montreal_forced_aligner.ivector",
    "montreal_forced_aligner.language_modeling",
    "montreal_forced_aligner.online",
    "montreal_forced_aligner.transcription",
    "montreal_forced_aligner.vad",
    "montreal_forced_aligner.validation",
    "montreal_forced_aligner._version",
    "montreal_forced_aligner.abc",
    "montreal_forced_aligner.config",
    "montreal_forced_aligner.data",
    "montreal_forced_aligner.exceptions",
    "montreal_forced_aligner.helper",
    "montreal_forced_aligner.models",
    "montreal_forced_aligner.textgrid",
    "montreal_forced_aligner.utils"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "baumwelch",
    "biopython",
    "click",
    "dataclassy",
    "ffmpeg",
    "hdbscan",
    "kaldi",
    "kneed",
    "librosa",
    "matplotlib-base",
    "ngram",
    "numba",
    "numpy",
    "openfst",
    "pgvector",
    "pgvector-python",
    "pip",
    "postgresql",
    "praatio",
    "psycopg2",
    "pynini",
    "pysoundfile",
    "python",
    "pyyaml",
    "requests",
    "rich",
    "rich-click",
    "seaborn",
    "setuptools",
    "setuptools_scm",
    "sox",
    "sqlalchemy",
    "tqdm",
    "wheel"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "baumwelch",
    "biopython",
    "click",
    "dataclassy",
    "ffmpeg",
    "hdbscan",
    "kaldi",
    "kneed",
    "librosa",
    "matplotlib-base",
    "ngram",
    "numba",
    "numpy",
    "openfst",
    "pgvector",
    "pgvector-python",
    "postgresql",
    "praatio",
    "psycopg2",
    "pynini",
    "pysoundfile",
    "python",
    "pyyaml",
    "requests",
    "rich",
    "rich-click",
    "seaborn",
    "sox",
    "sqlalchemy",
    "tqdm"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "The Montreal Forced Aligner is a command line utility for performing forced alignment of speech datasets using\nKaldi <http://kaldi-asr.org/>.\n",
   "dev_url": "https://github.com/MontrealCorpusTools/Montreal-Forced-Aligner",
   "doc_url": "https://montreal-forced-aligner.readthedocs.io/",
   "home": "https://github.com/MontrealCorpusTools/Montreal-Forced-Aligner",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Forced aligner for speech to text alignment"
  },
  "build": {
   "entry_points": [
    "mfa = montreal_forced_aligner.command_line.mfa:mfa_cli",
    "mfa = montreal_forced_aligner.command_line.mfa:mfa_cli",
    "mfa = montreal_forced_aligner.command_line.mfa:mfa_cli",
    "mfa = montreal_forced_aligner.command_line.mfa:mfa_cli",
    "mfa = montreal_forced_aligner.command_line.mfa:mfa_cli",
    "mfa = montreal_forced_aligner.command_line.mfa:mfa_cli",
    "mfa = montreal_forced_aligner.command_line.mfa:mfa_cli",
    "mfa = montreal_forced_aligner.command_line.mfa:mfa_cli",
    "mfa = montreal_forced_aligner.command_line.mfa:mfa_cli",
    "mfa = montreal_forced_aligner.command_line.mfa:mfa_cli",
    "mfa = montreal_forced_aligner.command_line.mfa:mfa_cli",
    "mfa = montreal_forced_aligner.command_line.mfa:mfa_cli"
   ],
   "number": "0",
   "script": "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/python.exe -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "mmcauliffe",
    "mmcauliffe",
    "mmcauliffe",
    "mmcauliffe",
    "mmcauliffe",
    "mmcauliffe",
    "mmcauliffe",
    "mmcauliffe",
    "mmcauliffe",
    "mmcauliffe",
    "mmcauliffe",
    "mmcauliffe"
   ]
  },
  "package": {
   "name": "montreal-forced-aligner",
   "version": "2.2.4"
  },
  "requirements": {
   "build": [],
   "host": [
    "setuptools",
    "setuptools_scm",
    "wheel",
    "python",
    "pip",
    "kaldi",
    "sox",
    "ffmpeg",
    "openfst",
    "baumwelch",
    "ngram",
    "pynini",
    "librosa",
    "pysoundfile",
    "numpy",
    "tqdm",
    "requests",
    "pyyaml",
    "biopython =1.79",
    "praatio =6.0.0",
    "sqlalchemy >=2.0",
    "dataclassy",
    "numba",
    "kneed",
    "matplotlib-base",
    "seaborn",
    "pgvector",
    "pgvector-python",
    "postgresql",
    "hdbscan",
    "psycopg2",
    "click",
    "rich",
    "rich-click",
    "setuptools",
    "setuptools_scm",
    "wheel",
    "python",
    "pip",
    "kaldi",
    "sox",
    "ffmpeg",
    "openfst",
    "baumwelch",
    "ngram",
    "pynini",
    "librosa",
    "pysoundfile",
    "numpy",
    "tqdm",
    "requests",
    "pyyaml",
    "biopython =1.79",
    "praatio =6.0.0",
    "sqlalchemy >=2.0",
    "dataclassy",
    "numba",
    "kneed",
    "matplotlib-base",
    "seaborn",
    "pgvector",
    "pgvector-python",
    "postgresql",
    "hdbscan",
    "psycopg2",
    "click",
    "rich",
    "rich-click",
    "setuptools",
    "setuptools_scm",
    "wheel",
    "python",
    "pip",
    "kaldi",
    "sox",
    "ffmpeg",
    "openfst",
    "baumwelch",
    "ngram",
    "pynini",
    "librosa",
    "pysoundfile",
    "numpy",
    "tqdm",
    "requests",
    "pyyaml",
    "biopython =1.79",
    "praatio =6.0.0",
    "sqlalchemy >=2.0",
    "dataclassy",
    "numba",
    "kneed",
    "matplotlib-base",
    "seaborn",
    "pgvector",
    "pgvector-python",
    "postgresql",
    "hdbscan",
    "psycopg2",
    "click",
    "rich",
    "rich-click",
    "setuptools",
    "setuptools_scm",
    "wheel",
    "python",
    "pip",
    "kaldi",
    "sox",
    "ffmpeg",
    "openfst",
    "baumwelch",
    "ngram",
    "pynini",
    "librosa",
    "pysoundfile",
    "numpy",
    "tqdm",
    "requests",
    "pyyaml",
    "biopython =1.79",
    "praatio =6.0.0",
    "sqlalchemy >=2.0",
    "dataclassy",
    "numba",
    "kneed",
    "matplotlib-base",
    "seaborn",
    "pgvector",
    "pgvector-python",
    "postgresql",
    "hdbscan",
    "psycopg2",
    "click",
    "rich",
    "rich-click",
    "setuptools",
    "setuptools_scm",
    "wheel",
    "python",
    "pip",
    "kaldi",
    "sox",
    "ffmpeg",
    "openfst",
    "baumwelch",
    "ngram",
    "pynini",
    "librosa",
    "pysoundfile",
    "numpy",
    "tqdm",
    "requests",
    "pyyaml",
    "biopython =1.79",
    "praatio =6.0.0",
    "sqlalchemy >=2.0",
    "dataclassy",
    "numba",
    "kneed",
    "matplotlib-base",
    "seaborn",
    "pgvector",
    "pgvector-python",
    "postgresql",
    "hdbscan",
    "psycopg2",
    "click",
    "rich",
    "rich-click",
    "setuptools",
    "setuptools_scm",
    "wheel",
    "python",
    "pip",
    "kaldi",
    "sox",
    "ffmpeg",
    "openfst",
    "baumwelch",
    "ngram",
    "pynini",
    "librosa",
    "pysoundfile",
    "numpy",
    "tqdm",
    "requests",
    "pyyaml",
    "biopython =1.79",
    "praatio =6.0.0",
    "sqlalchemy >=2.0",
    "dataclassy",
    "numba",
    "kneed",
    "matplotlib-base",
    "seaborn",
    "pgvector",
    "pgvector-python",
    "postgresql",
    "hdbscan",
    "psycopg2",
    "click",
    "rich",
    "rich-click",
    "setuptools",
    "setuptools_scm",
    "wheel",
    "python",
    "pip",
    "kaldi",
    "sox",
    "ffmpeg",
    "openfst",
    "baumwelch",
    "ngram",
    "pynini",
    "librosa",
    "pysoundfile",
    "numpy",
    "tqdm",
    "requests",
    "pyyaml",
    "biopython =1.79",
    "praatio =6.0.0",
    "sqlalchemy >=2.0",
    "dataclassy",
    "numba",
    "kneed",
    "matplotlib-base",
    "seaborn",
    "pgvector",
    "pgvector-python",
    "postgresql",
    "hdbscan",
    "psycopg2",
    "click",
    "rich",
    "rich-click",
    "setuptools",
    "setuptools_scm",
    "wheel",
    "python",
    "pip",
    "kaldi",
    "sox",
    "ffmpeg",
    "openfst",
    "baumwelch",
    "ngram",
    "pynini",
    "librosa",
    "pysoundfile",
    "numpy",
    "tqdm",
    "requests",
    "pyyaml",
    "biopython =1.79",
    "praatio =6.0.0",
    "sqlalchemy >=2.0",
    "dataclassy",
    "numba",
    "kneed",
    "matplotlib-base",
    "seaborn",
    "pgvector",
    "pgvector-python",
    "postgresql",
    "hdbscan",
    "psycopg2",
    "click",
    "rich",
    "rich-click",
    "setuptools",
    "setuptools_scm",
    "wheel",
    "python",
    "pip",
    "kaldi",
    "sox",
    "ffmpeg",
    "openfst",
    "baumwelch",
    "ngram",
    "pynini",
    "librosa",
    "pysoundfile",
    "numpy",
    "tqdm",
    "requests",
    "pyyaml",
    "biopython =1.79",
    "praatio =6.0.0",
    "sqlalchemy >=2.0",
    "dataclassy",
    "numba",
    "kneed",
    "matplotlib-base",
    "seaborn",
    "pgvector",
    "pgvector-python",
    "postgresql",
    "hdbscan",
    "psycopg2",
    "click",
    "rich",
    "rich-click",
    "setuptools",
    "setuptools_scm",
    "wheel",
    "python",
    "pip",
    "kaldi",
    "sox",
    "ffmpeg",
    "openfst",
    "baumwelch",
    "ngram",
    "pynini",
    "librosa",
    "pysoundfile",
    "numpy",
    "tqdm",
    "requests",
    "pyyaml",
    "biopython =1.79",
    "praatio =6.0.0",
    "sqlalchemy >=2.0",
    "dataclassy",
    "numba",
    "kneed",
    "matplotlib-base",
    "seaborn",
    "pgvector",
    "pgvector-python",
    "postgresql",
    "hdbscan",
    "psycopg2",
    "click",
    "rich",
    "rich-click",
    "setuptools",
    "setuptools_scm",
    "wheel",
    "python",
    "pip",
    "kaldi",
    "sox",
    "ffmpeg",
    "openfst",
    "baumwelch",
    "ngram",
    "pynini",
    "librosa",
    "pysoundfile",
    "numpy",
    "tqdm",
    "requests",
    "pyyaml",
    "biopython =1.79",
    "praatio =6.0.0",
    "sqlalchemy >=2.0",
    "dataclassy",
    "numba",
    "kneed",
    "matplotlib-base",
    "seaborn",
    "pgvector",
    "pgvector-python",
    "postgresql",
    "hdbscan",
    "psycopg2",
    "click",
    "rich",
    "rich-click",
    "setuptools",
    "setuptools_scm",
    "wheel",
    "python",
    "pip",
    "kaldi",
    "sox",
    "ffmpeg",
    "openfst",
    "baumwelch",
    "ngram",
    "pynini",
    "librosa",
    "pysoundfile",
    "numpy",
    "tqdm",
    "requests",
    "pyyaml",
    "biopython =1.79",
    "praatio =6.0.0",
    "sqlalchemy >=2.0",
    "dataclassy",
    "numba",
    "kneed",
    "matplotlib-base",
    "seaborn",
    "pgvector",
    "pgvector-python",
    "postgresql",
    "hdbscan",
    "psycopg2",
    "click",
    "rich",
    "rich-click"
   ],
   "run": [
    "python",
    "kaldi",
    "pynini",
    "openfst",
    "baumwelch",
    "ngram",
    "sox",
    "ffmpeg",
    "librosa",
    "pysoundfile",
    "numpy",
    "tqdm",
    "requests",
    "pyyaml",
    "biopython =1.79",
    "praatio =6.0.0",
    "sqlalchemy >=2.0",
    "dataclassy",
    "numba",
    "kneed",
    "matplotlib-base",
    "seaborn",
    "pgvector",
    "pgvector-python",
    "postgresql",
    "hdbscan",
    "psycopg2",
    "click",
    "rich",
    "rich-click",
    "python",
    "kaldi",
    "pynini",
    "openfst",
    "baumwelch",
    "ngram",
    "sox",
    "ffmpeg",
    "librosa",
    "pysoundfile",
    "numpy",
    "tqdm",
    "requests",
    "pyyaml",
    "biopython =1.79",
    "praatio =6.0.0",
    "sqlalchemy >=2.0",
    "dataclassy",
    "numba",
    "kneed",
    "matplotlib-base",
    "seaborn",
    "pgvector",
    "pgvector-python",
    "postgresql",
    "hdbscan",
    "psycopg2",
    "click",
    "rich",
    "rich-click",
    "python",
    "kaldi",
    "pynini",
    "openfst",
    "baumwelch",
    "ngram",
    "sox",
    "ffmpeg",
    "librosa",
    "pysoundfile",
    "numpy",
    "tqdm",
    "requests",
    "pyyaml",
    "biopython =1.79",
    "praatio =6.0.0",
    "sqlalchemy >=2.0",
    "dataclassy",
    "numba",
    "kneed",
    "matplotlib-base",
    "seaborn",
    "pgvector",
    "pgvector-python",
    "postgresql",
    "hdbscan",
    "psycopg2",
    "click",
    "rich",
    "rich-click",
    "python",
    "kaldi",
    "pynini",
    "openfst",
    "baumwelch",
    "ngram",
    "sox",
    "ffmpeg",
    "librosa",
    "pysoundfile",
    "numpy",
    "tqdm",
    "requests",
    "pyyaml",
    "biopython =1.79",
    "praatio =6.0.0",
    "sqlalchemy >=2.0",
    "dataclassy",
    "numba",
    "kneed",
    "matplotlib-base",
    "seaborn",
    "pgvector",
    "pgvector-python",
    "postgresql",
    "hdbscan",
    "psycopg2",
    "click",
    "rich",
    "rich-click",
    "python",
    "kaldi",
    "pynini",
    "openfst",
    "baumwelch",
    "ngram",
    "sox",
    "ffmpeg",
    "librosa",
    "pysoundfile",
    "numpy",
    "tqdm",
    "requests",
    "pyyaml",
    "biopython =1.79",
    "praatio =6.0.0",
    "sqlalchemy >=2.0",
    "dataclassy",
    "numba",
    "kneed",
    "matplotlib-base",
    "seaborn",
    "pgvector",
    "pgvector-python",
    "postgresql",
    "hdbscan",
    "psycopg2",
    "click",
    "rich",
    "rich-click",
    "python",
    "kaldi",
    "pynini",
    "openfst",
    "baumwelch",
    "ngram",
    "sox",
    "ffmpeg",
    "librosa",
    "pysoundfile",
    "numpy",
    "tqdm",
    "requests",
    "pyyaml",
    "biopython =1.79",
    "praatio =6.0.0",
    "sqlalchemy >=2.0",
    "dataclassy",
    "numba",
    "kneed",
    "matplotlib-base",
    "seaborn",
    "pgvector",
    "pgvector-python",
    "postgresql",
    "hdbscan",
    "psycopg2",
    "click",
    "rich",
    "rich-click",
    "python",
    "kaldi",
    "pynini",
    "openfst",
    "baumwelch",
    "ngram",
    "sox",
    "ffmpeg",
    "librosa",
    "pysoundfile",
    "numpy",
    "tqdm",
    "requests",
    "pyyaml",
    "biopython =1.79",
    "praatio =6.0.0",
    "sqlalchemy >=2.0",
    "dataclassy",
    "numba",
    "kneed",
    "matplotlib-base",
    "seaborn",
    "pgvector",
    "pgvector-python",
    "postgresql",
    "hdbscan",
    "psycopg2",
    "click",
    "rich",
    "rich-click",
    "python",
    "kaldi",
    "pynini",
    "openfst",
    "baumwelch",
    "ngram",
    "sox",
    "ffmpeg",
    "librosa",
    "pysoundfile",
    "numpy",
    "tqdm",
    "requests",
    "pyyaml",
    "biopython =1.79",
    "praatio =6.0.0",
    "sqlalchemy >=2.0",
    "dataclassy",
    "numba",
    "kneed",
    "matplotlib-base",
    "seaborn",
    "pgvector",
    "pgvector-python",
    "postgresql",
    "hdbscan",
    "psycopg2",
    "click",
    "rich",
    "rich-click",
    "python",
    "kaldi",
    "pynini",
    "openfst",
    "baumwelch",
    "ngram",
    "sox",
    "ffmpeg",
    "librosa",
    "pysoundfile",
    "numpy",
    "tqdm",
    "requests",
    "pyyaml",
    "biopython =1.79",
    "praatio =6.0.0",
    "sqlalchemy >=2.0",
    "dataclassy",
    "numba",
    "kneed",
    "matplotlib-base",
    "seaborn",
    "pgvector",
    "pgvector-python",
    "postgresql",
    "hdbscan",
    "psycopg2",
    "click",
    "rich",
    "rich-click",
    "python",
    "kaldi",
    "pynini",
    "openfst",
    "baumwelch",
    "ngram",
    "sox",
    "ffmpeg",
    "librosa",
    "pysoundfile",
    "numpy",
    "tqdm",
    "requests",
    "pyyaml",
    "biopython =1.79",
    "praatio =6.0.0",
    "sqlalchemy >=2.0",
    "dataclassy",
    "numba",
    "kneed",
    "matplotlib-base",
    "seaborn",
    "pgvector",
    "pgvector-python",
    "postgresql",
    "hdbscan",
    "psycopg2",
    "click",
    "rich",
    "rich-click",
    "python",
    "kaldi",
    "pynini",
    "openfst",
    "baumwelch",
    "ngram",
    "sox",
    "ffmpeg",
    "librosa",
    "pysoundfile",
    "numpy",
    "tqdm",
    "requests",
    "pyyaml",
    "biopython =1.79",
    "praatio =6.0.0",
    "sqlalchemy >=2.0",
    "dataclassy",
    "numba",
    "kneed",
    "matplotlib-base",
    "seaborn",
    "pgvector",
    "pgvector-python",
    "postgresql",
    "hdbscan",
    "psycopg2",
    "click",
    "rich",
    "rich-click",
    "python",
    "kaldi",
    "pynini",
    "openfst",
    "baumwelch",
    "ngram",
    "sox",
    "ffmpeg",
    "librosa",
    "pysoundfile",
    "numpy",
    "tqdm",
    "requests",
    "pyyaml",
    "biopython =1.79",
    "praatio =6.0.0",
    "sqlalchemy >=2.0",
    "dataclassy",
    "numba",
    "kneed",
    "matplotlib-base",
    "seaborn",
    "pgvector",
    "pgvector-python",
    "postgresql",
    "hdbscan",
    "psycopg2",
    "click",
    "rich",
    "rich-click"
   ]
  },
  "source": {
   "sha256": "a0d0dca2490cd149e60a2a6b6fdc43c0b883f41d7f642db122ea9e6aba041536",
   "url": "https://pypi.io/packages/source/m/montreal-forced-aligner/Montreal Forced Aligner-2.2.4.tar.gz"
  },
  "test": {
   "commands": [
    "mfa --help",
    "mfa --help",
    "mfa --help",
    "mfa --help",
    "mfa --help",
    "mfa --help",
    "mfa --help",
    "mfa --help",
    "mfa --help",
    "mfa --help",
    "mfa --help",
    "mfa --help"
   ],
   "imports": [
    "montreal_forced_aligner",
    "montreal_forced_aligner.acoustic_modeling",
    "montreal_forced_aligner.alignment",
    "montreal_forced_aligner.command_line",
    "montreal_forced_aligner.corpus",
    "montreal_forced_aligner.diarization",
    "montreal_forced_aligner.dictionary",
    "montreal_forced_aligner.g2p",
    "montreal_forced_aligner.ivector",
    "montreal_forced_aligner.language_modeling",
    "montreal_forced_aligner.online",
    "montreal_forced_aligner.transcription",
    "montreal_forced_aligner.vad",
    "montreal_forced_aligner.validation",
    "montreal_forced_aligner._version",
    "montreal_forced_aligner.abc",
    "montreal_forced_aligner.config",
    "montreal_forced_aligner.data",
    "montreal_forced_aligner.exceptions",
    "montreal_forced_aligner.helper",
    "montreal_forced_aligner.models",
    "montreal_forced_aligner.textgrid",
    "montreal_forced_aligner.utils",
    "montreal_forced_aligner",
    "montreal_forced_aligner.acoustic_modeling",
    "montreal_forced_aligner.alignment",
    "montreal_forced_aligner.command_line",
    "montreal_forced_aligner.corpus",
    "montreal_forced_aligner.diarization",
    "montreal_forced_aligner.dictionary",
    "montreal_forced_aligner.g2p",
    "montreal_forced_aligner.ivector",
    "montreal_forced_aligner.language_modeling",
    "montreal_forced_aligner.online",
    "montreal_forced_aligner.transcription",
    "montreal_forced_aligner.vad",
    "montreal_forced_aligner.validation",
    "montreal_forced_aligner._version",
    "montreal_forced_aligner.abc",
    "montreal_forced_aligner.config",
    "montreal_forced_aligner.data",
    "montreal_forced_aligner.exceptions",
    "montreal_forced_aligner.helper",
    "montreal_forced_aligner.models",
    "montreal_forced_aligner.textgrid",
    "montreal_forced_aligner.utils",
    "montreal_forced_aligner",
    "montreal_forced_aligner.acoustic_modeling",
    "montreal_forced_aligner.alignment",
    "montreal_forced_aligner.command_line",
    "montreal_forced_aligner.corpus",
    "montreal_forced_aligner.diarization",
    "montreal_forced_aligner.dictionary",
    "montreal_forced_aligner.g2p",
    "montreal_forced_aligner.ivector",
    "montreal_forced_aligner.language_modeling",
    "montreal_forced_aligner.online",
    "montreal_forced_aligner.transcription",
    "montreal_forced_aligner.vad",
    "montreal_forced_aligner.validation",
    "montreal_forced_aligner._version",
    "montreal_forced_aligner.abc",
    "montreal_forced_aligner.config",
    "montreal_forced_aligner.data",
    "montreal_forced_aligner.exceptions",
    "montreal_forced_aligner.helper",
    "montreal_forced_aligner.models",
    "montreal_forced_aligner.textgrid",
    "montreal_forced_aligner.utils",
    "montreal_forced_aligner",
    "montreal_forced_aligner.acoustic_modeling",
    "montreal_forced_aligner.alignment",
    "montreal_forced_aligner.command_line",
    "montreal_forced_aligner.corpus",
    "montreal_forced_aligner.diarization",
    "montreal_forced_aligner.dictionary",
    "montreal_forced_aligner.g2p",
    "montreal_forced_aligner.ivector",
    "montreal_forced_aligner.language_modeling",
    "montreal_forced_aligner.online",
    "montreal_forced_aligner.transcription",
    "montreal_forced_aligner.vad",
    "montreal_forced_aligner.validation",
    "montreal_forced_aligner._version",
    "montreal_forced_aligner.abc",
    "montreal_forced_aligner.config",
    "montreal_forced_aligner.data",
    "montreal_forced_aligner.exceptions",
    "montreal_forced_aligner.helper",
    "montreal_forced_aligner.models",
    "montreal_forced_aligner.textgrid",
    "montreal_forced_aligner.utils",
    "montreal_forced_aligner",
    "montreal_forced_aligner.acoustic_modeling",
    "montreal_forced_aligner.alignment",
    "montreal_forced_aligner.command_line",
    "montreal_forced_aligner.corpus",
    "montreal_forced_aligner.diarization",
    "montreal_forced_aligner.dictionary",
    "montreal_forced_aligner.g2p",
    "montreal_forced_aligner.ivector",
    "montreal_forced_aligner.language_modeling",
    "montreal_forced_aligner.online",
    "montreal_forced_aligner.transcription",
    "montreal_forced_aligner.vad",
    "montreal_forced_aligner.validation",
    "montreal_forced_aligner._version",
    "montreal_forced_aligner.abc",
    "montreal_forced_aligner.config",
    "montreal_forced_aligner.data",
    "montreal_forced_aligner.exceptions",
    "montreal_forced_aligner.helper",
    "montreal_forced_aligner.models",
    "montreal_forced_aligner.textgrid",
    "montreal_forced_aligner.utils",
    "montreal_forced_aligner",
    "montreal_forced_aligner.acoustic_modeling",
    "montreal_forced_aligner.alignment",
    "montreal_forced_aligner.command_line",
    "montreal_forced_aligner.corpus",
    "montreal_forced_aligner.diarization",
    "montreal_forced_aligner.dictionary",
    "montreal_forced_aligner.g2p",
    "montreal_forced_aligner.ivector",
    "montreal_forced_aligner.language_modeling",
    "montreal_forced_aligner.online",
    "montreal_forced_aligner.transcription",
    "montreal_forced_aligner.vad",
    "montreal_forced_aligner.validation",
    "montreal_forced_aligner._version",
    "montreal_forced_aligner.abc",
    "montreal_forced_aligner.config",
    "montreal_forced_aligner.data",
    "montreal_forced_aligner.exceptions",
    "montreal_forced_aligner.helper",
    "montreal_forced_aligner.models",
    "montreal_forced_aligner.textgrid",
    "montreal_forced_aligner.utils",
    "montreal_forced_aligner",
    "montreal_forced_aligner.acoustic_modeling",
    "montreal_forced_aligner.alignment",
    "montreal_forced_aligner.command_line",
    "montreal_forced_aligner.corpus",
    "montreal_forced_aligner.diarization",
    "montreal_forced_aligner.dictionary",
    "montreal_forced_aligner.g2p",
    "montreal_forced_aligner.ivector",
    "montreal_forced_aligner.language_modeling",
    "montreal_forced_aligner.online",
    "montreal_forced_aligner.transcription",
    "montreal_forced_aligner.vad",
    "montreal_forced_aligner.validation",
    "montreal_forced_aligner._version",
    "montreal_forced_aligner.abc",
    "montreal_forced_aligner.config",
    "montreal_forced_aligner.data",
    "montreal_forced_aligner.exceptions",
    "montreal_forced_aligner.helper",
    "montreal_forced_aligner.models",
    "montreal_forced_aligner.textgrid",
    "montreal_forced_aligner.utils",
    "montreal_forced_aligner",
    "montreal_forced_aligner.acoustic_modeling",
    "montreal_forced_aligner.alignment",
    "montreal_forced_aligner.command_line",
    "montreal_forced_aligner.corpus",
    "montreal_forced_aligner.diarization",
    "montreal_forced_aligner.dictionary",
    "montreal_forced_aligner.g2p",
    "montreal_forced_aligner.ivector",
    "montreal_forced_aligner.language_modeling",
    "montreal_forced_aligner.online",
    "montreal_forced_aligner.transcription",
    "montreal_forced_aligner.vad",
    "montreal_forced_aligner.validation",
    "montreal_forced_aligner._version",
    "montreal_forced_aligner.abc",
    "montreal_forced_aligner.config",
    "montreal_forced_aligner.data",
    "montreal_forced_aligner.exceptions",
    "montreal_forced_aligner.helper",
    "montreal_forced_aligner.models",
    "montreal_forced_aligner.textgrid",
    "montreal_forced_aligner.utils",
    "montreal_forced_aligner",
    "montreal_forced_aligner.acoustic_modeling",
    "montreal_forced_aligner.alignment",
    "montreal_forced_aligner.command_line",
    "montreal_forced_aligner.corpus",
    "montreal_forced_aligner.diarization",
    "montreal_forced_aligner.dictionary",
    "montreal_forced_aligner.g2p",
    "montreal_forced_aligner.ivector",
    "montreal_forced_aligner.language_modeling",
    "montreal_forced_aligner.online",
    "montreal_forced_aligner.transcription",
    "montreal_forced_aligner.vad",
    "montreal_forced_aligner.validation",
    "montreal_forced_aligner._version",
    "montreal_forced_aligner.abc",
    "montreal_forced_aligner.config",
    "montreal_forced_aligner.data",
    "montreal_forced_aligner.exceptions",
    "montreal_forced_aligner.helper",
    "montreal_forced_aligner.models",
    "montreal_forced_aligner.textgrid",
    "montreal_forced_aligner.utils",
    "montreal_forced_aligner",
    "montreal_forced_aligner.acoustic_modeling",
    "montreal_forced_aligner.alignment",
    "montreal_forced_aligner.command_line",
    "montreal_forced_aligner.corpus",
    "montreal_forced_aligner.diarization",
    "montreal_forced_aligner.dictionary",
    "montreal_forced_aligner.g2p",
    "montreal_forced_aligner.ivector",
    "montreal_forced_aligner.language_modeling",
    "montreal_forced_aligner.online",
    "montreal_forced_aligner.transcription",
    "montreal_forced_aligner.vad",
    "montreal_forced_aligner.validation",
    "montreal_forced_aligner._version",
    "montreal_forced_aligner.abc",
    "montreal_forced_aligner.config",
    "montreal_forced_aligner.data",
    "montreal_forced_aligner.exceptions",
    "montreal_forced_aligner.helper",
    "montreal_forced_aligner.models",
    "montreal_forced_aligner.textgrid",
    "montreal_forced_aligner.utils",
    "montreal_forced_aligner",
    "montreal_forced_aligner.acoustic_modeling",
    "montreal_forced_aligner.alignment",
    "montreal_forced_aligner.command_line",
    "montreal_forced_aligner.corpus",
    "montreal_forced_aligner.diarization",
    "montreal_forced_aligner.dictionary",
    "montreal_forced_aligner.g2p",
    "montreal_forced_aligner.ivector",
    "montreal_forced_aligner.language_modeling",
    "montreal_forced_aligner.online",
    "montreal_forced_aligner.transcription",
    "montreal_forced_aligner.vad",
    "montreal_forced_aligner.validation",
    "montreal_forced_aligner._version",
    "montreal_forced_aligner.abc",
    "montreal_forced_aligner.config",
    "montreal_forced_aligner.data",
    "montreal_forced_aligner.exceptions",
    "montreal_forced_aligner.helper",
    "montreal_forced_aligner.models",
    "montreal_forced_aligner.textgrid",
    "montreal_forced_aligner.utils",
    "montreal_forced_aligner",
    "montreal_forced_aligner.acoustic_modeling",
    "montreal_forced_aligner.alignment",
    "montreal_forced_aligner.command_line",
    "montreal_forced_aligner.corpus",
    "montreal_forced_aligner.diarization",
    "montreal_forced_aligner.dictionary",
    "montreal_forced_aligner.g2p",
    "montreal_forced_aligner.ivector",
    "montreal_forced_aligner.language_modeling",
    "montreal_forced_aligner.online",
    "montreal_forced_aligner.transcription",
    "montreal_forced_aligner.vad",
    "montreal_forced_aligner.validation",
    "montreal_forced_aligner._version",
    "montreal_forced_aligner.abc",
    "montreal_forced_aligner.config",
    "montreal_forced_aligner.data",
    "montreal_forced_aligner.exceptions",
    "montreal_forced_aligner.helper",
    "montreal_forced_aligner.models",
    "montreal_forced_aligner.textgrid",
    "montreal_forced_aligner.utils"
   ]
  }
 },
 "name": "montreal-forced-aligner",
 "osx_64_meta_yaml": {
  "about": {
   "description": "The Montreal Forced Aligner is a command line utility for performing forced alignment of speech datasets using\nKaldi <http://kaldi-asr.org/>.\n",
   "dev_url": "https://github.com/MontrealCorpusTools/Montreal-Forced-Aligner",
   "doc_url": "https://montreal-forced-aligner.readthedocs.io/",
   "home": "https://github.com/MontrealCorpusTools/Montreal-Forced-Aligner",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Forced aligner for speech to text alignment"
  },
  "build": {
   "entry_points": [
    "mfa = montreal_forced_aligner.command_line.mfa:mfa_cli",
    "mfa = montreal_forced_aligner.command_line.mfa:mfa_cli",
    "mfa = montreal_forced_aligner.command_line.mfa:mfa_cli"
   ],
   "number": "0",
   "script": "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "mmcauliffe",
    "mmcauliffe",
    "mmcauliffe"
   ]
  },
  "package": {
   "name": "montreal-forced-aligner",
   "version": "2.2.4"
  },
  "requirements": {
   "build": [],
   "host": [
    "setuptools",
    "setuptools_scm",
    "wheel",
    "python",
    "pip",
    "kaldi",
    "sox",
    "ffmpeg",
    "openfst",
    "baumwelch",
    "ngram",
    "pynini",
    "librosa",
    "pysoundfile",
    "numpy",
    "tqdm",
    "requests",
    "pyyaml",
    "biopython =1.79",
    "praatio =6.0.0",
    "sqlalchemy >=2.0",
    "dataclassy",
    "numba",
    "kneed",
    "matplotlib-base",
    "seaborn",
    "pgvector",
    "pgvector-python",
    "postgresql",
    "hdbscan",
    "psycopg2",
    "click",
    "rich",
    "rich-click",
    "setuptools",
    "setuptools_scm",
    "wheel",
    "python",
    "pip",
    "kaldi",
    "sox",
    "ffmpeg",
    "openfst",
    "baumwelch",
    "ngram",
    "pynini",
    "librosa",
    "pysoundfile",
    "numpy",
    "tqdm",
    "requests",
    "pyyaml",
    "biopython =1.79",
    "praatio =6.0.0",
    "sqlalchemy >=2.0",
    "dataclassy",
    "numba",
    "kneed",
    "matplotlib-base",
    "seaborn",
    "pgvector",
    "pgvector-python",
    "postgresql",
    "hdbscan",
    "psycopg2",
    "click",
    "rich",
    "rich-click",
    "setuptools",
    "setuptools_scm",
    "wheel",
    "python",
    "pip",
    "kaldi",
    "sox",
    "ffmpeg",
    "openfst",
    "baumwelch",
    "ngram",
    "pynini",
    "librosa",
    "pysoundfile",
    "numpy",
    "tqdm",
    "requests",
    "pyyaml",
    "biopython =1.79",
    "praatio =6.0.0",
    "sqlalchemy >=2.0",
    "dataclassy",
    "numba",
    "kneed",
    "matplotlib-base",
    "seaborn",
    "pgvector",
    "pgvector-python",
    "postgresql",
    "hdbscan",
    "psycopg2",
    "click",
    "rich",
    "rich-click"
   ],
   "run": [
    "python",
    "kaldi",
    "pynini",
    "openfst",
    "baumwelch",
    "ngram",
    "sox",
    "ffmpeg",
    "librosa",
    "pysoundfile",
    "numpy",
    "tqdm",
    "requests",
    "pyyaml",
    "biopython =1.79",
    "praatio =6.0.0",
    "sqlalchemy >=2.0",
    "dataclassy",
    "numba",
    "kneed",
    "matplotlib-base",
    "seaborn",
    "pgvector",
    "pgvector-python",
    "postgresql",
    "hdbscan",
    "psycopg2",
    "click",
    "rich",
    "rich-click",
    "python",
    "kaldi",
    "pynini",
    "openfst",
    "baumwelch",
    "ngram",
    "sox",
    "ffmpeg",
    "librosa",
    "pysoundfile",
    "numpy",
    "tqdm",
    "requests",
    "pyyaml",
    "biopython =1.79",
    "praatio =6.0.0",
    "sqlalchemy >=2.0",
    "dataclassy",
    "numba",
    "kneed",
    "matplotlib-base",
    "seaborn",
    "pgvector",
    "pgvector-python",
    "postgresql",
    "hdbscan",
    "psycopg2",
    "click",
    "rich",
    "rich-click",
    "python",
    "kaldi",
    "pynini",
    "openfst",
    "baumwelch",
    "ngram",
    "sox",
    "ffmpeg",
    "librosa",
    "pysoundfile",
    "numpy",
    "tqdm",
    "requests",
    "pyyaml",
    "biopython =1.79",
    "praatio =6.0.0",
    "sqlalchemy >=2.0",
    "dataclassy",
    "numba",
    "kneed",
    "matplotlib-base",
    "seaborn",
    "pgvector",
    "pgvector-python",
    "postgresql",
    "hdbscan",
    "psycopg2",
    "click",
    "rich",
    "rich-click"
   ]
  },
  "source": {
   "sha256": "a0d0dca2490cd149e60a2a6b6fdc43c0b883f41d7f642db122ea9e6aba041536",
   "url": "https://pypi.io/packages/source/m/montreal-forced-aligner/Montreal Forced Aligner-2.2.4.tar.gz"
  },
  "test": {
   "commands": [
    "mfa --help",
    "mfa --help",
    "mfa --help"
   ],
   "imports": [
    "montreal_forced_aligner",
    "montreal_forced_aligner.acoustic_modeling",
    "montreal_forced_aligner.alignment",
    "montreal_forced_aligner.command_line",
    "montreal_forced_aligner.corpus",
    "montreal_forced_aligner.diarization",
    "montreal_forced_aligner.dictionary",
    "montreal_forced_aligner.g2p",
    "montreal_forced_aligner.ivector",
    "montreal_forced_aligner.language_modeling",
    "montreal_forced_aligner.online",
    "montreal_forced_aligner.transcription",
    "montreal_forced_aligner.vad",
    "montreal_forced_aligner.validation",
    "montreal_forced_aligner._version",
    "montreal_forced_aligner.abc",
    "montreal_forced_aligner.config",
    "montreal_forced_aligner.data",
    "montreal_forced_aligner.exceptions",
    "montreal_forced_aligner.helper",
    "montreal_forced_aligner.models",
    "montreal_forced_aligner.textgrid",
    "montreal_forced_aligner.utils",
    "montreal_forced_aligner",
    "montreal_forced_aligner.acoustic_modeling",
    "montreal_forced_aligner.alignment",
    "montreal_forced_aligner.command_line",
    "montreal_forced_aligner.corpus",
    "montreal_forced_aligner.diarization",
    "montreal_forced_aligner.dictionary",
    "montreal_forced_aligner.g2p",
    "montreal_forced_aligner.ivector",
    "montreal_forced_aligner.language_modeling",
    "montreal_forced_aligner.online",
    "montreal_forced_aligner.transcription",
    "montreal_forced_aligner.vad",
    "montreal_forced_aligner.validation",
    "montreal_forced_aligner._version",
    "montreal_forced_aligner.abc",
    "montreal_forced_aligner.config",
    "montreal_forced_aligner.data",
    "montreal_forced_aligner.exceptions",
    "montreal_forced_aligner.helper",
    "montreal_forced_aligner.models",
    "montreal_forced_aligner.textgrid",
    "montreal_forced_aligner.utils",
    "montreal_forced_aligner",
    "montreal_forced_aligner.acoustic_modeling",
    "montreal_forced_aligner.alignment",
    "montreal_forced_aligner.command_line",
    "montreal_forced_aligner.corpus",
    "montreal_forced_aligner.diarization",
    "montreal_forced_aligner.dictionary",
    "montreal_forced_aligner.g2p",
    "montreal_forced_aligner.ivector",
    "montreal_forced_aligner.language_modeling",
    "montreal_forced_aligner.online",
    "montreal_forced_aligner.transcription",
    "montreal_forced_aligner.vad",
    "montreal_forced_aligner.validation",
    "montreal_forced_aligner._version",
    "montreal_forced_aligner.abc",
    "montreal_forced_aligner.config",
    "montreal_forced_aligner.data",
    "montreal_forced_aligner.exceptions",
    "montreal_forced_aligner.helper",
    "montreal_forced_aligner.models",
    "montreal_forced_aligner.textgrid",
    "montreal_forced_aligner.utils"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "baumwelch",
    "biopython",
    "click",
    "dataclassy",
    "ffmpeg",
    "hdbscan",
    "kaldi",
    "kneed",
    "librosa",
    "matplotlib-base",
    "ngram",
    "numba",
    "numpy",
    "openfst",
    "pgvector",
    "pgvector-python",
    "pip",
    "postgresql",
    "praatio",
    "psycopg2",
    "pynini",
    "pysoundfile",
    "python",
    "pyyaml",
    "requests",
    "rich",
    "rich-click",
    "seaborn",
    "setuptools",
    "setuptools_scm",
    "sox",
    "sqlalchemy",
    "tqdm",
    "wheel"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "baumwelch",
    "biopython",
    "click",
    "dataclassy",
    "ffmpeg",
    "hdbscan",
    "kaldi",
    "kneed",
    "librosa",
    "matplotlib-base",
    "ngram",
    "numba",
    "numpy",
    "openfst",
    "pgvector",
    "pgvector-python",
    "postgresql",
    "praatio",
    "psycopg2",
    "pynini",
    "pysoundfile",
    "python",
    "pyyaml",
    "requests",
    "rich",
    "rich-click",
    "seaborn",
    "sox",
    "sqlalchemy",
    "tqdm"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "osx_arm64_meta_yaml": {
  "about": {
   "description": "The Montreal Forced Aligner is a command line utility for performing forced alignment of speech datasets using\nKaldi <http://kaldi-asr.org/>.\n",
   "dev_url": "https://github.com/MontrealCorpusTools/Montreal-Forced-Aligner",
   "doc_url": "https://montreal-forced-aligner.readthedocs.io/",
   "home": "https://github.com/MontrealCorpusTools/Montreal-Forced-Aligner",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Forced aligner for speech to text alignment"
  },
  "build": {
   "entry_points": [
    "mfa = montreal_forced_aligner.command_line.mfa:mfa_cli",
    "mfa = montreal_forced_aligner.command_line.mfa:mfa_cli",
    "mfa = montreal_forced_aligner.command_line.mfa:mfa_cli"
   ],
   "number": "0",
   "script": "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "mmcauliffe",
    "mmcauliffe",
    "mmcauliffe"
   ]
  },
  "package": {
   "name": "montreal-forced-aligner",
   "version": "2.2.4"
  },
  "requirements": {
   "build": [],
   "host": [
    "setuptools",
    "setuptools_scm",
    "wheel",
    "python",
    "pip",
    "kaldi",
    "sox",
    "ffmpeg",
    "openfst",
    "baumwelch",
    "ngram",
    "pynini",
    "librosa",
    "pysoundfile",
    "numpy",
    "tqdm",
    "requests",
    "pyyaml",
    "biopython =1.79",
    "praatio =6.0.0",
    "sqlalchemy >=2.0",
    "dataclassy",
    "numba",
    "kneed",
    "matplotlib-base",
    "seaborn",
    "pgvector",
    "pgvector-python",
    "postgresql",
    "hdbscan",
    "psycopg2",
    "click",
    "rich",
    "rich-click",
    "setuptools",
    "setuptools_scm",
    "wheel",
    "python",
    "pip",
    "kaldi",
    "sox",
    "ffmpeg",
    "openfst",
    "baumwelch",
    "ngram",
    "pynini",
    "librosa",
    "pysoundfile",
    "numpy",
    "tqdm",
    "requests",
    "pyyaml",
    "biopython =1.79",
    "praatio =6.0.0",
    "sqlalchemy >=2.0",
    "dataclassy",
    "numba",
    "kneed",
    "matplotlib-base",
    "seaborn",
    "pgvector",
    "pgvector-python",
    "postgresql",
    "hdbscan",
    "psycopg2",
    "click",
    "rich",
    "rich-click",
    "setuptools",
    "setuptools_scm",
    "wheel",
    "python",
    "pip",
    "kaldi",
    "sox",
    "ffmpeg",
    "openfst",
    "baumwelch",
    "ngram",
    "pynini",
    "librosa",
    "pysoundfile",
    "numpy",
    "tqdm",
    "requests",
    "pyyaml",
    "biopython =1.79",
    "praatio =6.0.0",
    "sqlalchemy >=2.0",
    "dataclassy",
    "numba",
    "kneed",
    "matplotlib-base",
    "seaborn",
    "pgvector",
    "pgvector-python",
    "postgresql",
    "hdbscan",
    "psycopg2",
    "click",
    "rich",
    "rich-click"
   ],
   "run": [
    "python",
    "kaldi",
    "pynini",
    "openfst",
    "baumwelch",
    "ngram",
    "sox",
    "ffmpeg",
    "librosa",
    "pysoundfile",
    "numpy",
    "tqdm",
    "requests",
    "pyyaml",
    "biopython =1.79",
    "praatio =6.0.0",
    "sqlalchemy >=2.0",
    "dataclassy",
    "numba",
    "kneed",
    "matplotlib-base",
    "seaborn",
    "pgvector",
    "pgvector-python",
    "postgresql",
    "hdbscan",
    "psycopg2",
    "click",
    "rich",
    "rich-click",
    "python",
    "kaldi",
    "pynini",
    "openfst",
    "baumwelch",
    "ngram",
    "sox",
    "ffmpeg",
    "librosa",
    "pysoundfile",
    "numpy",
    "tqdm",
    "requests",
    "pyyaml",
    "biopython =1.79",
    "praatio =6.0.0",
    "sqlalchemy >=2.0",
    "dataclassy",
    "numba",
    "kneed",
    "matplotlib-base",
    "seaborn",
    "pgvector",
    "pgvector-python",
    "postgresql",
    "hdbscan",
    "psycopg2",
    "click",
    "rich",
    "rich-click",
    "python",
    "kaldi",
    "pynini",
    "openfst",
    "baumwelch",
    "ngram",
    "sox",
    "ffmpeg",
    "librosa",
    "pysoundfile",
    "numpy",
    "tqdm",
    "requests",
    "pyyaml",
    "biopython =1.79",
    "praatio =6.0.0",
    "sqlalchemy >=2.0",
    "dataclassy",
    "numba",
    "kneed",
    "matplotlib-base",
    "seaborn",
    "pgvector",
    "pgvector-python",
    "postgresql",
    "hdbscan",
    "psycopg2",
    "click",
    "rich",
    "rich-click"
   ]
  },
  "source": {
   "sha256": "a0d0dca2490cd149e60a2a6b6fdc43c0b883f41d7f642db122ea9e6aba041536",
   "url": "https://pypi.io/packages/source/m/montreal-forced-aligner/Montreal Forced Aligner-2.2.4.tar.gz"
  },
  "test": {
   "commands": [
    "mfa --help",
    "mfa --help",
    "mfa --help"
   ],
   "imports": [
    "montreal_forced_aligner",
    "montreal_forced_aligner.acoustic_modeling",
    "montreal_forced_aligner.alignment",
    "montreal_forced_aligner.command_line",
    "montreal_forced_aligner.corpus",
    "montreal_forced_aligner.diarization",
    "montreal_forced_aligner.dictionary",
    "montreal_forced_aligner.g2p",
    "montreal_forced_aligner.ivector",
    "montreal_forced_aligner.language_modeling",
    "montreal_forced_aligner.online",
    "montreal_forced_aligner.transcription",
    "montreal_forced_aligner.vad",
    "montreal_forced_aligner.validation",
    "montreal_forced_aligner._version",
    "montreal_forced_aligner.abc",
    "montreal_forced_aligner.config",
    "montreal_forced_aligner.data",
    "montreal_forced_aligner.exceptions",
    "montreal_forced_aligner.helper",
    "montreal_forced_aligner.models",
    "montreal_forced_aligner.textgrid",
    "montreal_forced_aligner.utils",
    "montreal_forced_aligner",
    "montreal_forced_aligner.acoustic_modeling",
    "montreal_forced_aligner.alignment",
    "montreal_forced_aligner.command_line",
    "montreal_forced_aligner.corpus",
    "montreal_forced_aligner.diarization",
    "montreal_forced_aligner.dictionary",
    "montreal_forced_aligner.g2p",
    "montreal_forced_aligner.ivector",
    "montreal_forced_aligner.language_modeling",
    "montreal_forced_aligner.online",
    "montreal_forced_aligner.transcription",
    "montreal_forced_aligner.vad",
    "montreal_forced_aligner.validation",
    "montreal_forced_aligner._version",
    "montreal_forced_aligner.abc",
    "montreal_forced_aligner.config",
    "montreal_forced_aligner.data",
    "montreal_forced_aligner.exceptions",
    "montreal_forced_aligner.helper",
    "montreal_forced_aligner.models",
    "montreal_forced_aligner.textgrid",
    "montreal_forced_aligner.utils",
    "montreal_forced_aligner",
    "montreal_forced_aligner.acoustic_modeling",
    "montreal_forced_aligner.alignment",
    "montreal_forced_aligner.command_line",
    "montreal_forced_aligner.corpus",
    "montreal_forced_aligner.diarization",
    "montreal_forced_aligner.dictionary",
    "montreal_forced_aligner.g2p",
    "montreal_forced_aligner.ivector",
    "montreal_forced_aligner.language_modeling",
    "montreal_forced_aligner.online",
    "montreal_forced_aligner.transcription",
    "montreal_forced_aligner.vad",
    "montreal_forced_aligner.validation",
    "montreal_forced_aligner._version",
    "montreal_forced_aligner.abc",
    "montreal_forced_aligner.config",
    "montreal_forced_aligner.data",
    "montreal_forced_aligner.exceptions",
    "montreal_forced_aligner.helper",
    "montreal_forced_aligner.models",
    "montreal_forced_aligner.textgrid",
    "montreal_forced_aligner.utils"
   ]
  }
 },
 "osx_arm64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "baumwelch",
    "biopython",
    "click",
    "dataclassy",
    "ffmpeg",
    "hdbscan",
    "kaldi",
    "kneed",
    "librosa",
    "matplotlib-base",
    "ngram",
    "numba",
    "numpy",
    "openfst",
    "pgvector",
    "pgvector-python",
    "pip",
    "postgresql",
    "praatio",
    "psycopg2",
    "pynini",
    "pysoundfile",
    "python",
    "pyyaml",
    "requests",
    "rich",
    "rich-click",
    "seaborn",
    "setuptools",
    "setuptools_scm",
    "sox",
    "sqlalchemy",
    "tqdm",
    "wheel"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "baumwelch",
    "biopython",
    "click",
    "dataclassy",
    "ffmpeg",
    "hdbscan",
    "kaldi",
    "kneed",
    "librosa",
    "matplotlib-base",
    "ngram",
    "numba",
    "numpy",
    "openfst",
    "pgvector",
    "pgvector-python",
    "postgresql",
    "praatio",
    "psycopg2",
    "pynini",
    "pysoundfile",
    "python",
    "pyyaml",
    "requests",
    "rich",
    "rich-click",
    "seaborn",
    "sox",
    "sqlalchemy",
    "tqdm"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "montreal-forced-aligner"
  ]
 },
 "parsing_error": false,
 "pr_info": {
  "__lazy_json__": "pr_info/montreal-forced-aligner.json"
 },
 "raw_meta_yaml": "{% set name = \"montreal-forced-aligner\" %}\n{% set version = \"2.2.4\" %}\n\npackage:\n  name: {{ name }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/Montreal Forced Aligner-{{ version }}.tar.gz\n  sha256: a0d0dca2490cd149e60a2a6b6fdc43c0b883f41d7f642db122ea9e6aba041536\n\nbuild:\n  number: 0\n  skip: true  # [py<38]\n  script: {{ PYTHON }} -m pip install . -vv\n  entry_points:\n    - mfa = montreal_forced_aligner.command_line.mfa:mfa_cli\n\nrequirements:\n  build:\n    - python                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n  host:\n    - setuptools\n    - setuptools_scm\n    - wheel\n    - python\n    - pip\n    - kaldi\n    - sox\n    - ffmpeg\n    - openfst\n    - baumwelch\n    - ngram\n    - pynini\n    - librosa\n    - pysoundfile\n    - numpy\n    - tqdm\n    - requests\n    - pyyaml\n    - biopython =1.79\n    - praatio =6.0.0\n    - sqlalchemy >=2.0\n    - dataclassy\n    - numba\n    - kneed\n    - matplotlib-base\n    - seaborn\n    - pgvector\n    - pgvector-python\n    - postgresql\n    - hdbscan\n    - psycopg2\n    - click\n    - rich\n    - rich-click\n  run:\n    - python\n    - kaldi\n    - pynini\n    - openfst\n    - baumwelch\n    - ngram\n    - sox\n    - ffmpeg\n    - librosa\n    - pysoundfile\n    - numpy\n    - tqdm\n    - requests\n    - pyyaml\n    - biopython =1.79\n    - praatio =6.0.0\n    - sqlalchemy >=2.0\n    - dataclassy\n    - numba\n    - kneed\n    - matplotlib-base\n    - seaborn\n    - pgvector\n    - pgvector-python\n    - postgresql\n    - hdbscan\n    - psycopg2\n    - click\n    - rich\n    - rich-click\n\ntest:\n  commands:\n    - mfa --help\n  imports:\n    - montreal_forced_aligner\n    - montreal_forced_aligner.acoustic_modeling\n    - montreal_forced_aligner.alignment\n    - montreal_forced_aligner.command_line\n    - montreal_forced_aligner.corpus\n    - montreal_forced_aligner.diarization\n    - montreal_forced_aligner.dictionary\n    - montreal_forced_aligner.g2p\n    - montreal_forced_aligner.ivector\n    - montreal_forced_aligner.language_modeling\n    - montreal_forced_aligner.online\n    - montreal_forced_aligner.transcription\n    - montreal_forced_aligner.vad\n    - montreal_forced_aligner.validation\n    - montreal_forced_aligner._version\n    - montreal_forced_aligner.abc\n    - montreal_forced_aligner.config\n    - montreal_forced_aligner.data\n    - montreal_forced_aligner.exceptions\n    - montreal_forced_aligner.helper\n    - montreal_forced_aligner.models\n    - montreal_forced_aligner.textgrid\n    - montreal_forced_aligner.utils\n\nabout:\n  home: https://github.com/MontrealCorpusTools/Montreal-Forced-Aligner\n  license: MIT\n  license_family: MIT\n  license_file: LICENSE\n  summary: Forced aligner for speech to text alignment\n  description: |\n    The Montreal Forced Aligner is a command line utility for performing forced alignment of speech datasets using\n    Kaldi <http://kaldi-asr.org/>.\n  doc_url: https://montreal-forced-aligner.readthedocs.io/\n  dev_url: https://github.com/MontrealCorpusTools/Montreal-Forced-Aligner\n\nextra:\n  recipe-maintainers:\n    - mmcauliffe\n",
 "req": {
  "__set__": true,
  "elements": [
   "baumwelch",
   "biopython",
   "click",
   "dataclassy",
   "ffmpeg",
   "hdbscan",
   "kaldi",
   "kneed",
   "librosa",
   "matplotlib-base",
   "ngram",
   "numba",
   "numpy",
   "openfst",
   "pgvector",
   "pgvector-python",
   "pip",
   "postgresql",
   "praatio",
   "psycopg2",
   "pynini",
   "pysoundfile",
   "python",
   "pyyaml",
   "requests",
   "rich",
   "rich-click",
   "seaborn",
   "setuptools",
   "setuptools_scm",
   "sox",
   "sqlalchemy",
   "tqdm",
   "wheel"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "baumwelch",
    "biopython",
    "click",
    "dataclassy",
    "ffmpeg",
    "hdbscan",
    "kaldi",
    "kneed",
    "librosa",
    "matplotlib-base",
    "ngram",
    "numba",
    "numpy",
    "openfst",
    "pgvector",
    "pgvector-python",
    "pip",
    "postgresql",
    "praatio",
    "psycopg2",
    "pynini",
    "pysoundfile",
    "python",
    "pyyaml",
    "requests",
    "rich",
    "rich-click",
    "seaborn",
    "setuptools",
    "setuptools_scm",
    "sox",
    "sqlalchemy",
    "tqdm",
    "wheel"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "baumwelch",
    "biopython",
    "click",
    "dataclassy",
    "ffmpeg",
    "hdbscan",
    "kaldi",
    "kneed",
    "librosa",
    "matplotlib-base",
    "ngram",
    "numba",
    "numpy",
    "openfst",
    "pgvector",
    "pgvector-python",
    "postgresql",
    "praatio",
    "psycopg2",
    "pynini",
    "pysoundfile",
    "python",
    "pyyaml",
    "requests",
    "rich",
    "rich-click",
    "seaborn",
    "sox",
    "sqlalchemy",
    "tqdm"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "baumwelch",
    "biopython =1.79",
    "click",
    "dataclassy",
    "ffmpeg",
    "hdbscan",
    "kaldi",
    "kneed",
    "librosa",
    "matplotlib-base",
    "ngram",
    "numba",
    "numpy",
    "openfst",
    "pgvector",
    "pgvector-python",
    "pip",
    "postgresql",
    "praatio =6.0.0",
    "psycopg2",
    "pynini",
    "pysoundfile",
    "python",
    "pyyaml",
    "requests",
    "rich",
    "rich-click",
    "seaborn",
    "setuptools",
    "setuptools_scm",
    "sox",
    "sqlalchemy >=2.0",
    "tqdm",
    "wheel"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "baumwelch",
    "biopython =1.79",
    "click",
    "dataclassy",
    "ffmpeg",
    "hdbscan",
    "kaldi",
    "kneed",
    "librosa",
    "matplotlib-base",
    "ngram",
    "numba",
    "numpy",
    "openfst",
    "pgvector",
    "pgvector-python",
    "postgresql",
    "praatio =6.0.0",
    "psycopg2",
    "pynini",
    "pysoundfile",
    "python",
    "pyyaml",
    "requests",
    "rich",
    "rich-click",
    "seaborn",
    "sox",
    "sqlalchemy >=2.0",
    "tqdm"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://pypi.io/packages/source/m/montreal-forced-aligner/Montreal Forced Aligner-2.2.4.tar.gz",
 "version": "2.2.4",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/montreal-forced-aligner.json"
 },
 "win_64_meta_yaml": {
  "about": {
   "description": "The Montreal Forced Aligner is a command line utility for performing forced alignment of speech datasets using\nKaldi <http://kaldi-asr.org/>.\n",
   "dev_url": "https://github.com/MontrealCorpusTools/Montreal-Forced-Aligner",
   "doc_url": "https://montreal-forced-aligner.readthedocs.io/",
   "home": "https://github.com/MontrealCorpusTools/Montreal-Forced-Aligner",
   "license": "MIT",
   "license_family": "MIT",
   "license_file": "LICENSE",
   "summary": "Forced aligner for speech to text alignment"
  },
  "build": {
   "entry_points": [
    "mfa = montreal_forced_aligner.command_line.mfa:mfa_cli",
    "mfa = montreal_forced_aligner.command_line.mfa:mfa_cli",
    "mfa = montreal_forced_aligner.command_line.mfa:mfa_cli"
   ],
   "number": "0",
   "script": "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/python.exe -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "mmcauliffe",
    "mmcauliffe",
    "mmcauliffe"
   ]
  },
  "package": {
   "name": "montreal-forced-aligner",
   "version": "2.2.4"
  },
  "requirements": {
   "build": [],
   "host": [
    "setuptools",
    "setuptools_scm",
    "wheel",
    "python",
    "pip",
    "kaldi",
    "sox",
    "ffmpeg",
    "openfst",
    "baumwelch",
    "ngram",
    "pynini",
    "librosa",
    "pysoundfile",
    "numpy",
    "tqdm",
    "requests",
    "pyyaml",
    "biopython =1.79",
    "praatio =6.0.0",
    "sqlalchemy >=2.0",
    "dataclassy",
    "numba",
    "kneed",
    "matplotlib-base",
    "seaborn",
    "pgvector",
    "pgvector-python",
    "postgresql",
    "hdbscan",
    "psycopg2",
    "click",
    "rich",
    "rich-click",
    "setuptools",
    "setuptools_scm",
    "wheel",
    "python",
    "pip",
    "kaldi",
    "sox",
    "ffmpeg",
    "openfst",
    "baumwelch",
    "ngram",
    "pynini",
    "librosa",
    "pysoundfile",
    "numpy",
    "tqdm",
    "requests",
    "pyyaml",
    "biopython =1.79",
    "praatio =6.0.0",
    "sqlalchemy >=2.0",
    "dataclassy",
    "numba",
    "kneed",
    "matplotlib-base",
    "seaborn",
    "pgvector",
    "pgvector-python",
    "postgresql",
    "hdbscan",
    "psycopg2",
    "click",
    "rich",
    "rich-click",
    "setuptools",
    "setuptools_scm",
    "wheel",
    "python",
    "pip",
    "kaldi",
    "sox",
    "ffmpeg",
    "openfst",
    "baumwelch",
    "ngram",
    "pynini",
    "librosa",
    "pysoundfile",
    "numpy",
    "tqdm",
    "requests",
    "pyyaml",
    "biopython =1.79",
    "praatio =6.0.0",
    "sqlalchemy >=2.0",
    "dataclassy",
    "numba",
    "kneed",
    "matplotlib-base",
    "seaborn",
    "pgvector",
    "pgvector-python",
    "postgresql",
    "hdbscan",
    "psycopg2",
    "click",
    "rich",
    "rich-click"
   ],
   "run": [
    "python",
    "kaldi",
    "pynini",
    "openfst",
    "baumwelch",
    "ngram",
    "sox",
    "ffmpeg",
    "librosa",
    "pysoundfile",
    "numpy",
    "tqdm",
    "requests",
    "pyyaml",
    "biopython =1.79",
    "praatio =6.0.0",
    "sqlalchemy >=2.0",
    "dataclassy",
    "numba",
    "kneed",
    "matplotlib-base",
    "seaborn",
    "pgvector",
    "pgvector-python",
    "postgresql",
    "hdbscan",
    "psycopg2",
    "click",
    "rich",
    "rich-click",
    "python",
    "kaldi",
    "pynini",
    "openfst",
    "baumwelch",
    "ngram",
    "sox",
    "ffmpeg",
    "librosa",
    "pysoundfile",
    "numpy",
    "tqdm",
    "requests",
    "pyyaml",
    "biopython =1.79",
    "praatio =6.0.0",
    "sqlalchemy >=2.0",
    "dataclassy",
    "numba",
    "kneed",
    "matplotlib-base",
    "seaborn",
    "pgvector",
    "pgvector-python",
    "postgresql",
    "hdbscan",
    "psycopg2",
    "click",
    "rich",
    "rich-click",
    "python",
    "kaldi",
    "pynini",
    "openfst",
    "baumwelch",
    "ngram",
    "sox",
    "ffmpeg",
    "librosa",
    "pysoundfile",
    "numpy",
    "tqdm",
    "requests",
    "pyyaml",
    "biopython =1.79",
    "praatio =6.0.0",
    "sqlalchemy >=2.0",
    "dataclassy",
    "numba",
    "kneed",
    "matplotlib-base",
    "seaborn",
    "pgvector",
    "pgvector-python",
    "postgresql",
    "hdbscan",
    "psycopg2",
    "click",
    "rich",
    "rich-click"
   ]
  },
  "source": {
   "sha256": "a0d0dca2490cd149e60a2a6b6fdc43c0b883f41d7f642db122ea9e6aba041536",
   "url": "https://pypi.io/packages/source/m/montreal-forced-aligner/Montreal Forced Aligner-2.2.4.tar.gz"
  },
  "test": {
   "commands": [
    "mfa --help",
    "mfa --help",
    "mfa --help"
   ],
   "imports": [
    "montreal_forced_aligner",
    "montreal_forced_aligner.acoustic_modeling",
    "montreal_forced_aligner.alignment",
    "montreal_forced_aligner.command_line",
    "montreal_forced_aligner.corpus",
    "montreal_forced_aligner.diarization",
    "montreal_forced_aligner.dictionary",
    "montreal_forced_aligner.g2p",
    "montreal_forced_aligner.ivector",
    "montreal_forced_aligner.language_modeling",
    "montreal_forced_aligner.online",
    "montreal_forced_aligner.transcription",
    "montreal_forced_aligner.vad",
    "montreal_forced_aligner.validation",
    "montreal_forced_aligner._version",
    "montreal_forced_aligner.abc",
    "montreal_forced_aligner.config",
    "montreal_forced_aligner.data",
    "montreal_forced_aligner.exceptions",
    "montreal_forced_aligner.helper",
    "montreal_forced_aligner.models",
    "montreal_forced_aligner.textgrid",
    "montreal_forced_aligner.utils",
    "montreal_forced_aligner",
    "montreal_forced_aligner.acoustic_modeling",
    "montreal_forced_aligner.alignment",
    "montreal_forced_aligner.command_line",
    "montreal_forced_aligner.corpus",
    "montreal_forced_aligner.diarization",
    "montreal_forced_aligner.dictionary",
    "montreal_forced_aligner.g2p",
    "montreal_forced_aligner.ivector",
    "montreal_forced_aligner.language_modeling",
    "montreal_forced_aligner.online",
    "montreal_forced_aligner.transcription",
    "montreal_forced_aligner.vad",
    "montreal_forced_aligner.validation",
    "montreal_forced_aligner._version",
    "montreal_forced_aligner.abc",
    "montreal_forced_aligner.config",
    "montreal_forced_aligner.data",
    "montreal_forced_aligner.exceptions",
    "montreal_forced_aligner.helper",
    "montreal_forced_aligner.models",
    "montreal_forced_aligner.textgrid",
    "montreal_forced_aligner.utils",
    "montreal_forced_aligner",
    "montreal_forced_aligner.acoustic_modeling",
    "montreal_forced_aligner.alignment",
    "montreal_forced_aligner.command_line",
    "montreal_forced_aligner.corpus",
    "montreal_forced_aligner.diarization",
    "montreal_forced_aligner.dictionary",
    "montreal_forced_aligner.g2p",
    "montreal_forced_aligner.ivector",
    "montreal_forced_aligner.language_modeling",
    "montreal_forced_aligner.online",
    "montreal_forced_aligner.transcription",
    "montreal_forced_aligner.vad",
    "montreal_forced_aligner.validation",
    "montreal_forced_aligner._version",
    "montreal_forced_aligner.abc",
    "montreal_forced_aligner.config",
    "montreal_forced_aligner.data",
    "montreal_forced_aligner.exceptions",
    "montreal_forced_aligner.helper",
    "montreal_forced_aligner.models",
    "montreal_forced_aligner.textgrid",
    "montreal_forced_aligner.utils"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "baumwelch",
    "biopython",
    "click",
    "dataclassy",
    "ffmpeg",
    "hdbscan",
    "kaldi",
    "kneed",
    "librosa",
    "matplotlib-base",
    "ngram",
    "numba",
    "numpy",
    "openfst",
    "pgvector",
    "pgvector-python",
    "pip",
    "postgresql",
    "praatio",
    "psycopg2",
    "pynini",
    "pysoundfile",
    "python",
    "pyyaml",
    "requests",
    "rich",
    "rich-click",
    "seaborn",
    "setuptools",
    "setuptools_scm",
    "sox",
    "sqlalchemy",
    "tqdm",
    "wheel"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "baumwelch",
    "biopython",
    "click",
    "dataclassy",
    "ffmpeg",
    "hdbscan",
    "kaldi",
    "kneed",
    "librosa",
    "matplotlib-base",
    "ngram",
    "numba",
    "numpy",
    "openfst",
    "pgvector",
    "pgvector-python",
    "postgresql",
    "praatio",
    "psycopg2",
    "pynini",
    "pysoundfile",
    "python",
    "pyyaml",
    "requests",
    "rich",
    "rich-click",
    "seaborn",
    "sox",
    "sqlalchemy",
    "tqdm"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}