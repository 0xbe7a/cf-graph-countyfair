{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "conda-forge-repodata-patches",
 "linux_64_meta_yaml": {
  "about": {
   "description": "See the [recipe/patch_yaml/README.md](recipe/patch_yaml/README.md) for how generate patches from static YAML files.\nThis mechanism should work for most things. If it does not work for your specific case, you\ncan write custom code in `generate_patch_json.py`.\n",
   "home": "https://github.com/conda-forge/conda-forge-repodata-patches-feedstock",
   "license": "CC-PDDC",
   "summary": "generate tweaks to index metadata, hosted separately from anaconda.org index"
  },
  "build": {
   "noarch": "generic",
   "number": "0",
   "script": [
    "black --check patch_yaml_utils.py",
    "ruff patch_yaml_utils.py",
    "black --check test_patch_yaml_utils.py",
    "ruff test_patch_yaml_utils.py",
    "pytest -vv test_patch_yaml_utils.py",
    "pytest -vv test_gen_patch_json.py",
    "python gen_patch_json.py"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "conda-forge/core"
   ]
  },
  "package": {
   "name": "conda-forge-repodata-patches",
   "version": "20230822.06.43.02"
  },
  "requirements": {
   "build": [
    "python 3.*",
    "requests",
    "tqdm",
    "license-expression",
    "packaging",
    "pyyaml",
    "black",
    "ruff",
    "pytest"
   ],
   "host": [],
   "run": []
  },
  "source": {
   "path": "."
  },
  "test": {
   "commands": [
    "test -e $PREFIX/noarch/patch_instructions.json",
    "test -e $PREFIX/linux-64/patch_instructions.json",
    "test -e $PREFIX/linux-armv7l/patch_instructions.json",
    "test -e $PREFIX/linux-ppc64le/patch_instructions.json",
    "test -e $PREFIX/osx-64/patch_instructions.json",
    "test -e $PREFIX/osx-arm64/patch_instructions.json",
    "test -e $PREFIX/win-32/patch_instructions.json",
    "test -e $PREFIX/win-64/patch_instructions.json",
    "python show_diff.py"
   ],
   "files": [
    "test_gen_patch_json.py",
    "gen_patch_json.py",
    "get_license_family.py",
    "show_diff.py",
    "patch_yaml_utils.py",
    "patch_yaml",
    "test_patch_yaml_utils.py"
   ],
   "requires": [
    "python 3.*",
    "requests",
    "packaging",
    "tqdm",
    "license-expression",
    "pyyaml",
    "conda-build"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "black",
    "license-expression",
    "packaging",
    "pytest",
    "python",
    "pyyaml",
    "requests",
    "ruff",
    "tqdm"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": [
    "conda-build",
    "license-expression",
    "packaging",
    "python",
    "pyyaml",
    "requests",
    "tqdm"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "See the [recipe/patch_yaml/README.md](recipe/patch_yaml/README.md) for how generate patches from static YAML files.\nThis mechanism should work for most things. If it does not work for your specific case, you\ncan write custom code in `generate_patch_json.py`.\n",
   "home": "https://github.com/conda-forge/conda-forge-repodata-patches-feedstock",
   "license": "CC-PDDC",
   "summary": "generate tweaks to index metadata, hosted separately from anaconda.org index"
  },
  "build": {
   "noarch": "generic",
   "number": "0",
   "script": [
    "black --check patch_yaml_utils.py",
    "ruff patch_yaml_utils.py",
    "black --check test_patch_yaml_utils.py",
    "ruff test_patch_yaml_utils.py",
    "pytest -vv test_patch_yaml_utils.py",
    "pytest -vv test_gen_patch_json.py",
    "python gen_patch_json.py"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "conda-forge/core"
   ]
  },
  "package": {
   "name": "conda-forge-repodata-patches",
   "version": "20230822.06.43.02"
  },
  "requirements": {
   "build": [
    "python 3.*",
    "requests",
    "tqdm",
    "license-expression",
    "packaging",
    "pyyaml",
    "black",
    "ruff",
    "pytest"
   ],
   "host": [],
   "run": []
  },
  "source": {
   "path": "."
  },
  "test": {
   "commands": [
    "test -e $PREFIX/noarch/patch_instructions.json",
    "test -e $PREFIX/linux-64/patch_instructions.json",
    "test -e $PREFIX/linux-armv7l/patch_instructions.json",
    "test -e $PREFIX/linux-ppc64le/patch_instructions.json",
    "test -e $PREFIX/osx-64/patch_instructions.json",
    "test -e $PREFIX/osx-arm64/patch_instructions.json",
    "test -e $PREFIX/win-32/patch_instructions.json",
    "test -e $PREFIX/win-64/patch_instructions.json",
    "python show_diff.py"
   ],
   "files": [
    "test_gen_patch_json.py",
    "gen_patch_json.py",
    "get_license_family.py",
    "show_diff.py",
    "patch_yaml_utils.py",
    "patch_yaml",
    "test_patch_yaml_utils.py"
   ],
   "requires": [
    "python 3.*",
    "requests",
    "packaging",
    "tqdm",
    "license-expression",
    "pyyaml",
    "conda-build"
   ]
  }
 },
 "name": "conda-forge-repodata-patches",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "conda-forge-repodata-patches"
  ]
 },
 "parsing_error": false,
 "platforms": [
  "linux_64"
 ],
 "pr_info": {
  "__lazy_json__": "pr_info/conda-forge-repodata-patches.json"
 },
 "raw_meta_yaml": "{% set version = datetime.datetime.utcnow().strftime('%Y%m%d.%H.%M.%S') %}\n\npackage:\n  name: conda-forge-repodata-patches\n  version: {{ version }}\n\nsource:\n  path: .\n\nbuild:\n  noarch: generic\n  number: 0\n  script:\n    - black --check patch_yaml_utils.py\n    - ruff patch_yaml_utils.py\n    - black --check test_patch_yaml_utils.py\n    - ruff test_patch_yaml_utils.py\n    - pytest -vv test_patch_yaml_utils.py\n    - pytest -vv test_gen_patch_json.py\n    - python gen_patch_json.py\n\nrequirements:\n  build:\n    - python 3.*\n    - requests\n    - tqdm\n    - license-expression\n    - packaging\n    - pyyaml\n    - black\n    - ruff\n    - pytest\n  host:\n  run:\n\ntest:\n  files:\n    - test_gen_patch_json.py\n    - gen_patch_json.py\n    - get_license_family.py\n    - show_diff.py\n    - patch_yaml_utils.py\n    - patch_yaml\n    - test_patch_yaml_utils.py\n  requires:\n    - python 3.*\n    - requests\n    - packaging\n    - tqdm\n    - license-expression\n    - pyyaml\n    - conda-build\n  commands:\n    {% for subdir in (\"noarch\", \"linux-64\", \"linux-armv7l\", \"linux-ppc64le\", \"osx-64\", \"osx-arm64\", \"win-32\", \"win-64\") %}\n    - test -e $PREFIX/{{ subdir }}/patch_instructions.json\n    {% endfor %}\n    - python show_diff.py\n\nabout:\n  summary: generate tweaks to index metadata, hosted separately from anaconda.org index\n  home: https://github.com/conda-forge/conda-forge-repodata-patches-feedstock\n  license: CC-PDDC\n  description: |\n    See the [recipe/patch_yaml/README.md](recipe/patch_yaml/README.md) for how generate patches from static YAML files.\n    This mechanism should work for most things. If it does not work for your specific case, you\n    can write custom code in `generate_patch_json.py`.\n\nextra:\n  recipe-maintainers:\n    - conda-forge/core\n",
 "req": {
  "__set__": true,
  "elements": [
   "black",
   "license-expression",
   "packaging",
   "pytest",
   "python",
   "pyyaml",
   "requests",
   "ruff",
   "tqdm"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "black",
    "license-expression",
    "packaging",
    "pytest",
    "python",
    "pyyaml",
    "requests",
    "ruff",
    "tqdm"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": [
    "conda-build",
    "license-expression",
    "packaging",
    "python",
    "pyyaml",
    "requests",
    "tqdm"
   ]
  }
 },
 "strong_exports": false,
 "time": 1568135298.5226595,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "black",
    "license-expression",
    "packaging",
    "pytest",
    "python 3.*",
    "pyyaml",
    "requests",
    "ruff",
    "tqdm"
   ]
  },
  "host": {
   "__set__": true,
   "elements": []
  },
  "run": {
   "__set__": true,
   "elements": []
  },
  "test": {
   "__set__": true,
   "elements": [
    "conda-build",
    "license-expression",
    "packaging",
    "python 3.*",
    "pyyaml",
    "requests",
    "tqdm"
   ]
  }
 },
 "url": null,
 "version": "20230822.06.43.02",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/conda-forge-repodata-patches.json"
 }
}