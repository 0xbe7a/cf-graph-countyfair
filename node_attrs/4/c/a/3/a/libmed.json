{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "libmed",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "The purpose of the MED module is to provide a standard for storing and recovering computer data associated to numerical meshes and fields, and to facilitate the exchange between codes and solvers.\n",
   "dev_url": "http://www.salome-platform.org/",
   "doc_url": "http://www.salome-platform.org/",
   "home": "https://www.salome-platform.org/user-section/about/med",
   "license": "LGPL-3.0-only",
   "license_family": "LGPL",
   "license_file": "LICENSE.txt",
   "summary": "MED : interoperable format for data interchange between mesh based solvers."
  },
  "build": {
   "number": "3"
  },
  "extra": {
   "recipe-maintainers": [
    "Krande",
    "ldallolio",
    "looooo",
    "ldallolio-irt",
    "Krande",
    "ldallolio",
    "looooo",
    "ldallolio-irt",
    "Krande",
    "ldallolio",
    "looooo",
    "ldallolio-irt",
    "Krande",
    "ldallolio",
    "looooo",
    "ldallolio-irt",
    "Krande",
    "ldallolio",
    "looooo",
    "ldallolio-irt"
   ]
  },
  "package": {
   "name": "libmed",
   "version": "4.1.1"
  },
  "requirements": {
   "build": [
    "fortran_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "swig >=4.0.2",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "swig >=4.0.2",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "swig >=4.0.2",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "swig >=4.0.2",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "swig >=4.0.2"
   ],
   "host": [
    "make",
    "cmake",
    "hdf5 >=1.10.2,<1.11",
    "python",
    "make",
    "cmake",
    "hdf5 >=1.10.2,<1.11",
    "python",
    "make",
    "cmake",
    "hdf5 >=1.10.2,<1.11",
    "python",
    "make",
    "cmake",
    "hdf5 >=1.10.2,<1.11",
    "python",
    "make",
    "cmake",
    "hdf5 >=1.10.2,<1.11",
    "python"
   ],
   "run": [
    "hdf5",
    "python",
    "python",
    "hdf5",
    "python",
    "python",
    "hdf5",
    "python",
    "python",
    "hdf5",
    "python",
    "python",
    "hdf5",
    "python",
    "python"
   ]
  },
  "source": {
   "fn": "libmed_4.1.1.tar.gz",
   "sha256": "dc2b5d54ebf0666e3ff2e974041d2ab0da906061323537023ab165d573389dd0",
   "url": "https://files.salome-platform.org/Salome/other/med-4.1.1.tar.gz"
  },
  "test": {
   "imports": [
    "med",
    "med",
    "med",
    "med",
    "med"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "swig"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cmake",
    "hdf5",
    "make",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "hdf5",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "The purpose of the MED module is to provide a standard for storing and recovering computer data associated to numerical meshes and fields, and to facilitate the exchange between codes and solvers.\n",
   "dev_url": "http://www.salome-platform.org/",
   "doc_url": "http://www.salome-platform.org/",
   "home": "https://www.salome-platform.org/user-section/about/med",
   "license": "LGPL-3.0-only",
   "license_family": "LGPL",
   "license_file": "LICENSE.txt",
   "summary": "MED : interoperable format for data interchange between mesh based solvers."
  },
  "build": {
   "number": "3"
  },
  "extra": {
   "recipe-maintainers": [
    "Krande",
    "ldallolio",
    "looooo",
    "ldallolio-irt",
    "Krande",
    "ldallolio",
    "looooo",
    "ldallolio-irt",
    "Krande",
    "ldallolio",
    "looooo",
    "ldallolio-irt",
    "Krande",
    "ldallolio",
    "looooo",
    "ldallolio-irt",
    "Krande",
    "ldallolio",
    "looooo",
    "ldallolio-irt",
    "Krande",
    "ldallolio",
    "looooo",
    "ldallolio-irt",
    "Krande",
    "ldallolio",
    "looooo",
    "ldallolio-irt",
    "Krande",
    "ldallolio",
    "looooo",
    "ldallolio-irt",
    "Krande",
    "ldallolio",
    "looooo",
    "ldallolio-irt",
    "Krande",
    "ldallolio",
    "looooo",
    "ldallolio-irt"
   ]
  },
  "package": {
   "name": "libmed",
   "version": "4.1.1"
  },
  "requirements": {
   "build": [
    "fortran_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "swig >=4.0.2",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "swig >=4.0.2",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "swig >=4.0.2",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "swig >=4.0.2",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "swig >=4.0.2",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "swig >=4.0.2",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "swig >=4.0.2",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "swig >=4.0.2",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "swig >=4.0.2",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "swig >=4.0.2"
   ],
   "host": [
    "make",
    "cmake",
    "hdf5 >=1.10.2,<1.11",
    "python",
    "make",
    "cmake",
    "hdf5 >=1.10.2,<1.11",
    "python",
    "make",
    "cmake",
    "hdf5 >=1.10.2,<1.11",
    "python",
    "make",
    "cmake",
    "hdf5 >=1.10.2,<1.11",
    "python",
    "make",
    "cmake",
    "hdf5 >=1.10.2,<1.11",
    "python",
    "ninja",
    "cmake",
    "hdf5 >=1.10.2,<1.11",
    "python",
    "ninja",
    "cmake",
    "hdf5 >=1.10.2,<1.11",
    "python",
    "ninja",
    "cmake",
    "hdf5 >=1.10.2,<1.11",
    "python",
    "ninja",
    "cmake",
    "hdf5 >=1.10.2,<1.11",
    "python",
    "ninja",
    "cmake",
    "hdf5 >=1.10.2,<1.11",
    "python"
   ],
   "run": [
    "hdf5",
    "python",
    "python",
    "hdf5",
    "python",
    "python",
    "hdf5",
    "python",
    "python",
    "hdf5",
    "python",
    "python",
    "hdf5",
    "python",
    "python",
    "hdf5",
    "python",
    "python",
    "hdf5",
    "python",
    "python",
    "hdf5",
    "python",
    "python",
    "hdf5",
    "python",
    "python",
    "hdf5",
    "python",
    "python"
   ]
  },
  "source": {
   "fn": "libmed_4.1.1.tar.gz",
   "sha256": "dc2b5d54ebf0666e3ff2e974041d2ab0da906061323537023ab165d573389dd0",
   "url": "https://files.salome-platform.org/Salome/other/med-4.1.1.tar.gz"
  },
  "test": {
   "imports": [
    "med",
    "med",
    "med",
    "med",
    "med",
    "med",
    "med",
    "med",
    "med",
    "med"
   ]
  }
 },
 "name": "libmed",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "libmed"
  ]
 },
 "parsing_error": false,
 "platforms": [
  "linux_64",
  "win_64"
 ],
 "pr_info": {
  "__lazy_json__": "pr_info/libmed.json"
 },
 "raw_meta_yaml": "{% set name = \"libmed\" %}\n{% set version = \"4.1.1\" %}\n{% set sha256 = \"dc2b5d54ebf0666e3ff2e974041d2ab0da906061323537023ab165d573389dd0\" %}\n\n\npackage:\n  name: {{ name }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}_{{ version }}.tar.gz\n  url: https://files.salome-platform.org/Salome/other/med-{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n    #git_url: https://salsa.debian.org/science-team/med-fichier\n    #git_rev: 8a0b0d21d4bac79772797b0a800cf4d5bf77bc32    \n\nbuild:\n  number: 3\n  skip: true  # [py2k or osx]\n\nrequirements:\n  build:\n      - {{ compiler('fortran') }}\n      - {{ compiler('c') }}\n      - {{ compiler('cxx') }}\n      - swig >=4.0.2\n  host:\n#      - autoconf  # [linux]\n      - make  # [not win]\n      - ninja  # [win]\n      - cmake\n      - hdf5 >=1.10.2,<1.11\n      - python {{ python }}\n  run:\n      - {{ pin_compatible('hdf5', min_pin='x.x', max_pin='x.x') }}\n      - {{ pin_compatible('python', min_pin='x.x', max_pin='x.x') }}\n      - python {{ python }}\n\ntest:\n  imports:\n    - med\n\nabout:\n  home: https://www.salome-platform.org/user-section/about/med\n  license: LGPL-3.0-only\n  license_family: LGPL\n  license_file: LICENSE.txt\n  summary: 'MED : interoperable format for data interchange between mesh based solvers.'\n  description: |\n    The purpose of the MED module is to provide a standard for storing and recovering computer data associated to numerical meshes and fields, and to facilitate the exchange between codes and solvers.\n  doc_url: http://www.salome-platform.org/\n  dev_url: http://www.salome-platform.org/\n\nextra:\n  recipe-maintainers:\n    - Krande\n    - ldallolio\n    - looooo\n    - ldallolio-irt\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "cmake",
   "cxx_compiler_stub",
   "fortran_compiler_stub",
   "hdf5",
   "make",
   "ninja",
   "python",
   "swig"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "swig"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "hdf5",
    "make",
    "ninja",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "hdf5",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "swig >=4.0.2"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cmake",
    "hdf5 >=1.10.2,<1.11",
    "make",
    "ninja",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "hdf5",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://files.salome-platform.org/Salome/other/med-4.1.1.tar.gz",
 "version": "4.1.1",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/libmed.json"
 },
 "win_64_meta_yaml": {
  "about": {
   "description": "The purpose of the MED module is to provide a standard for storing and recovering computer data associated to numerical meshes and fields, and to facilitate the exchange between codes and solvers.\n",
   "dev_url": "http://www.salome-platform.org/",
   "doc_url": "http://www.salome-platform.org/",
   "home": "https://www.salome-platform.org/user-section/about/med",
   "license": "LGPL-3.0-only",
   "license_family": "LGPL",
   "license_file": "LICENSE.txt",
   "summary": "MED : interoperable format for data interchange between mesh based solvers."
  },
  "build": {
   "number": "3"
  },
  "extra": {
   "recipe-maintainers": [
    "Krande",
    "ldallolio",
    "looooo",
    "ldallolio-irt",
    "Krande",
    "ldallolio",
    "looooo",
    "ldallolio-irt",
    "Krande",
    "ldallolio",
    "looooo",
    "ldallolio-irt",
    "Krande",
    "ldallolio",
    "looooo",
    "ldallolio-irt",
    "Krande",
    "ldallolio",
    "looooo",
    "ldallolio-irt"
   ]
  },
  "package": {
   "name": "libmed",
   "version": "4.1.1"
  },
  "requirements": {
   "build": [
    "fortran_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "swig >=4.0.2",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "swig >=4.0.2",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "swig >=4.0.2",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "swig >=4.0.2",
    "fortran_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "swig >=4.0.2"
   ],
   "host": [
    "ninja",
    "cmake",
    "hdf5 >=1.10.2,<1.11",
    "python",
    "ninja",
    "cmake",
    "hdf5 >=1.10.2,<1.11",
    "python",
    "ninja",
    "cmake",
    "hdf5 >=1.10.2,<1.11",
    "python",
    "ninja",
    "cmake",
    "hdf5 >=1.10.2,<1.11",
    "python",
    "ninja",
    "cmake",
    "hdf5 >=1.10.2,<1.11",
    "python"
   ],
   "run": [
    "hdf5",
    "python",
    "python",
    "hdf5",
    "python",
    "python",
    "hdf5",
    "python",
    "python",
    "hdf5",
    "python",
    "python",
    "hdf5",
    "python",
    "python"
   ]
  },
  "source": {
   "fn": "libmed_4.1.1.tar.gz",
   "sha256": "dc2b5d54ebf0666e3ff2e974041d2ab0da906061323537023ab165d573389dd0",
   "url": "https://files.salome-platform.org/Salome/other/med-4.1.1.tar.gz"
  },
  "test": {
   "imports": [
    "med",
    "med",
    "med",
    "med",
    "med"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "swig"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cmake",
    "hdf5",
    "ninja",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "hdf5",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}