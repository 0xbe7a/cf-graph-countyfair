{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "libmed",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "The purpose of the MED module is to provide a standard for storing and recovering computer data associated to numerical meshes and fields, and to facilitate the exchange between codes and solvers.\n",
   "dev_url": "https://git.salome-platform.org/gitweb/?p=modules/med.git;a=summary",
   "doc_url": "http://www.salome-platform.org/",
   "home": "https://www.salome-platform.org/user-section/about/med",
   "license": "LGPL-3.0-only",
   "license_family": "LGPL",
   "license_file": "LICENSE.txt",
   "summary": "MED : interoperable format for data interchange between mesh based solvers."
  },
  "build": {
   "number": "5",
   "script_env": [
    "PKG_DEBUG=False",
    "PKG_DEBUG=False",
    "PKG_DEBUG=False",
    "PKG_DEBUG=False"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "Krande",
    "ldallolio",
    "looooo",
    "ldallolio-irt",
    "Krande",
    "ldallolio",
    "looooo",
    "ldallolio-irt",
    "Krande",
    "ldallolio",
    "looooo",
    "ldallolio-irt",
    "Krande",
    "ldallolio",
    "looooo",
    "ldallolio-irt"
   ]
  },
  "package": {
   "name": "libmed",
   "version": "4.1.1"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "sysroot_linux-64 2.17",
    "swig >=4.0.2",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "sysroot_linux-64 2.17",
    "swig >=4.0.2",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "sysroot_linux-64 2.17",
    "swig >=4.0.2",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "sysroot_linux-64 2.17",
    "swig >=4.0.2"
   ],
   "host": [
    "autoconf",
    "make",
    "hdf5 >=1.10.2,<1.11",
    "python",
    "zlib",
    "autoconf",
    "make",
    "hdf5 >=1.10.2,<1.11",
    "python",
    "zlib",
    "autoconf",
    "make",
    "hdf5 >=1.10.2,<1.11",
    "python",
    "zlib",
    "autoconf",
    "make",
    "hdf5 >=1.10.2,<1.11",
    "python",
    "zlib"
   ],
   "run": [
    "hdf5",
    "python",
    "python",
    "hdf5",
    "python",
    "python",
    "hdf5",
    "python",
    "python",
    "hdf5",
    "python",
    "python"
   ]
  },
  "source": {
   "fn": "libmed_4.1.1.tar.gz",
   "patches": [
    "patches/med-4.1.1-check-hdf5-parallel.diff",
    "patches/med-4.1.1-check-hdf5-parallel.diff",
    "patches/med-4.1.1-check-hdf5-parallel.diff",
    "patches/med-4.1.1-check-hdf5-parallel.diff"
   ],
   "sha256": "fe1e80c836150ff27049b291fe2f9a11eda9ef9831311df9e39ba16a63c392a0",
   "url": "https://github.com/Krande/med-copy/archive/refs/tags/4.1.1.tar.gz"
  },
  "test": {
   "commands": [
    "test -f $CONDA_PREFIX/lib/libmed.so",
    "test -n \"$(nm -D $CONDA_PREFIX/lib/libmed.so | grep MEDlibraryNumVersion)\"",
    "test -f $CONDA_PREFIX/lib/libmed.so",
    "test -n \"$(nm -D $CONDA_PREFIX/lib/libmed.so | grep MEDlibraryNumVersion)\"",
    "test -f $CONDA_PREFIX/lib/libmed.so",
    "test -n \"$(nm -D $CONDA_PREFIX/lib/libmed.so | grep MEDlibraryNumVersion)\"",
    "test -f $CONDA_PREFIX/lib/libmed.so",
    "test -n \"$(nm -D $CONDA_PREFIX/lib/libmed.so | grep MEDlibraryNumVersion)\""
   ],
   "imports": [
    "med",
    "med",
    "med",
    "med"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "swig",
    "sysroot_linux-64"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "autoconf",
    "hdf5",
    "make",
    "python",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "hdf5",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "The purpose of the MED module is to provide a standard for storing and recovering computer data associated to numerical meshes and fields, and to facilitate the exchange between codes and solvers.\n",
   "dev_url": "https://git.salome-platform.org/gitweb/?p=modules/med.git;a=summary",
   "doc_url": "http://www.salome-platform.org/",
   "home": "https://www.salome-platform.org/user-section/about/med",
   "license": "LGPL-3.0-only",
   "license_family": "LGPL",
   "license_file": "LICENSE.txt",
   "summary": "MED : interoperable format for data interchange between mesh based solvers."
  },
  "build": {
   "number": "5",
   "script_env": [
    "PKG_DEBUG=False",
    "PKG_DEBUG=False",
    "PKG_DEBUG=False",
    "PKG_DEBUG=False",
    "PKG_DEBUG=False",
    "PKG_DEBUG=False",
    "PKG_DEBUG=False",
    "PKG_DEBUG=False"
   ],
   "skip": true
  },
  "extra": {
   "recipe-maintainers": [
    "Krande",
    "ldallolio",
    "looooo",
    "ldallolio-irt",
    "Krande",
    "ldallolio",
    "looooo",
    "ldallolio-irt",
    "Krande",
    "ldallolio",
    "looooo",
    "ldallolio-irt",
    "Krande",
    "ldallolio",
    "looooo",
    "ldallolio-irt",
    "Krande",
    "ldallolio",
    "looooo",
    "ldallolio-irt",
    "Krande",
    "ldallolio",
    "looooo",
    "ldallolio-irt",
    "Krande",
    "ldallolio",
    "looooo",
    "ldallolio-irt",
    "Krande",
    "ldallolio",
    "looooo",
    "ldallolio-irt"
   ]
  },
  "package": {
   "name": "libmed",
   "version": "4.1.1"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "sysroot_linux-64 2.17",
    "swig >=4.0.2",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "sysroot_linux-64 2.17",
    "swig >=4.0.2",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "sysroot_linux-64 2.17",
    "swig >=4.0.2",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "sysroot_linux-64 2.17",
    "swig >=4.0.2",
    "m2w64-gcc",
    "m2w64-gcc-fortran",
    "swig >=4.0.2",
    "m2w64-gcc",
    "m2w64-gcc-fortran",
    "swig >=4.0.2",
    "m2w64-gcc",
    "m2w64-gcc-fortran",
    "swig >=4.0.2",
    "m2w64-gcc",
    "m2w64-gcc-fortran",
    "swig >=4.0.2"
   ],
   "host": [
    "autoconf",
    "make",
    "hdf5 >=1.10.2,<1.11",
    "python",
    "zlib",
    "autoconf",
    "make",
    "hdf5 >=1.10.2,<1.11",
    "python",
    "zlib",
    "autoconf",
    "make",
    "hdf5 >=1.10.2,<1.11",
    "python",
    "zlib",
    "autoconf",
    "make",
    "hdf5 >=1.10.2,<1.11",
    "python",
    "zlib",
    "ninja",
    "cmake >=3.8",
    "hdf5 >=1.10.2,<1.11",
    "python",
    "zlib",
    "ninja",
    "cmake >=3.8",
    "hdf5 >=1.10.2,<1.11",
    "python",
    "zlib",
    "ninja",
    "cmake >=3.8",
    "hdf5 >=1.10.2,<1.11",
    "python",
    "zlib",
    "ninja",
    "cmake >=3.8",
    "hdf5 >=1.10.2,<1.11",
    "python",
    "zlib"
   ],
   "run": [
    "hdf5",
    "python",
    "python",
    "hdf5",
    "python",
    "python",
    "hdf5",
    "python",
    "python",
    "hdf5",
    "python",
    "python",
    "hdf5",
    "python",
    "python",
    "hdf5",
    "python",
    "python",
    "hdf5",
    "python",
    "python",
    "hdf5",
    "python",
    "python"
   ]
  },
  "source": {
   "fn": "libmed_4.1.1.tar.gz",
   "patches": null,
   "sha256": "fe1e80c836150ff27049b291fe2f9a11eda9ef9831311df9e39ba16a63c392a0",
   "url": "https://github.com/Krande/med-copy/archive/refs/tags/4.1.1.tar.gz"
  },
  "test": {
   "commands": null,
   "imports": [
    "med",
    "med",
    "med",
    "med",
    "med",
    "med",
    "med",
    "med"
   ]
  }
 },
 "name": "libmed",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "libmed"
  ]
 },
 "parsing_error": false,
 "platforms": [
  "linux_64",
  "win_64"
 ],
 "pr_info": {
  "__lazy_json__": "pr_info/libmed.json"
 },
 "raw_meta_yaml": "{% set name = \"libmed\" %}\n{% set version = \"4.1.1\" %}\n{% set sha256 = \"fe1e80c836150ff27049b291fe2f9a11eda9ef9831311df9e39ba16a63c392a0\" %}\n\n\npackage:\n  name: {{ name }}\n  version: {{ version }}\n\nsource:\n  fn: {{ name }}_{{ version }}.tar.gz\n # url: https://files.salome-platform.org/Salome/medfile/med-{{ version }}.tar.gz # blacklisting conda forge\n  url: https://github.com/Krande/med-copy/archive/refs/tags/{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n  patches:\n    - patches/med-4.1.1-check-hdf5-parallel.diff  # [unix]\n\nbuild:\n  number: 5\n#  string: aster_py{{ CONDA_PY }}_{{mpi}}_np{{CONDA_NPY}}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }} # [mpi != \"nompi\"]\n#  string: aster_py{{ CONDA_PY }}_seq_np{{CONDA_NPY}}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}     # [mpi == \"nompi\"]  \n  skip: true  # [py2k or osx or py>=312 or win]\n  script_env:\n    - PKG_DEBUG={{ environ.get('PKG_DEBUG', 'False') }}\n\nrequirements:\n  build:\n    - {{ compiler('c') }}                 # [not win]\n    - {{ compiler('cxx') }}               # [not win]\n    - {{ compiler('fortran') }}           # [not win]\n    - m2w64-gcc                           # [win]\n    - m2w64-gcc-fortran                   # [win]\n    - sysroot_linux-64 2.17               # [unix]\n    - swig >=4.0.2\n  host:\n    - autoconf                            # [unix]\n    - ninja                               # [win]\n    - make                                # [not win]\n    - cmake >=3.8                         # [win]\n    - hdf5 >=1.10.2,<1.11\n    - python {{ python }}\n    - zlib\n#    - {{ mpi }}                 # [mpi != \"nompi\"]        \n  run:\n    - {{ pin_compatible('hdf5', min_pin='x.x', max_pin='x.x') }}\n    - {{ pin_compatible('python', min_pin='x.x', max_pin='x.x') }}\n    - python {{ python }}\n#    - {{ mpi }}                 # [mpi != \"nompi\"]    \n\ntest:\n  imports:\n    - med\n  commands:\n    - test -f $CONDA_PREFIX/lib/libmed.so  # [unix]\n    - test -n \"$(nm -D $CONDA_PREFIX/lib/libmed.so | grep MEDlibraryNumVersion)  # [unix]\"\n\nabout:\n  home: https://www.salome-platform.org/user-section/about/med\n  license: LGPL-3.0-only\n  license_family: LGPL\n  license_file: LICENSE.txt\n  summary: 'MED : interoperable format for data interchange between mesh based solvers.'\n  description: |\n    The purpose of the MED module is to provide a standard for storing and recovering computer data associated to numerical meshes and fields, and to facilitate the exchange between codes and solvers.\n  doc_url: http://www.salome-platform.org/\n  dev_url: https://git.salome-platform.org/gitweb/?p=modules/med.git;a=summary\n\nextra:\n  recipe-maintainers:\n    - Krande\n    - ldallolio\n    - looooo\n    - ldallolio-irt\n",
 "req": {
  "__set__": true,
  "elements": [
   "autoconf",
   "c_compiler_stub",
   "cmake",
   "cxx_compiler_stub",
   "fortran_compiler_stub",
   "hdf5",
   "m2w64-gcc",
   "m2w64-gcc-fortran",
   "make",
   "ninja",
   "python",
   "swig",
   "sysroot_linux-64",
   "zlib"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "m2w64-gcc",
    "m2w64-gcc-fortran",
    "swig",
    "sysroot_linux-64"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "autoconf",
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "hdf5",
    "make",
    "ninja",
    "python",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "hdf5",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "fortran_compiler_stub",
    "m2w64-gcc",
    "m2w64-gcc-fortran",
    "swig >=4.0.2",
    "sysroot_linux-64 2.17"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "autoconf",
    "cmake >=3.8",
    "hdf5 >=1.10.2,<1.11",
    "make",
    "ninja",
    "python",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "hdf5",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://github.com/Krande/med-copy/archive/refs/tags/4.1.1.tar.gz",
 "version": "4.1.1",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/libmed.json"
 },
 "win_64_meta_yaml": {
  "about": {
   "description": "The purpose of the MED module is to provide a standard for storing and recovering computer data associated to numerical meshes and fields, and to facilitate the exchange between codes and solvers.\n",
   "dev_url": "https://git.salome-platform.org/gitweb/?p=modules/med.git;a=summary",
   "doc_url": "http://www.salome-platform.org/",
   "home": "https://www.salome-platform.org/user-section/about/med",
   "license": "LGPL-3.0-only",
   "license_family": "LGPL",
   "license_file": "LICENSE.txt",
   "summary": "MED : interoperable format for data interchange between mesh based solvers."
  },
  "build": {
   "number": "5",
   "script_env": [
    "PKG_DEBUG=False",
    "PKG_DEBUG=False",
    "PKG_DEBUG=False",
    "PKG_DEBUG=False"
   ],
   "skip": true
  },
  "extra": {
   "recipe-maintainers": [
    "Krande",
    "ldallolio",
    "looooo",
    "ldallolio-irt",
    "Krande",
    "ldallolio",
    "looooo",
    "ldallolio-irt",
    "Krande",
    "ldallolio",
    "looooo",
    "ldallolio-irt",
    "Krande",
    "ldallolio",
    "looooo",
    "ldallolio-irt"
   ]
  },
  "package": {
   "name": "libmed",
   "version": "4.1.1"
  },
  "requirements": {
   "build": [
    "m2w64-gcc",
    "m2w64-gcc-fortran",
    "swig >=4.0.2",
    "m2w64-gcc",
    "m2w64-gcc-fortran",
    "swig >=4.0.2",
    "m2w64-gcc",
    "m2w64-gcc-fortran",
    "swig >=4.0.2",
    "m2w64-gcc",
    "m2w64-gcc-fortran",
    "swig >=4.0.2"
   ],
   "host": [
    "ninja",
    "cmake >=3.8",
    "hdf5 >=1.10.2,<1.11",
    "python",
    "zlib",
    "ninja",
    "cmake >=3.8",
    "hdf5 >=1.10.2,<1.11",
    "python",
    "zlib",
    "ninja",
    "cmake >=3.8",
    "hdf5 >=1.10.2,<1.11",
    "python",
    "zlib",
    "ninja",
    "cmake >=3.8",
    "hdf5 >=1.10.2,<1.11",
    "python",
    "zlib"
   ],
   "run": [
    "hdf5",
    "python",
    "python",
    "hdf5",
    "python",
    "python",
    "hdf5",
    "python",
    "python",
    "hdf5",
    "python",
    "python"
   ]
  },
  "source": {
   "fn": "libmed_4.1.1.tar.gz",
   "patches": null,
   "sha256": "fe1e80c836150ff27049b291fe2f9a11eda9ef9831311df9e39ba16a63c392a0",
   "url": "https://github.com/Krande/med-copy/archive/refs/tags/4.1.1.tar.gz"
  },
  "test": {
   "commands": null,
   "imports": [
    "med",
    "med",
    "med",
    "med"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "m2w64-gcc",
    "m2w64-gcc-fortran",
    "swig"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cmake",
    "hdf5",
    "ninja",
    "python",
    "zlib"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "hdf5",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}