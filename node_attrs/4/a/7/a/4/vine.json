{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "vine",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "This is a special implementation of promises in that it can be used both\nfor promise of a value and lazy evaluation. The biggest upside for this\nis that everything in a promise can also be a promise, e.g. filters,\ncallbacks and errbacks can all be promises.\n",
   "dev_url": "https://github.com/celery/vine",
   "doc_url": "https://vine.readthedocs.io/",
   "home": "https://pypi.org/project/vine/",
   "license": "BSD-3-Clause",
   "license_file": "LICENSE",
   "summary": "Python promises"
  },
  "build": {
   "noarch": "python",
   "number": "1",
   "script": "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "anthchirp",
    "frol"
   ]
  },
  "package": {
   "name": "vine",
   "version": "5.0.0"
  },
  "requirements": {
   "host": [
    "pip",
    "python >=3.6",
    "setuptools"
   ],
   "run": [
    "python >=3.6"
   ]
  },
  "source": {
   "sha256": "7d3b1624a953da82ef63462013bbd271d3eb75751489f9807598e8f340bd637e",
   "url": "https://pypi.io/packages/source/v/vine/vine-5.0.0.tar.gz"
  },
  "test": {
   "commands": [
    "pip check"
   ],
   "imports": [
    "vine"
   ],
   "requires": [
    "pip"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "This is a special implementation of promises in that it can be used both\nfor promise of a value and lazy evaluation. The biggest upside for this\nis that everything in a promise can also be a promise, e.g. filters,\ncallbacks and errbacks can all be promises.\n",
   "dev_url": "https://github.com/celery/vine",
   "doc_url": "https://vine.readthedocs.io/",
   "home": "https://pypi.org/project/vine/",
   "license": "BSD-3-Clause",
   "license_file": "LICENSE",
   "summary": "Python promises"
  },
  "build": {
   "noarch": "python",
   "number": "1",
   "script": "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "anthchirp",
    "frol"
   ]
  },
  "package": {
   "name": "vine",
   "version": "5.0.0"
  },
  "requirements": {
   "host": [
    "pip",
    "python >=3.6",
    "setuptools"
   ],
   "run": [
    "python >=3.6"
   ]
  },
  "source": {
   "sha256": "7d3b1624a953da82ef63462013bbd271d3eb75751489f9807598e8f340bd637e",
   "url": "https://pypi.io/packages/source/v/vine/vine-5.0.0.tar.gz"
  },
  "test": {
   "commands": [
    "pip check"
   ],
   "imports": [
    "vine"
   ],
   "requires": [
    "pip"
   ]
  }
 },
 "name": "vine",
 "outputs_names": {
  "__set__": true,
  "elements": [
   "vine"
  ]
 },
 "parsing_error": false,
 "pr_info": {
  "__lazy_json__": "pr_info/vine.json"
 },
 "raw_meta_yaml": "{% set name = \"vine\" %}\n{% set version = \"5.0.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/vine-{{ version }}.tar.gz\n  sha256: 7d3b1624a953da82ef63462013bbd271d3eb75751489f9807598e8f340bd637e\n\nbuild:\n  number: 1\n  noarch: python\n  script: {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  host:\n    - pip\n    - python >=3.6\n    - setuptools\n  run:\n    - python >=3.6\n\ntest:\n  imports:\n    - vine\n  commands:\n    - pip check\n  requires:\n    - pip\n\nabout:\n  home: https://pypi.org/project/vine/\n  license: BSD-3-Clause\n  license_file: LICENSE\n  summary: Python promises\n  description: |\n    This is a special implementation of promises in that it can be used both\n    for promise of a value and lazy evaluation. The biggest upside for this\n    is that everything in a promise can also be a promise, e.g. filters,\n    callbacks and errbacks can all be promises.\n  doc_url: https://vine.readthedocs.io/\n  dev_url: https://github.com/celery/vine\n\nextra:\n  recipe-maintainers:\n    - anthchirp\n    - frol\n",
 "req": {
  "__set__": true,
  "elements": [
   "pip",
   "python",
   "setuptools"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python >=3.6",
    "setuptools"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "python >=3.6"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "url": "https://pypi.io/packages/source/v/vine/vine-5.0.0.tar.gz",
 "version": "5.0.0",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/vine.json"
 }
}