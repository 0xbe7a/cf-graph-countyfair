{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  },
  "provider": {
   "linux_aarch64": "default",
   "linux_ppc64le": "default"
  }
 },
 "feedstock_name": "numba",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "Numba is an Open Source NumPy-aware optimizing compiler for Python\nsponsored by Anaconda, Inc. It uses the remarkable LLVM compiler\ninfrastructure to compile Python syntax to machine code.\"\n",
   "dev_url": "https://github.com/numba/numba",
   "doc_url": "http://numba.pydata.org/",
   "home": "http://numba.pydata.org",
   "license": "BSD-2-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "NumPy aware dynamic Python compiler using LLVM"
  },
  "build": {
   "entry_points": [
    "numba = numba.misc.numba_entry:main",
    "numba = numba.misc.numba_entry:main",
    "numba = numba.misc.numba_entry:main",
    "numba = numba.misc.numba_entry:main"
   ],
   "ignore_run_exports": [
    "tbb",
    "tbb",
    "tbb",
    "tbb"
   ],
   "number": "1",
   "script": [
    "export CC=\"${CC} -pthread\"",
    "export CXX=\"${CXX} -pthread\"",
    "PYTHON -m pip install . --no-deps --ignore-installed -vvv",
    "export CC=\"${CC} -pthread\"",
    "export CXX=\"${CXX} -pthread\"",
    "PYTHON -m pip install . --no-deps --ignore-installed -vvv",
    "export CC=\"${CC} -pthread\"",
    "export CXX=\"${CXX} -pthread\"",
    "PYTHON -m pip install . --no-deps --ignore-installed -vvv",
    "export CC=\"${CC} -pthread\"",
    "export CXX=\"${CXX} -pthread\"",
    "PYTHON -m pip install . --no-deps --ignore-installed -vvv"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "souravsingh",
    "marcelotrevisani",
    "henryiii",
    "mbargull",
    "jakirkham",
    "step21",
    "souravsingh",
    "marcelotrevisani",
    "henryiii",
    "mbargull",
    "jakirkham",
    "step21",
    "souravsingh",
    "marcelotrevisani",
    "henryiii",
    "mbargull",
    "jakirkham",
    "step21",
    "souravsingh",
    "marcelotrevisani",
    "henryiii",
    "mbargull",
    "jakirkham",
    "step21"
   ]
  },
  "package": {
   "name": "numba",
   "version": "0.57.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "setuptools",
    "llvmlite 0.40.*",
    "numpy",
    "tbb-devel >=2021.6.0",
    "python",
    "pip",
    "setuptools",
    "llvmlite 0.40.*",
    "numpy",
    "tbb-devel >=2021.6.0",
    "python",
    "pip",
    "setuptools",
    "llvmlite 0.40.*",
    "numpy",
    "tbb-devel >=2021.6.0",
    "python",
    "pip",
    "setuptools",
    "llvmlite 0.40.*",
    "numpy",
    "tbb-devel >=2021.6.0"
   ],
   "run": [
    "python",
    "llvmlite",
    "numpy",
    "python",
    "llvmlite",
    "numpy",
    "python",
    "llvmlite",
    "numpy",
    "python",
    "llvmlite",
    "numpy"
   ],
   "run_constrained": [
    "tbb",
    "libopenblas !=0.3.6",
    "cuda-version >=10.2",
    "cudatoolkit >=10.2",
    "scipy >=1.0",
    "numpy >=1.21,!=1.22.0,!=1.22.1,!=1.22.2,<1.25",
    "cuda-python >=11.6",
    "tbb",
    "libopenblas !=0.3.6",
    "cuda-version >=10.2",
    "cudatoolkit >=10.2",
    "scipy >=1.0",
    "numpy >=1.21,!=1.22.0,!=1.22.1,!=1.22.2,<1.25",
    "cuda-python >=11.6",
    "tbb",
    "libopenblas !=0.3.6",
    "cuda-version >=10.2",
    "cudatoolkit >=10.2",
    "scipy >=1.0",
    "numpy >=1.21,!=1.22.0,!=1.22.1,!=1.22.2,<1.25",
    "cuda-python >=11.6",
    "tbb",
    "libopenblas !=0.3.6",
    "cuda-version >=10.2",
    "cudatoolkit >=10.2",
    "scipy >=1.0",
    "numpy >=1.21,!=1.22.0,!=1.22.1,!=1.22.2,<1.25",
    "cuda-python >=11.6"
   ]
  },
  "source": {
   "sha256": "2af6d81067a5bdc13960c6d2519dbabbf4d5d597cf75d640c5aeaefd48c6420a",
   "url": "https://pypi.io/packages/source/n/numba/numba-0.57.0.tar.gz"
  },
  "test": {
   "imports": [
    "numba",
    "numba.core.annotations",
    "numba.core.datamodel",
    "numba.core.rewrites",
    "numba.core.runtime",
    "numba.core.typeconv",
    "numba.core.typing",
    "numba.core.unsafe",
    "numba.cuda",
    "numba.cuda.cudadrv",
    "numba.cuda.kernels",
    "numba.cuda.simulator",
    "numba.cuda.simulator.cudadrv",
    "numba.cuda.tests",
    "numba.cuda.tests.cudadrv",
    "numba.cuda.tests.cudapy",
    "numba.cuda.tests.cudasim",
    "numba.cuda.tests.nocuda",
    "numba.experimental.jitclass",
    "numba.np.ufunc",
    "numba.scripts",
    "numba.testing",
    "numba.tests",
    "numba.tests.npyufunc",
    "numba",
    "numba.core.annotations",
    "numba.core.datamodel",
    "numba.core.rewrites",
    "numba.core.runtime",
    "numba.core.typeconv",
    "numba.core.typing",
    "numba.core.unsafe",
    "numba.cuda",
    "numba.cuda.cudadrv",
    "numba.cuda.kernels",
    "numba.cuda.simulator",
    "numba.cuda.simulator.cudadrv",
    "numba.cuda.tests",
    "numba.cuda.tests.cudadrv",
    "numba.cuda.tests.cudapy",
    "numba.cuda.tests.cudasim",
    "numba.cuda.tests.nocuda",
    "numba.experimental.jitclass",
    "numba.np.ufunc",
    "numba.scripts",
    "numba.testing",
    "numba.tests",
    "numba.tests.npyufunc",
    "numba",
    "numba.core.annotations",
    "numba.core.datamodel",
    "numba.core.rewrites",
    "numba.core.runtime",
    "numba.core.typeconv",
    "numba.core.typing",
    "numba.core.unsafe",
    "numba.cuda",
    "numba.cuda.cudadrv",
    "numba.cuda.kernels",
    "numba.cuda.simulator",
    "numba.cuda.simulator.cudadrv",
    "numba.cuda.tests",
    "numba.cuda.tests.cudadrv",
    "numba.cuda.tests.cudapy",
    "numba.cuda.tests.cudasim",
    "numba.cuda.tests.nocuda",
    "numba.experimental.jitclass",
    "numba.np.ufunc",
    "numba.scripts",
    "numba.testing",
    "numba.tests",
    "numba.tests.npyufunc",
    "numba",
    "numba.core.annotations",
    "numba.core.datamodel",
    "numba.core.rewrites",
    "numba.core.runtime",
    "numba.core.typeconv",
    "numba.core.typing",
    "numba.core.unsafe",
    "numba.cuda",
    "numba.cuda.cudadrv",
    "numba.cuda.kernels",
    "numba.cuda.simulator",
    "numba.cuda.simulator.cudadrv",
    "numba.cuda.tests",
    "numba.cuda.tests.cudadrv",
    "numba.cuda.tests.cudapy",
    "numba.cuda.tests.cudasim",
    "numba.cuda.tests.nocuda",
    "numba.experimental.jitclass",
    "numba.np.ufunc",
    "numba.scripts",
    "numba.testing",
    "numba.tests",
    "numba.tests.npyufunc"
   ],
   "requires": [
    "pip",
    "jinja2",
    "cffi",
    "scipy",
    "ipython",
    "setuptools",
    "tbb",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pip",
    "jinja2",
    "cffi",
    "scipy",
    "ipython",
    "setuptools",
    "tbb",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pip",
    "jinja2",
    "cffi",
    "scipy",
    "ipython",
    "setuptools",
    "tbb",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pip",
    "jinja2",
    "cffi",
    "scipy",
    "ipython",
    "setuptools",
    "tbb",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "llvmlite",
    "numpy",
    "pip",
    "python",
    "setuptools",
    "tbb-devel"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "llvmlite",
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cffi",
    "cxx_compiler_stub",
    "ipython",
    "jinja2",
    "pip",
    "scipy",
    "setuptools",
    "tbb"
   ]
  }
 },
 "linux_aarch64_meta_yaml": {
  "about": {
   "description": "Numba is an Open Source NumPy-aware optimizing compiler for Python\nsponsored by Anaconda, Inc. It uses the remarkable LLVM compiler\ninfrastructure to compile Python syntax to machine code.\"\n",
   "dev_url": "https://github.com/numba/numba",
   "doc_url": "http://numba.pydata.org/",
   "home": "http://numba.pydata.org",
   "license": "BSD-2-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "NumPy aware dynamic Python compiler using LLVM"
  },
  "build": {
   "entry_points": [
    "numba = numba.misc.numba_entry:main",
    "numba = numba.misc.numba_entry:main",
    "numba = numba.misc.numba_entry:main",
    "numba = numba.misc.numba_entry:main"
   ],
   "ignore_run_exports": [
    "tbb",
    "tbb",
    "tbb",
    "tbb"
   ],
   "number": "1",
   "script": [
    "export CC=\"${CC} -pthread\"",
    "export CXX=\"${CXX} -pthread\"",
    "PYTHON -m pip install . --no-deps --ignore-installed -vvv",
    "export CC=\"${CC} -pthread\"",
    "export CXX=\"${CXX} -pthread\"",
    "PYTHON -m pip install . --no-deps --ignore-installed -vvv",
    "export CC=\"${CC} -pthread\"",
    "export CXX=\"${CXX} -pthread\"",
    "PYTHON -m pip install . --no-deps --ignore-installed -vvv",
    "export CC=\"${CC} -pthread\"",
    "export CXX=\"${CXX} -pthread\"",
    "PYTHON -m pip install . --no-deps --ignore-installed -vvv"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "souravsingh",
    "marcelotrevisani",
    "henryiii",
    "mbargull",
    "jakirkham",
    "step21",
    "souravsingh",
    "marcelotrevisani",
    "henryiii",
    "mbargull",
    "jakirkham",
    "step21",
    "souravsingh",
    "marcelotrevisani",
    "henryiii",
    "mbargull",
    "jakirkham",
    "step21",
    "souravsingh",
    "marcelotrevisani",
    "henryiii",
    "mbargull",
    "jakirkham",
    "step21"
   ]
  },
  "package": {
   "name": "numba",
   "version": "0.57.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "setuptools",
    "llvmlite 0.40.*",
    "numpy",
    "tbb-devel >=2021.6.0",
    "python",
    "pip",
    "setuptools",
    "llvmlite 0.40.*",
    "numpy",
    "tbb-devel >=2021.6.0",
    "python",
    "pip",
    "setuptools",
    "llvmlite 0.40.*",
    "numpy",
    "tbb-devel >=2021.6.0",
    "python",
    "pip",
    "setuptools",
    "llvmlite 0.40.*",
    "numpy",
    "tbb-devel >=2021.6.0"
   ],
   "run": [
    "python",
    "llvmlite",
    "numpy",
    "python",
    "llvmlite",
    "numpy",
    "python",
    "llvmlite",
    "numpy",
    "python",
    "llvmlite",
    "numpy"
   ],
   "run_constrained": [
    "tbb",
    "cuda-version >=10.2",
    "cudatoolkit >=10.2",
    "scipy >=1.0",
    "numpy >=1.21,!=1.22.0,!=1.22.1,!=1.22.2,<1.25",
    "cuda-python >=11.6",
    "tbb",
    "cuda-version >=10.2",
    "cudatoolkit >=10.2",
    "scipy >=1.0",
    "numpy >=1.21,!=1.22.0,!=1.22.1,!=1.22.2,<1.25",
    "cuda-python >=11.6",
    "tbb",
    "cuda-version >=10.2",
    "cudatoolkit >=10.2",
    "scipy >=1.0",
    "numpy >=1.21,!=1.22.0,!=1.22.1,!=1.22.2,<1.25",
    "cuda-python >=11.6",
    "tbb",
    "cuda-version >=10.2",
    "cudatoolkit >=10.2",
    "scipy >=1.0",
    "numpy >=1.21,!=1.22.0,!=1.22.1,!=1.22.2,<1.25",
    "cuda-python >=11.6"
   ]
  },
  "source": {
   "sha256": "2af6d81067a5bdc13960c6d2519dbabbf4d5d597cf75d640c5aeaefd48c6420a",
   "url": "https://pypi.io/packages/source/n/numba/numba-0.57.0.tar.gz"
  },
  "test": {
   "imports": [
    "numba",
    "numba.core.annotations",
    "numba.core.datamodel",
    "numba.core.rewrites",
    "numba.core.runtime",
    "numba.core.typeconv",
    "numba.core.typing",
    "numba.core.unsafe",
    "numba.cuda",
    "numba.cuda.cudadrv",
    "numba.cuda.kernels",
    "numba.cuda.simulator",
    "numba.cuda.simulator.cudadrv",
    "numba.cuda.tests",
    "numba.cuda.tests.cudadrv",
    "numba.cuda.tests.cudapy",
    "numba.cuda.tests.cudasim",
    "numba.cuda.tests.nocuda",
    "numba.experimental.jitclass",
    "numba.np.ufunc",
    "numba.scripts",
    "numba.testing",
    "numba.tests",
    "numba.tests.npyufunc",
    "numba",
    "numba.core.annotations",
    "numba.core.datamodel",
    "numba.core.rewrites",
    "numba.core.runtime",
    "numba.core.typeconv",
    "numba.core.typing",
    "numba.core.unsafe",
    "numba.cuda",
    "numba.cuda.cudadrv",
    "numba.cuda.kernels",
    "numba.cuda.simulator",
    "numba.cuda.simulator.cudadrv",
    "numba.cuda.tests",
    "numba.cuda.tests.cudadrv",
    "numba.cuda.tests.cudapy",
    "numba.cuda.tests.cudasim",
    "numba.cuda.tests.nocuda",
    "numba.experimental.jitclass",
    "numba.np.ufunc",
    "numba.scripts",
    "numba.testing",
    "numba.tests",
    "numba.tests.npyufunc",
    "numba",
    "numba.core.annotations",
    "numba.core.datamodel",
    "numba.core.rewrites",
    "numba.core.runtime",
    "numba.core.typeconv",
    "numba.core.typing",
    "numba.core.unsafe",
    "numba.cuda",
    "numba.cuda.cudadrv",
    "numba.cuda.kernels",
    "numba.cuda.simulator",
    "numba.cuda.simulator.cudadrv",
    "numba.cuda.tests",
    "numba.cuda.tests.cudadrv",
    "numba.cuda.tests.cudapy",
    "numba.cuda.tests.cudasim",
    "numba.cuda.tests.nocuda",
    "numba.experimental.jitclass",
    "numba.np.ufunc",
    "numba.scripts",
    "numba.testing",
    "numba.tests",
    "numba.tests.npyufunc",
    "numba",
    "numba.core.annotations",
    "numba.core.datamodel",
    "numba.core.rewrites",
    "numba.core.runtime",
    "numba.core.typeconv",
    "numba.core.typing",
    "numba.core.unsafe",
    "numba.cuda",
    "numba.cuda.cudadrv",
    "numba.cuda.kernels",
    "numba.cuda.simulator",
    "numba.cuda.simulator.cudadrv",
    "numba.cuda.tests",
    "numba.cuda.tests.cudadrv",
    "numba.cuda.tests.cudapy",
    "numba.cuda.tests.cudasim",
    "numba.cuda.tests.nocuda",
    "numba.experimental.jitclass",
    "numba.np.ufunc",
    "numba.scripts",
    "numba.testing",
    "numba.tests",
    "numba.tests.npyufunc"
   ],
   "requires": [
    "pip",
    "jinja2",
    "cffi",
    "scipy",
    "ipython",
    "setuptools",
    "tbb",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pip",
    "jinja2",
    "cffi",
    "scipy",
    "ipython",
    "setuptools",
    "tbb",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pip",
    "jinja2",
    "cffi",
    "scipy",
    "ipython",
    "setuptools",
    "tbb",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pip",
    "jinja2",
    "cffi",
    "scipy",
    "ipython",
    "setuptools",
    "tbb",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  }
 },
 "linux_aarch64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "llvmlite",
    "numpy",
    "pip",
    "python",
    "setuptools",
    "tbb-devel"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "llvmlite",
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cffi",
    "cxx_compiler_stub",
    "ipython",
    "jinja2",
    "pip",
    "scipy",
    "setuptools",
    "tbb"
   ]
  }
 },
 "linux_ppc64le_meta_yaml": {
  "about": {
   "description": "Numba is an Open Source NumPy-aware optimizing compiler for Python\nsponsored by Anaconda, Inc. It uses the remarkable LLVM compiler\ninfrastructure to compile Python syntax to machine code.\"\n",
   "dev_url": "https://github.com/numba/numba",
   "doc_url": "http://numba.pydata.org/",
   "home": "http://numba.pydata.org",
   "license": "BSD-2-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "NumPy aware dynamic Python compiler using LLVM"
  },
  "build": {
   "entry_points": [
    "numba = numba.misc.numba_entry:main",
    "numba = numba.misc.numba_entry:main",
    "numba = numba.misc.numba_entry:main",
    "numba = numba.misc.numba_entry:main"
   ],
   "ignore_run_exports": [
    "tbb",
    "tbb",
    "tbb",
    "tbb"
   ],
   "number": "1",
   "script": [
    "export CC=\"${CC} -pthread\"",
    "export CXX=\"${CXX} -pthread\"",
    "PYTHON -m pip install . --no-deps --ignore-installed -vvv",
    "export CC=\"${CC} -pthread\"",
    "export CXX=\"${CXX} -pthread\"",
    "PYTHON -m pip install . --no-deps --ignore-installed -vvv",
    "export CC=\"${CC} -pthread\"",
    "export CXX=\"${CXX} -pthread\"",
    "PYTHON -m pip install . --no-deps --ignore-installed -vvv",
    "export CC=\"${CC} -pthread\"",
    "export CXX=\"${CXX} -pthread\"",
    "PYTHON -m pip install . --no-deps --ignore-installed -vvv"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "souravsingh",
    "marcelotrevisani",
    "henryiii",
    "mbargull",
    "jakirkham",
    "step21",
    "souravsingh",
    "marcelotrevisani",
    "henryiii",
    "mbargull",
    "jakirkham",
    "step21",
    "souravsingh",
    "marcelotrevisani",
    "henryiii",
    "mbargull",
    "jakirkham",
    "step21",
    "souravsingh",
    "marcelotrevisani",
    "henryiii",
    "mbargull",
    "jakirkham",
    "step21"
   ]
  },
  "package": {
   "name": "numba",
   "version": "0.57.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "setuptools",
    "llvmlite 0.40.*",
    "numpy",
    "tbb-devel >=2021.6.0",
    "python",
    "pip",
    "setuptools",
    "llvmlite 0.40.*",
    "numpy",
    "tbb-devel >=2021.6.0",
    "python",
    "pip",
    "setuptools",
    "llvmlite 0.40.*",
    "numpy",
    "tbb-devel >=2021.6.0",
    "python",
    "pip",
    "setuptools",
    "llvmlite 0.40.*",
    "numpy",
    "tbb-devel >=2021.6.0"
   ],
   "run": [
    "python",
    "llvmlite",
    "numpy",
    "python",
    "llvmlite",
    "numpy",
    "python",
    "llvmlite",
    "numpy",
    "python",
    "llvmlite",
    "numpy"
   ],
   "run_constrained": [
    "tbb",
    "cuda-version >=10.2",
    "cudatoolkit >=10.2",
    "scipy >=1.0",
    "numpy >=1.21,!=1.22.0,!=1.22.1,!=1.22.2,<1.25",
    "cuda-python >=11.6",
    "tbb",
    "cuda-version >=10.2",
    "cudatoolkit >=10.2",
    "scipy >=1.0",
    "numpy >=1.21,!=1.22.0,!=1.22.1,!=1.22.2,<1.25",
    "cuda-python >=11.6",
    "tbb",
    "cuda-version >=10.2",
    "cudatoolkit >=10.2",
    "scipy >=1.0",
    "numpy >=1.21,!=1.22.0,!=1.22.1,!=1.22.2,<1.25",
    "cuda-python >=11.6",
    "tbb",
    "cuda-version >=10.2",
    "cudatoolkit >=10.2",
    "scipy >=1.0",
    "numpy >=1.21,!=1.22.0,!=1.22.1,!=1.22.2,<1.25",
    "cuda-python >=11.6"
   ]
  },
  "source": {
   "sha256": "2af6d81067a5bdc13960c6d2519dbabbf4d5d597cf75d640c5aeaefd48c6420a",
   "url": "https://pypi.io/packages/source/n/numba/numba-0.57.0.tar.gz"
  },
  "test": {
   "imports": [
    "numba",
    "numba.core.annotations",
    "numba.core.datamodel",
    "numba.core.rewrites",
    "numba.core.runtime",
    "numba.core.typeconv",
    "numba.core.typing",
    "numba.core.unsafe",
    "numba.cuda",
    "numba.cuda.cudadrv",
    "numba.cuda.kernels",
    "numba.cuda.simulator",
    "numba.cuda.simulator.cudadrv",
    "numba.cuda.tests",
    "numba.cuda.tests.cudadrv",
    "numba.cuda.tests.cudapy",
    "numba.cuda.tests.cudasim",
    "numba.cuda.tests.nocuda",
    "numba.experimental.jitclass",
    "numba.np.ufunc",
    "numba.scripts",
    "numba.testing",
    "numba.tests",
    "numba.tests.npyufunc",
    "numba",
    "numba.core.annotations",
    "numba.core.datamodel",
    "numba.core.rewrites",
    "numba.core.runtime",
    "numba.core.typeconv",
    "numba.core.typing",
    "numba.core.unsafe",
    "numba.cuda",
    "numba.cuda.cudadrv",
    "numba.cuda.kernels",
    "numba.cuda.simulator",
    "numba.cuda.simulator.cudadrv",
    "numba.cuda.tests",
    "numba.cuda.tests.cudadrv",
    "numba.cuda.tests.cudapy",
    "numba.cuda.tests.cudasim",
    "numba.cuda.tests.nocuda",
    "numba.experimental.jitclass",
    "numba.np.ufunc",
    "numba.scripts",
    "numba.testing",
    "numba.tests",
    "numba.tests.npyufunc",
    "numba",
    "numba.core.annotations",
    "numba.core.datamodel",
    "numba.core.rewrites",
    "numba.core.runtime",
    "numba.core.typeconv",
    "numba.core.typing",
    "numba.core.unsafe",
    "numba.cuda",
    "numba.cuda.cudadrv",
    "numba.cuda.kernels",
    "numba.cuda.simulator",
    "numba.cuda.simulator.cudadrv",
    "numba.cuda.tests",
    "numba.cuda.tests.cudadrv",
    "numba.cuda.tests.cudapy",
    "numba.cuda.tests.cudasim",
    "numba.cuda.tests.nocuda",
    "numba.experimental.jitclass",
    "numba.np.ufunc",
    "numba.scripts",
    "numba.testing",
    "numba.tests",
    "numba.tests.npyufunc",
    "numba",
    "numba.core.annotations",
    "numba.core.datamodel",
    "numba.core.rewrites",
    "numba.core.runtime",
    "numba.core.typeconv",
    "numba.core.typing",
    "numba.core.unsafe",
    "numba.cuda",
    "numba.cuda.cudadrv",
    "numba.cuda.kernels",
    "numba.cuda.simulator",
    "numba.cuda.simulator.cudadrv",
    "numba.cuda.tests",
    "numba.cuda.tests.cudadrv",
    "numba.cuda.tests.cudapy",
    "numba.cuda.tests.cudasim",
    "numba.cuda.tests.nocuda",
    "numba.experimental.jitclass",
    "numba.np.ufunc",
    "numba.scripts",
    "numba.testing",
    "numba.tests",
    "numba.tests.npyufunc"
   ],
   "requires": [
    "pip",
    "jinja2",
    "cffi",
    "scipy",
    "ipython",
    "setuptools",
    "tbb",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pip",
    "jinja2",
    "cffi",
    "scipy",
    "ipython",
    "setuptools",
    "tbb",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pip",
    "jinja2",
    "cffi",
    "scipy",
    "ipython",
    "setuptools",
    "tbb",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pip",
    "jinja2",
    "cffi",
    "scipy",
    "ipython",
    "setuptools",
    "tbb",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  }
 },
 "linux_ppc64le_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "llvmlite",
    "numpy",
    "pip",
    "python",
    "setuptools",
    "tbb-devel"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "llvmlite",
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cffi",
    "cxx_compiler_stub",
    "ipython",
    "jinja2",
    "pip",
    "scipy",
    "setuptools",
    "tbb"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "Numba is an Open Source NumPy-aware optimizing compiler for Python\nsponsored by Anaconda, Inc. It uses the remarkable LLVM compiler\ninfrastructure to compile Python syntax to machine code.\"\n",
   "dev_url": "https://github.com/numba/numba",
   "doc_url": "http://numba.pydata.org/",
   "home": "http://numba.pydata.org",
   "license": "BSD-2-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "NumPy aware dynamic Python compiler using LLVM"
  },
  "build": {
   "entry_points": [
    "numba = numba.misc.numba_entry:main",
    "numba = numba.misc.numba_entry:main",
    "numba = numba.misc.numba_entry:main",
    "numba = numba.misc.numba_entry:main",
    "numba = numba.misc.numba_entry:main",
    "numba = numba.misc.numba_entry:main",
    "numba = numba.misc.numba_entry:main",
    "numba = numba.misc.numba_entry:main",
    "numba = numba.misc.numba_entry:main",
    "numba = numba.misc.numba_entry:main",
    "numba = numba.misc.numba_entry:main",
    "numba = numba.misc.numba_entry:main",
    "numba = numba.misc.numba_entry:main",
    "numba = numba.misc.numba_entry:main",
    "numba = numba.misc.numba_entry:main",
    "numba = numba.misc.numba_entry:main",
    "numba = numba.misc.numba_entry:main",
    "numba = numba.misc.numba_entry:main",
    "numba = numba.misc.numba_entry:main",
    "numba = numba.misc.numba_entry:main",
    "numba = numba.misc.numba_entry:main",
    "numba = numba.misc.numba_entry:main",
    "numba = numba.misc.numba_entry:main",
    "numba = numba.misc.numba_entry:main"
   ],
   "ignore_run_exports": [
    "tbb",
    "tbb",
    "tbb",
    "tbb",
    "tbb",
    "tbb",
    "tbb",
    "tbb",
    "tbb",
    "tbb",
    "tbb",
    "tbb",
    "tbb",
    "tbb",
    "tbb",
    "tbb",
    "tbb",
    "tbb",
    "tbb",
    "tbb",
    "tbb",
    "tbb",
    "tbb",
    "tbb"
   ],
   "number": "1",
   "script": [
    "export CC=\"${CC} -pthread\"",
    "export CXX=\"${CXX} -pthread\"",
    "PYTHON -m pip install . --no-deps --ignore-installed -vvv",
    "export CC=\"${CC} -pthread\"",
    "export CXX=\"${CXX} -pthread\"",
    "PYTHON -m pip install . --no-deps --ignore-installed -vvv",
    "export CC=\"${CC} -pthread\"",
    "export CXX=\"${CXX} -pthread\"",
    "PYTHON -m pip install . --no-deps --ignore-installed -vvv",
    "export CC=\"${CC} -pthread\"",
    "export CXX=\"${CXX} -pthread\"",
    "PYTHON -m pip install . --no-deps --ignore-installed -vvv",
    "export CC=\"${CC} -pthread\"",
    "export CXX=\"${CXX} -pthread\"",
    "PYTHON -m pip install . --no-deps --ignore-installed -vvv",
    "export CC=\"${CC} -pthread\"",
    "export CXX=\"${CXX} -pthread\"",
    "PYTHON -m pip install . --no-deps --ignore-installed -vvv",
    "export CC=\"${CC} -pthread\"",
    "export CXX=\"${CXX} -pthread\"",
    "PYTHON -m pip install . --no-deps --ignore-installed -vvv",
    "export CC=\"${CC} -pthread\"",
    "export CXX=\"${CXX} -pthread\"",
    "PYTHON -m pip install . --no-deps --ignore-installed -vvv",
    "export CC=\"${CC} -pthread\"",
    "export CXX=\"${CXX} -pthread\"",
    "PYTHON -m pip install . --no-deps --ignore-installed -vvv",
    "export CC=\"${CC} -pthread\"",
    "export CXX=\"${CXX} -pthread\"",
    "PYTHON -m pip install . --no-deps --ignore-installed -vvv",
    "export CC=\"${CC} -pthread\"",
    "export CXX=\"${CXX} -pthread\"",
    "PYTHON -m pip install . --no-deps --ignore-installed -vvv",
    "export CC=\"${CC} -pthread\"",
    "export CXX=\"${CXX} -pthread\"",
    "PYTHON -m pip install . --no-deps --ignore-installed -vvv",
    "PYTHON -m pip install . --no-deps --ignore-installed -vvv",
    "PYTHON -m pip install . --no-deps --ignore-installed -vvv",
    "PYTHON -m pip install . --no-deps --ignore-installed -vvv",
    "PYTHON -m pip install . --no-deps --ignore-installed -vvv",
    "PYTHON -m pip install . --no-deps --ignore-installed -vvv",
    "PYTHON -m pip install . --no-deps --ignore-installed -vvv",
    "PYTHON -m pip install . --no-deps --ignore-installed -vvv",
    "PYTHON -m pip install . --no-deps --ignore-installed -vvv",
    "PYTHON -m pip install . --no-deps --ignore-installed -vvv",
    "PYTHON -m pip install . --no-deps --ignore-installed -vvv",
    "PYTHON -m pip install . --no-deps --ignore-installed -vvv",
    "PYTHON -m pip install . --no-deps --ignore-installed -vvv"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "souravsingh",
    "marcelotrevisani",
    "henryiii",
    "mbargull",
    "jakirkham",
    "step21",
    "souravsingh",
    "marcelotrevisani",
    "henryiii",
    "mbargull",
    "jakirkham",
    "step21",
    "souravsingh",
    "marcelotrevisani",
    "henryiii",
    "mbargull",
    "jakirkham",
    "step21",
    "souravsingh",
    "marcelotrevisani",
    "henryiii",
    "mbargull",
    "jakirkham",
    "step21",
    "souravsingh",
    "marcelotrevisani",
    "henryiii",
    "mbargull",
    "jakirkham",
    "step21",
    "souravsingh",
    "marcelotrevisani",
    "henryiii",
    "mbargull",
    "jakirkham",
    "step21",
    "souravsingh",
    "marcelotrevisani",
    "henryiii",
    "mbargull",
    "jakirkham",
    "step21",
    "souravsingh",
    "marcelotrevisani",
    "henryiii",
    "mbargull",
    "jakirkham",
    "step21",
    "souravsingh",
    "marcelotrevisani",
    "henryiii",
    "mbargull",
    "jakirkham",
    "step21",
    "souravsingh",
    "marcelotrevisani",
    "henryiii",
    "mbargull",
    "jakirkham",
    "step21",
    "souravsingh",
    "marcelotrevisani",
    "henryiii",
    "mbargull",
    "jakirkham",
    "step21",
    "souravsingh",
    "marcelotrevisani",
    "henryiii",
    "mbargull",
    "jakirkham",
    "step21",
    "souravsingh",
    "marcelotrevisani",
    "henryiii",
    "mbargull",
    "jakirkham",
    "step21",
    "souravsingh",
    "marcelotrevisani",
    "henryiii",
    "mbargull",
    "jakirkham",
    "step21",
    "souravsingh",
    "marcelotrevisani",
    "henryiii",
    "mbargull",
    "jakirkham",
    "step21",
    "souravsingh",
    "marcelotrevisani",
    "henryiii",
    "mbargull",
    "jakirkham",
    "step21",
    "souravsingh",
    "marcelotrevisani",
    "henryiii",
    "mbargull",
    "jakirkham",
    "step21",
    "souravsingh",
    "marcelotrevisani",
    "henryiii",
    "mbargull",
    "jakirkham",
    "step21",
    "souravsingh",
    "marcelotrevisani",
    "henryiii",
    "mbargull",
    "jakirkham",
    "step21",
    "souravsingh",
    "marcelotrevisani",
    "henryiii",
    "mbargull",
    "jakirkham",
    "step21",
    "souravsingh",
    "marcelotrevisani",
    "henryiii",
    "mbargull",
    "jakirkham",
    "step21",
    "souravsingh",
    "marcelotrevisani",
    "henryiii",
    "mbargull",
    "jakirkham",
    "step21",
    "souravsingh",
    "marcelotrevisani",
    "henryiii",
    "mbargull",
    "jakirkham",
    "step21",
    "souravsingh",
    "marcelotrevisani",
    "henryiii",
    "mbargull",
    "jakirkham",
    "step21"
   ]
  },
  "package": {
   "name": "numba",
   "version": "0.57.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "llvm-openmp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "llvm-openmp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "llvm-openmp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "llvm-openmp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "llvm-openmp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "llvm-openmp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "llvm-openmp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "llvm-openmp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "setuptools",
    "llvmlite 0.40.*",
    "numpy",
    "tbb-devel >=2021.6.0",
    "python",
    "pip",
    "setuptools",
    "llvmlite 0.40.*",
    "numpy",
    "tbb-devel >=2021.6.0",
    "python",
    "pip",
    "setuptools",
    "llvmlite 0.40.*",
    "numpy",
    "tbb-devel >=2021.6.0",
    "python",
    "pip",
    "setuptools",
    "llvmlite 0.40.*",
    "numpy",
    "tbb-devel >=2021.6.0",
    "python",
    "pip",
    "setuptools",
    "llvmlite 0.40.*",
    "numpy",
    "tbb-devel >=2021.6.0",
    "python",
    "pip",
    "setuptools",
    "llvmlite 0.40.*",
    "numpy",
    "tbb-devel >=2021.6.0",
    "python",
    "pip",
    "setuptools",
    "llvmlite 0.40.*",
    "numpy",
    "tbb-devel >=2021.6.0",
    "python",
    "pip",
    "setuptools",
    "llvmlite 0.40.*",
    "numpy",
    "tbb-devel >=2021.6.0",
    "python",
    "pip",
    "setuptools",
    "llvmlite 0.40.*",
    "numpy",
    "tbb-devel >=2021.6.0",
    "python",
    "pip",
    "setuptools",
    "llvmlite 0.40.*",
    "numpy",
    "tbb-devel >=2021.6.0",
    "python",
    "pip",
    "setuptools",
    "llvmlite 0.40.*",
    "numpy",
    "tbb-devel >=2021.6.0",
    "python",
    "pip",
    "setuptools",
    "llvmlite 0.40.*",
    "numpy",
    "tbb-devel >=2021.6.0",
    "python",
    "pip",
    "setuptools",
    "llvmlite 0.40.*",
    "numpy",
    "tbb-devel >=2021.6.0",
    "python",
    "pip",
    "setuptools",
    "llvmlite 0.40.*",
    "numpy",
    "tbb-devel >=2021.6.0",
    "python",
    "pip",
    "setuptools",
    "llvmlite 0.40.*",
    "numpy",
    "tbb-devel >=2021.6.0",
    "python",
    "pip",
    "setuptools",
    "llvmlite 0.40.*",
    "numpy",
    "tbb-devel >=2021.6.0",
    "python",
    "pip",
    "setuptools",
    "llvmlite 0.40.*",
    "numpy",
    "tbb-devel >=2021.6.0",
    "python",
    "pip",
    "setuptools",
    "llvmlite 0.40.*",
    "numpy",
    "tbb-devel >=2021.6.0",
    "python",
    "pip",
    "setuptools",
    "llvmlite 0.40.*",
    "numpy",
    "tbb-devel >=2021.6.0",
    "python",
    "pip",
    "setuptools",
    "llvmlite 0.40.*",
    "numpy",
    "tbb-devel >=2021.6.0",
    "python",
    "pip",
    "setuptools",
    "llvmlite 0.40.*",
    "numpy",
    "tbb-devel >=2021.6.0",
    "python",
    "pip",
    "setuptools",
    "llvmlite 0.40.*",
    "numpy",
    "tbb-devel >=2021.6.0",
    "python",
    "pip",
    "setuptools",
    "llvmlite 0.40.*",
    "numpy",
    "tbb-devel >=2021.6.0",
    "python",
    "pip",
    "setuptools",
    "llvmlite 0.40.*",
    "numpy",
    "tbb-devel >=2021.6.0"
   ],
   "run": [
    "python",
    "llvmlite",
    "numpy",
    "python",
    "llvmlite",
    "numpy",
    "python",
    "llvmlite",
    "numpy",
    "python",
    "llvmlite",
    "numpy",
    "python",
    "llvmlite",
    "numpy",
    "python",
    "llvmlite",
    "numpy",
    "python",
    "llvmlite",
    "numpy",
    "python",
    "llvmlite",
    "numpy",
    "python",
    "llvmlite",
    "numpy",
    "python",
    "llvmlite",
    "numpy",
    "python",
    "llvmlite",
    "numpy",
    "python",
    "llvmlite",
    "numpy",
    "python",
    "llvmlite",
    "numpy",
    "python",
    "llvmlite",
    "numpy",
    "python",
    "llvmlite",
    "numpy",
    "python",
    "llvmlite",
    "numpy",
    "python",
    "llvmlite",
    "numpy",
    "python",
    "llvmlite",
    "numpy",
    "python",
    "llvmlite",
    "numpy",
    "python",
    "llvmlite",
    "numpy",
    "python",
    "llvmlite",
    "numpy",
    "python",
    "llvmlite",
    "numpy",
    "python",
    "llvmlite",
    "numpy",
    "python",
    "llvmlite",
    "numpy"
   ],
   "run_constrained": [
    "tbb",
    "libopenblas !=0.3.6",
    "cuda-version >=10.2",
    "cudatoolkit >=10.2",
    "scipy >=1.0",
    "numpy >=1.21,!=1.22.0,!=1.22.1,!=1.22.2,<1.25",
    "cuda-python >=11.6",
    "tbb",
    "libopenblas !=0.3.6",
    "cuda-version >=10.2",
    "cudatoolkit >=10.2",
    "scipy >=1.0",
    "numpy >=1.21,!=1.22.0,!=1.22.1,!=1.22.2,<1.25",
    "cuda-python >=11.6",
    "tbb",
    "libopenblas !=0.3.6",
    "cuda-version >=10.2",
    "cudatoolkit >=10.2",
    "scipy >=1.0",
    "numpy >=1.21,!=1.22.0,!=1.22.1,!=1.22.2,<1.25",
    "cuda-python >=11.6",
    "tbb",
    "libopenblas !=0.3.6",
    "cuda-version >=10.2",
    "cudatoolkit >=10.2",
    "scipy >=1.0",
    "numpy >=1.21,!=1.22.0,!=1.22.1,!=1.22.2,<1.25",
    "cuda-python >=11.6",
    "tbb",
    "cuda-version >=10.2",
    "cudatoolkit >=10.2",
    "scipy >=1.0",
    "numpy >=1.21,!=1.22.0,!=1.22.1,!=1.22.2,<1.25",
    "cuda-python >=11.6",
    "tbb",
    "cuda-version >=10.2",
    "cudatoolkit >=10.2",
    "scipy >=1.0",
    "numpy >=1.21,!=1.22.0,!=1.22.1,!=1.22.2,<1.25",
    "cuda-python >=11.6",
    "tbb",
    "cuda-version >=10.2",
    "cudatoolkit >=10.2",
    "scipy >=1.0",
    "numpy >=1.21,!=1.22.0,!=1.22.1,!=1.22.2,<1.25",
    "cuda-python >=11.6",
    "tbb",
    "cuda-version >=10.2",
    "cudatoolkit >=10.2",
    "scipy >=1.0",
    "numpy >=1.21,!=1.22.0,!=1.22.1,!=1.22.2,<1.25",
    "cuda-python >=11.6",
    "tbb",
    "cuda-version >=10.2",
    "cudatoolkit >=10.2",
    "scipy >=1.0",
    "numpy >=1.21,!=1.22.0,!=1.22.1,!=1.22.2,<1.25",
    "cuda-python >=11.6",
    "tbb",
    "cuda-version >=10.2",
    "cudatoolkit >=10.2",
    "scipy >=1.0",
    "numpy >=1.21,!=1.22.0,!=1.22.1,!=1.22.2,<1.25",
    "cuda-python >=11.6",
    "tbb",
    "cuda-version >=10.2",
    "cudatoolkit >=10.2",
    "scipy >=1.0",
    "numpy >=1.21,!=1.22.0,!=1.22.1,!=1.22.2,<1.25",
    "cuda-python >=11.6",
    "tbb",
    "cuda-version >=10.2",
    "cudatoolkit >=10.2",
    "scipy >=1.0",
    "numpy >=1.21,!=1.22.0,!=1.22.1,!=1.22.2,<1.25",
    "cuda-python >=11.6",
    "tbb",
    "libopenblas !=0.3.6",
    "cuda-version >=10.2",
    "cudatoolkit >=10.2",
    "scipy >=1.0",
    "numpy >=1.21,!=1.22.0,!=1.22.1,!=1.22.2,<1.25",
    "cuda-python >=11.6",
    "tbb",
    "libopenblas !=0.3.6",
    "cuda-version >=10.2",
    "cudatoolkit >=10.2",
    "scipy >=1.0",
    "numpy >=1.21,!=1.22.0,!=1.22.1,!=1.22.2,<1.25",
    "cuda-python >=11.6",
    "tbb",
    "libopenblas !=0.3.6",
    "cuda-version >=10.2",
    "cudatoolkit >=10.2",
    "scipy >=1.0",
    "numpy >=1.21,!=1.22.0,!=1.22.1,!=1.22.2,<1.25",
    "cuda-python >=11.6",
    "tbb",
    "libopenblas !=0.3.6",
    "cuda-version >=10.2",
    "cudatoolkit >=10.2",
    "scipy >=1.0",
    "numpy >=1.21,!=1.22.0,!=1.22.1,!=1.22.2,<1.25",
    "cuda-python >=11.6",
    "tbb",
    "libopenblas >=0.3.18, !=0.3.20",
    "cuda-version >=10.2",
    "cudatoolkit >=10.2",
    "scipy >=1.0",
    "numpy >=1.21,!=1.22.0,!=1.22.1,!=1.22.2,<1.25",
    "cuda-python >=11.6",
    "tbb",
    "libopenblas >=0.3.18, !=0.3.20",
    "cuda-version >=10.2",
    "cudatoolkit >=10.2",
    "scipy >=1.0",
    "numpy >=1.21,!=1.22.0,!=1.22.1,!=1.22.2,<1.25",
    "cuda-python >=11.6",
    "tbb",
    "libopenblas >=0.3.18, !=0.3.20",
    "cuda-version >=10.2",
    "cudatoolkit >=10.2",
    "scipy >=1.0",
    "numpy >=1.21,!=1.22.0,!=1.22.1,!=1.22.2,<1.25",
    "cuda-python >=11.6",
    "tbb",
    "libopenblas >=0.3.18, !=0.3.20",
    "cuda-version >=10.2",
    "cudatoolkit >=10.2",
    "scipy >=1.0",
    "numpy >=1.21,!=1.22.0,!=1.22.1,!=1.22.2,<1.25",
    "cuda-python >=11.6",
    "tbb",
    "libopenblas !=0.3.6",
    "cuda-version >=10.2",
    "cudatoolkit >=10.2",
    "scipy >=1.0",
    "numpy >=1.21,!=1.22.0,!=1.22.1,!=1.22.2,<1.25",
    "cuda-python >=11.6",
    "tbb",
    "libopenblas !=0.3.6",
    "cuda-version >=10.2",
    "cudatoolkit >=10.2",
    "scipy >=1.0",
    "numpy >=1.21,!=1.22.0,!=1.22.1,!=1.22.2,<1.25",
    "cuda-python >=11.6",
    "tbb",
    "libopenblas !=0.3.6",
    "cuda-version >=10.2",
    "cudatoolkit >=10.2",
    "scipy >=1.0",
    "numpy >=1.21,!=1.22.0,!=1.22.1,!=1.22.2,<1.25",
    "cuda-python >=11.6",
    "tbb",
    "libopenblas !=0.3.6",
    "cuda-version >=10.2",
    "cudatoolkit >=10.2",
    "scipy >=1.0",
    "numpy >=1.21,!=1.22.0,!=1.22.1,!=1.22.2,<1.25",
    "cuda-python >=11.6"
   ]
  },
  "source": {
   "sha256": "2af6d81067a5bdc13960c6d2519dbabbf4d5d597cf75d640c5aeaefd48c6420a",
   "url": "https://pypi.io/packages/source/n/numba/numba-0.57.0.tar.gz"
  },
  "test": {
   "imports": [
    "numba",
    "numba.core.annotations",
    "numba.core.datamodel",
    "numba.core.rewrites",
    "numba.core.runtime",
    "numba.core.typeconv",
    "numba.core.typing",
    "numba.core.unsafe",
    "numba.cuda",
    "numba.cuda.cudadrv",
    "numba.cuda.kernels",
    "numba.cuda.simulator",
    "numba.cuda.simulator.cudadrv",
    "numba.cuda.tests",
    "numba.cuda.tests.cudadrv",
    "numba.cuda.tests.cudapy",
    "numba.cuda.tests.cudasim",
    "numba.cuda.tests.nocuda",
    "numba.experimental.jitclass",
    "numba.np.ufunc",
    "numba.scripts",
    "numba.testing",
    "numba.tests",
    "numba.tests.npyufunc",
    "numba",
    "numba.core.annotations",
    "numba.core.datamodel",
    "numba.core.rewrites",
    "numba.core.runtime",
    "numba.core.typeconv",
    "numba.core.typing",
    "numba.core.unsafe",
    "numba.cuda",
    "numba.cuda.cudadrv",
    "numba.cuda.kernels",
    "numba.cuda.simulator",
    "numba.cuda.simulator.cudadrv",
    "numba.cuda.tests",
    "numba.cuda.tests.cudadrv",
    "numba.cuda.tests.cudapy",
    "numba.cuda.tests.cudasim",
    "numba.cuda.tests.nocuda",
    "numba.experimental.jitclass",
    "numba.np.ufunc",
    "numba.scripts",
    "numba.testing",
    "numba.tests",
    "numba.tests.npyufunc",
    "numba",
    "numba.core.annotations",
    "numba.core.datamodel",
    "numba.core.rewrites",
    "numba.core.runtime",
    "numba.core.typeconv",
    "numba.core.typing",
    "numba.core.unsafe",
    "numba.cuda",
    "numba.cuda.cudadrv",
    "numba.cuda.kernels",
    "numba.cuda.simulator",
    "numba.cuda.simulator.cudadrv",
    "numba.cuda.tests",
    "numba.cuda.tests.cudadrv",
    "numba.cuda.tests.cudapy",
    "numba.cuda.tests.cudasim",
    "numba.cuda.tests.nocuda",
    "numba.experimental.jitclass",
    "numba.np.ufunc",
    "numba.scripts",
    "numba.testing",
    "numba.tests",
    "numba.tests.npyufunc",
    "numba",
    "numba.core.annotations",
    "numba.core.datamodel",
    "numba.core.rewrites",
    "numba.core.runtime",
    "numba.core.typeconv",
    "numba.core.typing",
    "numba.core.unsafe",
    "numba.cuda",
    "numba.cuda.cudadrv",
    "numba.cuda.kernels",
    "numba.cuda.simulator",
    "numba.cuda.simulator.cudadrv",
    "numba.cuda.tests",
    "numba.cuda.tests.cudadrv",
    "numba.cuda.tests.cudapy",
    "numba.cuda.tests.cudasim",
    "numba.cuda.tests.nocuda",
    "numba.experimental.jitclass",
    "numba.np.ufunc",
    "numba.scripts",
    "numba.testing",
    "numba.tests",
    "numba.tests.npyufunc",
    "numba",
    "numba.core.annotations",
    "numba.core.datamodel",
    "numba.core.rewrites",
    "numba.core.runtime",
    "numba.core.typeconv",
    "numba.core.typing",
    "numba.core.unsafe",
    "numba.cuda",
    "numba.cuda.cudadrv",
    "numba.cuda.kernels",
    "numba.cuda.simulator",
    "numba.cuda.simulator.cudadrv",
    "numba.cuda.tests",
    "numba.cuda.tests.cudadrv",
    "numba.cuda.tests.cudapy",
    "numba.cuda.tests.cudasim",
    "numba.cuda.tests.nocuda",
    "numba.experimental.jitclass",
    "numba.np.ufunc",
    "numba.scripts",
    "numba.testing",
    "numba.tests",
    "numba.tests.npyufunc",
    "numba",
    "numba.core.annotations",
    "numba.core.datamodel",
    "numba.core.rewrites",
    "numba.core.runtime",
    "numba.core.typeconv",
    "numba.core.typing",
    "numba.core.unsafe",
    "numba.cuda",
    "numba.cuda.cudadrv",
    "numba.cuda.kernels",
    "numba.cuda.simulator",
    "numba.cuda.simulator.cudadrv",
    "numba.cuda.tests",
    "numba.cuda.tests.cudadrv",
    "numba.cuda.tests.cudapy",
    "numba.cuda.tests.cudasim",
    "numba.cuda.tests.nocuda",
    "numba.experimental.jitclass",
    "numba.np.ufunc",
    "numba.scripts",
    "numba.testing",
    "numba.tests",
    "numba.tests.npyufunc",
    "numba",
    "numba.core.annotations",
    "numba.core.datamodel",
    "numba.core.rewrites",
    "numba.core.runtime",
    "numba.core.typeconv",
    "numba.core.typing",
    "numba.core.unsafe",
    "numba.cuda",
    "numba.cuda.cudadrv",
    "numba.cuda.kernels",
    "numba.cuda.simulator",
    "numba.cuda.simulator.cudadrv",
    "numba.cuda.tests",
    "numba.cuda.tests.cudadrv",
    "numba.cuda.tests.cudapy",
    "numba.cuda.tests.cudasim",
    "numba.cuda.tests.nocuda",
    "numba.experimental.jitclass",
    "numba.np.ufunc",
    "numba.scripts",
    "numba.testing",
    "numba.tests",
    "numba.tests.npyufunc",
    "numba",
    "numba.core.annotations",
    "numba.core.datamodel",
    "numba.core.rewrites",
    "numba.core.runtime",
    "numba.core.typeconv",
    "numba.core.typing",
    "numba.core.unsafe",
    "numba.cuda",
    "numba.cuda.cudadrv",
    "numba.cuda.kernels",
    "numba.cuda.simulator",
    "numba.cuda.simulator.cudadrv",
    "numba.cuda.tests",
    "numba.cuda.tests.cudadrv",
    "numba.cuda.tests.cudapy",
    "numba.cuda.tests.cudasim",
    "numba.cuda.tests.nocuda",
    "numba.experimental.jitclass",
    "numba.np.ufunc",
    "numba.scripts",
    "numba.testing",
    "numba.tests",
    "numba.tests.npyufunc",
    "numba",
    "numba.core.annotations",
    "numba.core.datamodel",
    "numba.core.rewrites",
    "numba.core.runtime",
    "numba.core.typeconv",
    "numba.core.typing",
    "numba.core.unsafe",
    "numba.cuda",
    "numba.cuda.cudadrv",
    "numba.cuda.kernels",
    "numba.cuda.simulator",
    "numba.cuda.simulator.cudadrv",
    "numba.cuda.tests",
    "numba.cuda.tests.cudadrv",
    "numba.cuda.tests.cudapy",
    "numba.cuda.tests.cudasim",
    "numba.cuda.tests.nocuda",
    "numba.experimental.jitclass",
    "numba.np.ufunc",
    "numba.scripts",
    "numba.testing",
    "numba.tests",
    "numba.tests.npyufunc",
    "numba",
    "numba.core.annotations",
    "numba.core.datamodel",
    "numba.core.rewrites",
    "numba.core.runtime",
    "numba.core.typeconv",
    "numba.core.typing",
    "numba.core.unsafe",
    "numba.cuda",
    "numba.cuda.cudadrv",
    "numba.cuda.kernels",
    "numba.cuda.simulator",
    "numba.cuda.simulator.cudadrv",
    "numba.cuda.tests",
    "numba.cuda.tests.cudadrv",
    "numba.cuda.tests.cudapy",
    "numba.cuda.tests.cudasim",
    "numba.cuda.tests.nocuda",
    "numba.experimental.jitclass",
    "numba.np.ufunc",
    "numba.scripts",
    "numba.testing",
    "numba.tests",
    "numba.tests.npyufunc",
    "numba",
    "numba.core.annotations",
    "numba.core.datamodel",
    "numba.core.rewrites",
    "numba.core.runtime",
    "numba.core.typeconv",
    "numba.core.typing",
    "numba.core.unsafe",
    "numba.cuda",
    "numba.cuda.cudadrv",
    "numba.cuda.kernels",
    "numba.cuda.simulator",
    "numba.cuda.simulator.cudadrv",
    "numba.cuda.tests",
    "numba.cuda.tests.cudadrv",
    "numba.cuda.tests.cudapy",
    "numba.cuda.tests.cudasim",
    "numba.cuda.tests.nocuda",
    "numba.experimental.jitclass",
    "numba.np.ufunc",
    "numba.scripts",
    "numba.testing",
    "numba.tests",
    "numba.tests.npyufunc",
    "numba",
    "numba.core.annotations",
    "numba.core.datamodel",
    "numba.core.rewrites",
    "numba.core.runtime",
    "numba.core.typeconv",
    "numba.core.typing",
    "numba.core.unsafe",
    "numba.cuda",
    "numba.cuda.cudadrv",
    "numba.cuda.kernels",
    "numba.cuda.simulator",
    "numba.cuda.simulator.cudadrv",
    "numba.cuda.tests",
    "numba.cuda.tests.cudadrv",
    "numba.cuda.tests.cudapy",
    "numba.cuda.tests.cudasim",
    "numba.cuda.tests.nocuda",
    "numba.experimental.jitclass",
    "numba.np.ufunc",
    "numba.scripts",
    "numba.testing",
    "numba.tests",
    "numba.tests.npyufunc",
    "numba",
    "numba.core.annotations",
    "numba.core.datamodel",
    "numba.core.rewrites",
    "numba.core.runtime",
    "numba.core.typeconv",
    "numba.core.typing",
    "numba.core.unsafe",
    "numba.cuda",
    "numba.cuda.cudadrv",
    "numba.cuda.kernels",
    "numba.cuda.simulator",
    "numba.cuda.simulator.cudadrv",
    "numba.cuda.tests",
    "numba.cuda.tests.cudadrv",
    "numba.cuda.tests.cudapy",
    "numba.cuda.tests.cudasim",
    "numba.cuda.tests.nocuda",
    "numba.experimental.jitclass",
    "numba.np.ufunc",
    "numba.scripts",
    "numba.testing",
    "numba.tests",
    "numba.tests.npyufunc",
    "numba",
    "numba.core.annotations",
    "numba.core.datamodel",
    "numba.core.rewrites",
    "numba.core.runtime",
    "numba.core.typeconv",
    "numba.core.typing",
    "numba.core.unsafe",
    "numba.cuda",
    "numba.cuda.cudadrv",
    "numba.cuda.kernels",
    "numba.cuda.simulator",
    "numba.cuda.simulator.cudadrv",
    "numba.cuda.tests",
    "numba.cuda.tests.cudadrv",
    "numba.cuda.tests.cudapy",
    "numba.cuda.tests.cudasim",
    "numba.cuda.tests.nocuda",
    "numba.experimental.jitclass",
    "numba.np.ufunc",
    "numba.scripts",
    "numba.testing",
    "numba.tests",
    "numba.tests.npyufunc",
    "numba",
    "numba.core.annotations",
    "numba.core.datamodel",
    "numba.core.rewrites",
    "numba.core.runtime",
    "numba.core.typeconv",
    "numba.core.typing",
    "numba.core.unsafe",
    "numba.cuda",
    "numba.cuda.cudadrv",
    "numba.cuda.kernels",
    "numba.cuda.simulator",
    "numba.cuda.simulator.cudadrv",
    "numba.cuda.tests",
    "numba.cuda.tests.cudadrv",
    "numba.cuda.tests.cudapy",
    "numba.cuda.tests.cudasim",
    "numba.cuda.tests.nocuda",
    "numba.experimental.jitclass",
    "numba.np.ufunc",
    "numba.scripts",
    "numba.testing",
    "numba.tests",
    "numba.tests.npyufunc",
    "numba",
    "numba.core.annotations",
    "numba.core.datamodel",
    "numba.core.rewrites",
    "numba.core.runtime",
    "numba.core.typeconv",
    "numba.core.typing",
    "numba.core.unsafe",
    "numba.cuda",
    "numba.cuda.cudadrv",
    "numba.cuda.kernels",
    "numba.cuda.simulator",
    "numba.cuda.simulator.cudadrv",
    "numba.cuda.tests",
    "numba.cuda.tests.cudadrv",
    "numba.cuda.tests.cudapy",
    "numba.cuda.tests.cudasim",
    "numba.cuda.tests.nocuda",
    "numba.experimental.jitclass",
    "numba.np.ufunc",
    "numba.scripts",
    "numba.testing",
    "numba.tests",
    "numba.tests.npyufunc",
    "numba",
    "numba.core.annotations",
    "numba.core.datamodel",
    "numba.core.rewrites",
    "numba.core.runtime",
    "numba.core.typeconv",
    "numba.core.typing",
    "numba.core.unsafe",
    "numba.cuda",
    "numba.cuda.cudadrv",
    "numba.cuda.kernels",
    "numba.cuda.simulator",
    "numba.cuda.simulator.cudadrv",
    "numba.cuda.tests",
    "numba.cuda.tests.cudadrv",
    "numba.cuda.tests.cudapy",
    "numba.cuda.tests.cudasim",
    "numba.cuda.tests.nocuda",
    "numba.experimental.jitclass",
    "numba.np.ufunc",
    "numba.scripts",
    "numba.testing",
    "numba.tests",
    "numba.tests.npyufunc",
    "numba",
    "numba.core.annotations",
    "numba.core.datamodel",
    "numba.core.rewrites",
    "numba.core.runtime",
    "numba.core.typeconv",
    "numba.core.typing",
    "numba.core.unsafe",
    "numba.cuda",
    "numba.cuda.cudadrv",
    "numba.cuda.kernels",
    "numba.cuda.simulator",
    "numba.cuda.simulator.cudadrv",
    "numba.cuda.tests",
    "numba.cuda.tests.cudadrv",
    "numba.cuda.tests.cudapy",
    "numba.cuda.tests.cudasim",
    "numba.cuda.tests.nocuda",
    "numba.experimental.jitclass",
    "numba.np.ufunc",
    "numba.scripts",
    "numba.testing",
    "numba.tests",
    "numba.tests.npyufunc",
    "numba",
    "numba.core.annotations",
    "numba.core.datamodel",
    "numba.core.rewrites",
    "numba.core.runtime",
    "numba.core.typeconv",
    "numba.core.typing",
    "numba.core.unsafe",
    "numba.cuda",
    "numba.cuda.cudadrv",
    "numba.cuda.kernels",
    "numba.cuda.simulator",
    "numba.cuda.simulator.cudadrv",
    "numba.cuda.tests",
    "numba.cuda.tests.cudadrv",
    "numba.cuda.tests.cudapy",
    "numba.cuda.tests.cudasim",
    "numba.cuda.tests.nocuda",
    "numba.experimental.jitclass",
    "numba.np.ufunc",
    "numba.scripts",
    "numba.testing",
    "numba.tests",
    "numba.tests.npyufunc",
    "numba",
    "numba.core.annotations",
    "numba.core.datamodel",
    "numba.core.rewrites",
    "numba.core.runtime",
    "numba.core.typeconv",
    "numba.core.typing",
    "numba.core.unsafe",
    "numba.cuda",
    "numba.cuda.cudadrv",
    "numba.cuda.kernels",
    "numba.cuda.simulator",
    "numba.cuda.simulator.cudadrv",
    "numba.cuda.tests",
    "numba.cuda.tests.cudadrv",
    "numba.cuda.tests.cudapy",
    "numba.cuda.tests.cudasim",
    "numba.cuda.tests.nocuda",
    "numba.experimental.jitclass",
    "numba.np.ufunc",
    "numba.scripts",
    "numba.testing",
    "numba.tests",
    "numba.tests.npyufunc",
    "numba",
    "numba.core.annotations",
    "numba.core.datamodel",
    "numba.core.rewrites",
    "numba.core.runtime",
    "numba.core.typeconv",
    "numba.core.typing",
    "numba.core.unsafe",
    "numba.cuda",
    "numba.cuda.cudadrv",
    "numba.cuda.kernels",
    "numba.cuda.simulator",
    "numba.cuda.simulator.cudadrv",
    "numba.cuda.tests",
    "numba.cuda.tests.cudadrv",
    "numba.cuda.tests.cudapy",
    "numba.cuda.tests.cudasim",
    "numba.cuda.tests.nocuda",
    "numba.experimental.jitclass",
    "numba.np.ufunc",
    "numba.scripts",
    "numba.testing",
    "numba.tests",
    "numba.tests.npyufunc",
    "numba",
    "numba.core.annotations",
    "numba.core.datamodel",
    "numba.core.rewrites",
    "numba.core.runtime",
    "numba.core.typeconv",
    "numba.core.typing",
    "numba.core.unsafe",
    "numba.cuda",
    "numba.cuda.cudadrv",
    "numba.cuda.kernels",
    "numba.cuda.simulator",
    "numba.cuda.simulator.cudadrv",
    "numba.cuda.tests",
    "numba.cuda.tests.cudadrv",
    "numba.cuda.tests.cudapy",
    "numba.cuda.tests.cudasim",
    "numba.cuda.tests.nocuda",
    "numba.experimental.jitclass",
    "numba.np.ufunc",
    "numba.scripts",
    "numba.testing",
    "numba.tests",
    "numba.tests.npyufunc",
    "numba",
    "numba.core.annotations",
    "numba.core.datamodel",
    "numba.core.rewrites",
    "numba.core.runtime",
    "numba.core.typeconv",
    "numba.core.typing",
    "numba.core.unsafe",
    "numba.cuda",
    "numba.cuda.cudadrv",
    "numba.cuda.kernels",
    "numba.cuda.simulator",
    "numba.cuda.simulator.cudadrv",
    "numba.cuda.tests",
    "numba.cuda.tests.cudadrv",
    "numba.cuda.tests.cudapy",
    "numba.cuda.tests.cudasim",
    "numba.cuda.tests.nocuda",
    "numba.experimental.jitclass",
    "numba.np.ufunc",
    "numba.scripts",
    "numba.testing",
    "numba.tests",
    "numba.tests.npyufunc",
    "numba",
    "numba.core.annotations",
    "numba.core.datamodel",
    "numba.core.rewrites",
    "numba.core.runtime",
    "numba.core.typeconv",
    "numba.core.typing",
    "numba.core.unsafe",
    "numba.cuda",
    "numba.cuda.cudadrv",
    "numba.cuda.kernels",
    "numba.cuda.simulator",
    "numba.cuda.simulator.cudadrv",
    "numba.cuda.tests",
    "numba.cuda.tests.cudadrv",
    "numba.cuda.tests.cudapy",
    "numba.cuda.tests.cudasim",
    "numba.cuda.tests.nocuda",
    "numba.experimental.jitclass",
    "numba.np.ufunc",
    "numba.scripts",
    "numba.testing",
    "numba.tests",
    "numba.tests.npyufunc"
   ],
   "requires": [
    "pip",
    "jinja2",
    "cffi",
    "scipy",
    "ipython",
    "setuptools",
    "tbb",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pip",
    "jinja2",
    "cffi",
    "scipy",
    "ipython",
    "setuptools",
    "tbb",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pip",
    "jinja2",
    "cffi",
    "scipy",
    "ipython",
    "setuptools",
    "tbb",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pip",
    "jinja2",
    "cffi",
    "scipy",
    "ipython",
    "setuptools",
    "tbb",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pip",
    "jinja2",
    "cffi",
    "scipy",
    "ipython",
    "setuptools",
    "tbb",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pip",
    "jinja2",
    "cffi",
    "scipy",
    "ipython",
    "setuptools",
    "tbb",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pip",
    "jinja2",
    "cffi",
    "scipy",
    "ipython",
    "setuptools",
    "tbb",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pip",
    "jinja2",
    "cffi",
    "scipy",
    "ipython",
    "setuptools",
    "tbb",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pip",
    "jinja2",
    "cffi",
    "scipy",
    "ipython",
    "setuptools",
    "tbb",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pip",
    "jinja2",
    "cffi",
    "scipy",
    "ipython",
    "setuptools",
    "tbb",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pip",
    "jinja2",
    "cffi",
    "scipy",
    "ipython",
    "setuptools",
    "tbb",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pip",
    "jinja2",
    "cffi",
    "scipy",
    "ipython",
    "setuptools",
    "tbb",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pip",
    "jinja2",
    "cffi",
    "scipy",
    "ipython",
    "setuptools",
    "tbb",
    "llvm-openmp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pip",
    "jinja2",
    "cffi",
    "scipy",
    "ipython",
    "setuptools",
    "tbb",
    "llvm-openmp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pip",
    "jinja2",
    "cffi",
    "scipy",
    "ipython",
    "setuptools",
    "tbb",
    "llvm-openmp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pip",
    "jinja2",
    "cffi",
    "scipy",
    "ipython",
    "setuptools",
    "tbb",
    "llvm-openmp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pip",
    "jinja2",
    "cffi",
    "scipy",
    "ipython",
    "setuptools",
    "tbb",
    "llvm-openmp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pip",
    "jinja2",
    "cffi",
    "scipy",
    "ipython",
    "setuptools",
    "tbb",
    "llvm-openmp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pip",
    "jinja2",
    "cffi",
    "scipy",
    "ipython",
    "setuptools",
    "tbb",
    "llvm-openmp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pip",
    "jinja2",
    "cffi",
    "scipy",
    "ipython",
    "setuptools",
    "tbb",
    "llvm-openmp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pip",
    "jinja2",
    "cffi",
    "scipy",
    "ipython",
    "setuptools",
    "tbb",
    "pip",
    "jinja2",
    "cffi",
    "scipy",
    "ipython",
    "setuptools",
    "tbb",
    "pip",
    "jinja2",
    "cffi",
    "scipy",
    "ipython",
    "setuptools",
    "tbb",
    "pip",
    "jinja2",
    "cffi",
    "scipy",
    "ipython",
    "setuptools",
    "tbb"
   ]
  }
 },
 "name": "numba",
 "osx_64_meta_yaml": {
  "about": {
   "description": "Numba is an Open Source NumPy-aware optimizing compiler for Python\nsponsored by Anaconda, Inc. It uses the remarkable LLVM compiler\ninfrastructure to compile Python syntax to machine code.\"\n",
   "dev_url": "https://github.com/numba/numba",
   "doc_url": "http://numba.pydata.org/",
   "home": "http://numba.pydata.org",
   "license": "BSD-2-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "NumPy aware dynamic Python compiler using LLVM"
  },
  "build": {
   "entry_points": [
    "numba = numba.misc.numba_entry:main",
    "numba = numba.misc.numba_entry:main",
    "numba = numba.misc.numba_entry:main",
    "numba = numba.misc.numba_entry:main"
   ],
   "ignore_run_exports": [
    "tbb",
    "tbb",
    "tbb",
    "tbb"
   ],
   "number": "1",
   "script": [
    "PYTHON -m pip install . --no-deps --ignore-installed -vvv",
    "PYTHON -m pip install . --no-deps --ignore-installed -vvv",
    "PYTHON -m pip install . --no-deps --ignore-installed -vvv",
    "PYTHON -m pip install . --no-deps --ignore-installed -vvv"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "souravsingh",
    "marcelotrevisani",
    "henryiii",
    "mbargull",
    "jakirkham",
    "step21",
    "souravsingh",
    "marcelotrevisani",
    "henryiii",
    "mbargull",
    "jakirkham",
    "step21",
    "souravsingh",
    "marcelotrevisani",
    "henryiii",
    "mbargull",
    "jakirkham",
    "step21",
    "souravsingh",
    "marcelotrevisani",
    "henryiii",
    "mbargull",
    "jakirkham",
    "step21"
   ]
  },
  "package": {
   "name": "numba",
   "version": "0.57.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "llvm-openmp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "llvm-openmp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "llvm-openmp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "llvm-openmp"
   ],
   "host": [
    "python",
    "pip",
    "setuptools",
    "llvmlite 0.40.*",
    "numpy",
    "tbb-devel >=2021.6.0",
    "python",
    "pip",
    "setuptools",
    "llvmlite 0.40.*",
    "numpy",
    "tbb-devel >=2021.6.0",
    "python",
    "pip",
    "setuptools",
    "llvmlite 0.40.*",
    "numpy",
    "tbb-devel >=2021.6.0",
    "python",
    "pip",
    "setuptools",
    "llvmlite 0.40.*",
    "numpy",
    "tbb-devel >=2021.6.0"
   ],
   "run": [
    "python",
    "llvmlite",
    "numpy",
    "python",
    "llvmlite",
    "numpy",
    "python",
    "llvmlite",
    "numpy",
    "python",
    "llvmlite",
    "numpy"
   ],
   "run_constrained": [
    "tbb",
    "libopenblas !=0.3.6",
    "cuda-version >=10.2",
    "cudatoolkit >=10.2",
    "scipy >=1.0",
    "numpy >=1.21,!=1.22.0,!=1.22.1,!=1.22.2,<1.25",
    "cuda-python >=11.6",
    "tbb",
    "libopenblas !=0.3.6",
    "cuda-version >=10.2",
    "cudatoolkit >=10.2",
    "scipy >=1.0",
    "numpy >=1.21,!=1.22.0,!=1.22.1,!=1.22.2,<1.25",
    "cuda-python >=11.6",
    "tbb",
    "libopenblas !=0.3.6",
    "cuda-version >=10.2",
    "cudatoolkit >=10.2",
    "scipy >=1.0",
    "numpy >=1.21,!=1.22.0,!=1.22.1,!=1.22.2,<1.25",
    "cuda-python >=11.6",
    "tbb",
    "libopenblas !=0.3.6",
    "cuda-version >=10.2",
    "cudatoolkit >=10.2",
    "scipy >=1.0",
    "numpy >=1.21,!=1.22.0,!=1.22.1,!=1.22.2,<1.25",
    "cuda-python >=11.6"
   ]
  },
  "source": {
   "sha256": "2af6d81067a5bdc13960c6d2519dbabbf4d5d597cf75d640c5aeaefd48c6420a",
   "url": "https://pypi.io/packages/source/n/numba/numba-0.57.0.tar.gz"
  },
  "test": {
   "imports": [
    "numba",
    "numba.core.annotations",
    "numba.core.datamodel",
    "numba.core.rewrites",
    "numba.core.runtime",
    "numba.core.typeconv",
    "numba.core.typing",
    "numba.core.unsafe",
    "numba.cuda",
    "numba.cuda.cudadrv",
    "numba.cuda.kernels",
    "numba.cuda.simulator",
    "numba.cuda.simulator.cudadrv",
    "numba.cuda.tests",
    "numba.cuda.tests.cudadrv",
    "numba.cuda.tests.cudapy",
    "numba.cuda.tests.cudasim",
    "numba.cuda.tests.nocuda",
    "numba.experimental.jitclass",
    "numba.np.ufunc",
    "numba.scripts",
    "numba.testing",
    "numba.tests",
    "numba.tests.npyufunc",
    "numba",
    "numba.core.annotations",
    "numba.core.datamodel",
    "numba.core.rewrites",
    "numba.core.runtime",
    "numba.core.typeconv",
    "numba.core.typing",
    "numba.core.unsafe",
    "numba.cuda",
    "numba.cuda.cudadrv",
    "numba.cuda.kernels",
    "numba.cuda.simulator",
    "numba.cuda.simulator.cudadrv",
    "numba.cuda.tests",
    "numba.cuda.tests.cudadrv",
    "numba.cuda.tests.cudapy",
    "numba.cuda.tests.cudasim",
    "numba.cuda.tests.nocuda",
    "numba.experimental.jitclass",
    "numba.np.ufunc",
    "numba.scripts",
    "numba.testing",
    "numba.tests",
    "numba.tests.npyufunc",
    "numba",
    "numba.core.annotations",
    "numba.core.datamodel",
    "numba.core.rewrites",
    "numba.core.runtime",
    "numba.core.typeconv",
    "numba.core.typing",
    "numba.core.unsafe",
    "numba.cuda",
    "numba.cuda.cudadrv",
    "numba.cuda.kernels",
    "numba.cuda.simulator",
    "numba.cuda.simulator.cudadrv",
    "numba.cuda.tests",
    "numba.cuda.tests.cudadrv",
    "numba.cuda.tests.cudapy",
    "numba.cuda.tests.cudasim",
    "numba.cuda.tests.nocuda",
    "numba.experimental.jitclass",
    "numba.np.ufunc",
    "numba.scripts",
    "numba.testing",
    "numba.tests",
    "numba.tests.npyufunc",
    "numba",
    "numba.core.annotations",
    "numba.core.datamodel",
    "numba.core.rewrites",
    "numba.core.runtime",
    "numba.core.typeconv",
    "numba.core.typing",
    "numba.core.unsafe",
    "numba.cuda",
    "numba.cuda.cudadrv",
    "numba.cuda.kernels",
    "numba.cuda.simulator",
    "numba.cuda.simulator.cudadrv",
    "numba.cuda.tests",
    "numba.cuda.tests.cudadrv",
    "numba.cuda.tests.cudapy",
    "numba.cuda.tests.cudasim",
    "numba.cuda.tests.nocuda",
    "numba.experimental.jitclass",
    "numba.np.ufunc",
    "numba.scripts",
    "numba.testing",
    "numba.tests",
    "numba.tests.npyufunc"
   ],
   "requires": [
    "pip",
    "jinja2",
    "cffi",
    "scipy",
    "ipython",
    "setuptools",
    "tbb",
    "llvm-openmp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pip",
    "jinja2",
    "cffi",
    "scipy",
    "ipython",
    "setuptools",
    "tbb",
    "llvm-openmp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pip",
    "jinja2",
    "cffi",
    "scipy",
    "ipython",
    "setuptools",
    "tbb",
    "llvm-openmp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pip",
    "jinja2",
    "cffi",
    "scipy",
    "ipython",
    "setuptools",
    "tbb",
    "llvm-openmp",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "llvm-openmp"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "llvmlite",
    "numpy",
    "pip",
    "python",
    "setuptools",
    "tbb-devel"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "llvmlite",
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cffi",
    "cxx_compiler_stub",
    "ipython",
    "jinja2",
    "llvm-openmp",
    "pip",
    "scipy",
    "setuptools",
    "tbb"
   ]
  }
 },
 "osx_arm64_meta_yaml": {
  "about": {
   "description": "Numba is an Open Source NumPy-aware optimizing compiler for Python\nsponsored by Anaconda, Inc. It uses the remarkable LLVM compiler\ninfrastructure to compile Python syntax to machine code.\"\n",
   "dev_url": "https://github.com/numba/numba",
   "doc_url": "http://numba.pydata.org/",
   "home": "http://numba.pydata.org",
   "license": "BSD-2-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "NumPy aware dynamic Python compiler using LLVM"
  },
  "build": {
   "entry_points": [
    "numba = numba.misc.numba_entry:main",
    "numba = numba.misc.numba_entry:main",
    "numba = numba.misc.numba_entry:main",
    "numba = numba.misc.numba_entry:main"
   ],
   "ignore_run_exports": [
    "tbb",
    "tbb",
    "tbb",
    "tbb"
   ],
   "number": "1",
   "script": [
    "PYTHON -m pip install . --no-deps --ignore-installed -vvv",
    "PYTHON -m pip install . --no-deps --ignore-installed -vvv",
    "PYTHON -m pip install . --no-deps --ignore-installed -vvv",
    "PYTHON -m pip install . --no-deps --ignore-installed -vvv"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "souravsingh",
    "marcelotrevisani",
    "henryiii",
    "mbargull",
    "jakirkham",
    "step21",
    "souravsingh",
    "marcelotrevisani",
    "henryiii",
    "mbargull",
    "jakirkham",
    "step21",
    "souravsingh",
    "marcelotrevisani",
    "henryiii",
    "mbargull",
    "jakirkham",
    "step21",
    "souravsingh",
    "marcelotrevisani",
    "henryiii",
    "mbargull",
    "jakirkham",
    "step21"
   ]
  },
  "package": {
   "name": "numba",
   "version": "0.57.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "llvm-openmp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "llvm-openmp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "llvm-openmp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "llvm-openmp"
   ],
   "host": [
    "python",
    "pip",
    "setuptools",
    "llvmlite 0.40.*",
    "numpy",
    "tbb-devel >=2021.6.0",
    "python",
    "pip",
    "setuptools",
    "llvmlite 0.40.*",
    "numpy",
    "tbb-devel >=2021.6.0",
    "python",
    "pip",
    "setuptools",
    "llvmlite 0.40.*",
    "numpy",
    "tbb-devel >=2021.6.0",
    "python",
    "pip",
    "setuptools",
    "llvmlite 0.40.*",
    "numpy",
    "tbb-devel >=2021.6.0"
   ],
   "run": [
    "python",
    "llvmlite",
    "numpy",
    "python",
    "llvmlite",
    "numpy",
    "python",
    "llvmlite",
    "numpy",
    "python",
    "llvmlite",
    "numpy"
   ],
   "run_constrained": [
    "tbb",
    "libopenblas >=0.3.18, !=0.3.20",
    "cuda-version >=10.2",
    "cudatoolkit >=10.2",
    "scipy >=1.0",
    "numpy >=1.21,!=1.22.0,!=1.22.1,!=1.22.2,<1.25",
    "cuda-python >=11.6",
    "tbb",
    "libopenblas >=0.3.18, !=0.3.20",
    "cuda-version >=10.2",
    "cudatoolkit >=10.2",
    "scipy >=1.0",
    "numpy >=1.21,!=1.22.0,!=1.22.1,!=1.22.2,<1.25",
    "cuda-python >=11.6",
    "tbb",
    "libopenblas >=0.3.18, !=0.3.20",
    "cuda-version >=10.2",
    "cudatoolkit >=10.2",
    "scipy >=1.0",
    "numpy >=1.21,!=1.22.0,!=1.22.1,!=1.22.2,<1.25",
    "cuda-python >=11.6",
    "tbb",
    "libopenblas >=0.3.18, !=0.3.20",
    "cuda-version >=10.2",
    "cudatoolkit >=10.2",
    "scipy >=1.0",
    "numpy >=1.21,!=1.22.0,!=1.22.1,!=1.22.2,<1.25",
    "cuda-python >=11.6"
   ]
  },
  "source": {
   "sha256": "2af6d81067a5bdc13960c6d2519dbabbf4d5d597cf75d640c5aeaefd48c6420a",
   "url": "https://pypi.io/packages/source/n/numba/numba-0.57.0.tar.gz"
  },
  "test": {
   "imports": [
    "numba",
    "numba.core.annotations",
    "numba.core.datamodel",
    "numba.core.rewrites",
    "numba.core.runtime",
    "numba.core.typeconv",
    "numba.core.typing",
    "numba.core.unsafe",
    "numba.cuda",
    "numba.cuda.cudadrv",
    "numba.cuda.kernels",
    "numba.cuda.simulator",
    "numba.cuda.simulator.cudadrv",
    "numba.cuda.tests",
    "numba.cuda.tests.cudadrv",
    "numba.cuda.tests.cudapy",
    "numba.cuda.tests.cudasim",
    "numba.cuda.tests.nocuda",
    "numba.experimental.jitclass",
    "numba.np.ufunc",
    "numba.scripts",
    "numba.testing",
    "numba.tests",
    "numba.tests.npyufunc",
    "numba",
    "numba.core.annotations",
    "numba.core.datamodel",
    "numba.core.rewrites",
    "numba.core.runtime",
    "numba.core.typeconv",
    "numba.core.typing",
    "numba.core.unsafe",
    "numba.cuda",
    "numba.cuda.cudadrv",
    "numba.cuda.kernels",
    "numba.cuda.simulator",
    "numba.cuda.simulator.cudadrv",
    "numba.cuda.tests",
    "numba.cuda.tests.cudadrv",
    "numba.cuda.tests.cudapy",
    "numba.cuda.tests.cudasim",
    "numba.cuda.tests.nocuda",
    "numba.experimental.jitclass",
    "numba.np.ufunc",
    "numba.scripts",
    "numba.testing",
    "numba.tests",
    "numba.tests.npyufunc",
    "numba",
    "numba.core.annotations",
    "numba.core.datamodel",
    "numba.core.rewrites",
    "numba.core.runtime",
    "numba.core.typeconv",
    "numba.core.typing",
    "numba.core.unsafe",
    "numba.cuda",
    "numba.cuda.cudadrv",
    "numba.cuda.kernels",
    "numba.cuda.simulator",
    "numba.cuda.simulator.cudadrv",
    "numba.cuda.tests",
    "numba.cuda.tests.cudadrv",
    "numba.cuda.tests.cudapy",
    "numba.cuda.tests.cudasim",
    "numba.cuda.tests.nocuda",
    "numba.experimental.jitclass",
    "numba.np.ufunc",
    "numba.scripts",
    "numba.testing",
    "numba.tests",
    "numba.tests.npyufunc",
    "numba",
    "numba.core.annotations",
    "numba.core.datamodel",
    "numba.core.rewrites",
    "numba.core.runtime",
    "numba.core.typeconv",
    "numba.core.typing",
    "numba.core.unsafe",
    "numba.cuda",
    "numba.cuda.cudadrv",
    "numba.cuda.kernels",
    "numba.cuda.simulator",
    "numba.cuda.simulator.cudadrv",
    "numba.cuda.tests",
    "numba.cuda.tests.cudadrv",
    "numba.cuda.tests.cudapy",
    "numba.cuda.tests.cudasim",
    "numba.cuda.tests.nocuda",
    "numba.experimental.jitclass",
    "numba.np.ufunc",
    "numba.scripts",
    "numba.testing",
    "numba.tests",
    "numba.tests.npyufunc"
   ],
   "requires": [
    "pip",
    "jinja2",
    "cffi",
    "scipy",
    "ipython",
    "setuptools",
    "tbb",
    "llvm-openmp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pip",
    "jinja2",
    "cffi",
    "scipy",
    "ipython",
    "setuptools",
    "tbb",
    "llvm-openmp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pip",
    "jinja2",
    "cffi",
    "scipy",
    "ipython",
    "setuptools",
    "tbb",
    "llvm-openmp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "pip",
    "jinja2",
    "cffi",
    "scipy",
    "ipython",
    "setuptools",
    "tbb",
    "llvm-openmp",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  }
 },
 "osx_arm64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "llvm-openmp"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "llvmlite",
    "numpy",
    "pip",
    "python",
    "setuptools",
    "tbb-devel"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "llvmlite",
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cffi",
    "cxx_compiler_stub",
    "ipython",
    "jinja2",
    "llvm-openmp",
    "pip",
    "scipy",
    "setuptools",
    "tbb"
   ]
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "numba"
  ]
 },
 "parsing_error": false,
 "platforms": [
  "osx_64",
  "linux_ppc64le",
  "linux_aarch64",
  "osx_arm64",
  "win_64",
  "linux_64"
 ],
 "pr_info": {
  "__lazy_json__": "pr_info/numba.json"
 },
 "raw_meta_yaml": "{% set name = \"numba\" %}\n{% set version = \"0.57.0\" %}\n{% set sha256 = \"2af6d81067a5bdc13960c6d2519dbabbf4d5d597cf75d640c5aeaefd48c6420a\" %}\n\npackage:\n  name: numba\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  # url: https://github.com/numba/numba/archive/{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 1\n  entry_points:\n    - numba = numba.misc.numba_entry:main\n  script:\n    - export CC=\"${CC} -pthread\"  # [linux]\n    - export CXX=\"${CXX} -pthread\"  # [linux]\n    - {{ PYTHON }} -m pip install . --no-deps --ignore-installed -vvv\n  ignore_run_exports:\n    # tbb-devel triggers hard dependency on tbb, this is not the case.\n    - tbb\n  skip: true  # [python_impl == 'pypy']\n  skip: true  # [py<38]\n\nrequirements:\n  build:\n    - python                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n    - numpy                                  # [build_platform != target_platform]\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    # llvm is needed for the headers\n    - llvm-openmp              # [osx]\n\n  host:\n    - python\n    - pip\n    - setuptools\n    - llvmlite 0.40.*\n    - numpy\n    - tbb-devel >=2021.6.0\n\n  run:\n    - python\n    - {{ pin_compatible('llvmlite', max_pin='x.x') }}\n    - {{ pin_compatible('numpy') }}\n    - importlib-metadata  # [py < 39]\n\n  run_constrained:\n    - {{ pin_compatible('tbb') }}\n    # avoid confusion from openblas bugs\n    - libopenblas !=0.3.6             # [x86_64]\n    - libopenblas >=0.3.18, !=0.3.20  # [arm64]\n    # CUDA 10.2 or later is required for CUDA support\n    - cuda-version >=10.2\n    - cudatoolkit >=10.2\n    # scipy 1.0 or later\n    - scipy >=1.0\n    # NumPy has a hard upper limit.\n    # Also NumPy 1.22.0, 1.22.1, 1.22.2 are all broken for ufuncs\n    # xref: https://github.com/numba/numba/issues/7756\n    - numpy >=1.21,!=1.22.0,!=1.22.1,!=1.22.2,<1.25\n    # CUDA Python 11.6 or later\n    - cuda-python >=11.6\n\ntest:\n  requires:\n    - pip\n    # Required to test optional Numba features\n    - jinja2\n    - cffi\n    - scipy\n    - ipython\n    - setuptools\n    - tbb\n    - llvm-openmp              # [osx]\n    # Need these for AOT. Do not init msvc as it may not be present\n    - {{ compiler('c') }}      # [not win]\n    - {{ compiler('cxx') }}    # [not win]\n\n  imports:\n    - numba\n    - numba.core.annotations\n    - numba.core.datamodel\n    - numba.core.rewrites\n    - numba.core.runtime\n    - numba.core.typeconv\n    - numba.core.typing\n    - numba.core.unsafe\n    - numba.cuda\n    - numba.cuda.cudadrv\n    - numba.cuda.kernels\n    - numba.cuda.simulator\n    - numba.cuda.simulator.cudadrv\n    - numba.cuda.tests\n    - numba.cuda.tests.cudadrv\n    - numba.cuda.tests.cudapy\n    - numba.cuda.tests.cudasim\n    - numba.cuda.tests.nocuda\n    - numba.experimental.jitclass\n    - numba.np.ufunc\n    - numba.scripts\n    - numba.testing\n    - numba.tests\n    - numba.tests.npyufunc\n\nabout:\n  home: http://numba.pydata.org\n  license: BSD-2-Clause\n  license_family: BSD\n  license_file: LICENSE\n  summary: NumPy aware dynamic Python compiler using LLVM\n  description: |\n    Numba is an Open Source NumPy-aware optimizing compiler for Python \n    sponsored by Anaconda, Inc. It uses the remarkable LLVM compiler \n    infrastructure to compile Python syntax to machine code.\"\n  doc_url: http://numba.pydata.org/\n  dev_url: https://github.com/numba/numba\n\nextra:\n  recipe-maintainers:\n    - souravsingh\n    - marcelotrevisani\n    - henryiii\n    - mbargull\n    - jakirkham\n    - step21\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "cxx_compiler_stub",
   "llvm-openmp",
   "llvmlite",
   "numpy",
   "pip",
   "python",
   "setuptools",
   "tbb-devel"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "llvm-openmp"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "llvmlite",
    "numpy",
    "openmp",
    "pip",
    "python",
    "setuptools",
    "tbb-devel"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "llvmlite",
    "numpy",
    "openmp",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cffi",
    "cxx_compiler_stub",
    "ipython",
    "jinja2",
    "llvm-openmp",
    "pip",
    "scipy",
    "setuptools",
    "tbb"
   ]
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "llvm-openmp"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "llvmlite 0.40.*",
    "numpy",
    "pip",
    "python",
    "setuptools",
    "tbb-devel >=2021.6.0"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "llvmlite",
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cffi",
    "cxx_compiler_stub",
    "ipython",
    "jinja2",
    "llvm-openmp",
    "pip",
    "scipy",
    "setuptools",
    "tbb"
   ]
  }
 },
 "url": "https://pypi.io/packages/source/n/numba/numba-0.57.0.tar.gz",
 "version": "0.57.0",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/numba.json"
 },
 "win_64_meta_yaml": {
  "about": {
   "description": "Numba is an Open Source NumPy-aware optimizing compiler for Python\nsponsored by Anaconda, Inc. It uses the remarkable LLVM compiler\ninfrastructure to compile Python syntax to machine code.\"\n",
   "dev_url": "https://github.com/numba/numba",
   "doc_url": "http://numba.pydata.org/",
   "home": "http://numba.pydata.org",
   "license": "BSD-2-Clause",
   "license_family": "BSD",
   "license_file": "LICENSE",
   "summary": "NumPy aware dynamic Python compiler using LLVM"
  },
  "build": {
   "entry_points": [
    "numba = numba.misc.numba_entry:main",
    "numba = numba.misc.numba_entry:main",
    "numba = numba.misc.numba_entry:main",
    "numba = numba.misc.numba_entry:main"
   ],
   "ignore_run_exports": [
    "tbb",
    "tbb",
    "tbb",
    "tbb"
   ],
   "number": "1",
   "script": [
    "PYTHON -m pip install . --no-deps --ignore-installed -vvv",
    "PYTHON -m pip install . --no-deps --ignore-installed -vvv",
    "PYTHON -m pip install . --no-deps --ignore-installed -vvv",
    "PYTHON -m pip install . --no-deps --ignore-installed -vvv"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "souravsingh",
    "marcelotrevisani",
    "henryiii",
    "mbargull",
    "jakirkham",
    "step21",
    "souravsingh",
    "marcelotrevisani",
    "henryiii",
    "mbargull",
    "jakirkham",
    "step21",
    "souravsingh",
    "marcelotrevisani",
    "henryiii",
    "mbargull",
    "jakirkham",
    "step21",
    "souravsingh",
    "marcelotrevisani",
    "henryiii",
    "mbargull",
    "jakirkham",
    "step21"
   ]
  },
  "package": {
   "name": "numba",
   "version": "0.57.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "setuptools",
    "llvmlite 0.40.*",
    "numpy",
    "tbb-devel >=2021.6.0",
    "python",
    "pip",
    "setuptools",
    "llvmlite 0.40.*",
    "numpy",
    "tbb-devel >=2021.6.0",
    "python",
    "pip",
    "setuptools",
    "llvmlite 0.40.*",
    "numpy",
    "tbb-devel >=2021.6.0",
    "python",
    "pip",
    "setuptools",
    "llvmlite 0.40.*",
    "numpy",
    "tbb-devel >=2021.6.0"
   ],
   "run": [
    "python",
    "llvmlite",
    "numpy",
    "python",
    "llvmlite",
    "numpy",
    "python",
    "llvmlite",
    "numpy",
    "python",
    "llvmlite",
    "numpy"
   ],
   "run_constrained": [
    "tbb",
    "libopenblas !=0.3.6",
    "cuda-version >=10.2",
    "cudatoolkit >=10.2",
    "scipy >=1.0",
    "numpy >=1.21,!=1.22.0,!=1.22.1,!=1.22.2,<1.25",
    "cuda-python >=11.6",
    "tbb",
    "libopenblas !=0.3.6",
    "cuda-version >=10.2",
    "cudatoolkit >=10.2",
    "scipy >=1.0",
    "numpy >=1.21,!=1.22.0,!=1.22.1,!=1.22.2,<1.25",
    "cuda-python >=11.6",
    "tbb",
    "libopenblas !=0.3.6",
    "cuda-version >=10.2",
    "cudatoolkit >=10.2",
    "scipy >=1.0",
    "numpy >=1.21,!=1.22.0,!=1.22.1,!=1.22.2,<1.25",
    "cuda-python >=11.6",
    "tbb",
    "libopenblas !=0.3.6",
    "cuda-version >=10.2",
    "cudatoolkit >=10.2",
    "scipy >=1.0",
    "numpy >=1.21,!=1.22.0,!=1.22.1,!=1.22.2,<1.25",
    "cuda-python >=11.6"
   ]
  },
  "source": {
   "sha256": "2af6d81067a5bdc13960c6d2519dbabbf4d5d597cf75d640c5aeaefd48c6420a",
   "url": "https://pypi.io/packages/source/n/numba/numba-0.57.0.tar.gz"
  },
  "test": {
   "imports": [
    "numba",
    "numba.core.annotations",
    "numba.core.datamodel",
    "numba.core.rewrites",
    "numba.core.runtime",
    "numba.core.typeconv",
    "numba.core.typing",
    "numba.core.unsafe",
    "numba.cuda",
    "numba.cuda.cudadrv",
    "numba.cuda.kernels",
    "numba.cuda.simulator",
    "numba.cuda.simulator.cudadrv",
    "numba.cuda.tests",
    "numba.cuda.tests.cudadrv",
    "numba.cuda.tests.cudapy",
    "numba.cuda.tests.cudasim",
    "numba.cuda.tests.nocuda",
    "numba.experimental.jitclass",
    "numba.np.ufunc",
    "numba.scripts",
    "numba.testing",
    "numba.tests",
    "numba.tests.npyufunc",
    "numba",
    "numba.core.annotations",
    "numba.core.datamodel",
    "numba.core.rewrites",
    "numba.core.runtime",
    "numba.core.typeconv",
    "numba.core.typing",
    "numba.core.unsafe",
    "numba.cuda",
    "numba.cuda.cudadrv",
    "numba.cuda.kernels",
    "numba.cuda.simulator",
    "numba.cuda.simulator.cudadrv",
    "numba.cuda.tests",
    "numba.cuda.tests.cudadrv",
    "numba.cuda.tests.cudapy",
    "numba.cuda.tests.cudasim",
    "numba.cuda.tests.nocuda",
    "numba.experimental.jitclass",
    "numba.np.ufunc",
    "numba.scripts",
    "numba.testing",
    "numba.tests",
    "numba.tests.npyufunc",
    "numba",
    "numba.core.annotations",
    "numba.core.datamodel",
    "numba.core.rewrites",
    "numba.core.runtime",
    "numba.core.typeconv",
    "numba.core.typing",
    "numba.core.unsafe",
    "numba.cuda",
    "numba.cuda.cudadrv",
    "numba.cuda.kernels",
    "numba.cuda.simulator",
    "numba.cuda.simulator.cudadrv",
    "numba.cuda.tests",
    "numba.cuda.tests.cudadrv",
    "numba.cuda.tests.cudapy",
    "numba.cuda.tests.cudasim",
    "numba.cuda.tests.nocuda",
    "numba.experimental.jitclass",
    "numba.np.ufunc",
    "numba.scripts",
    "numba.testing",
    "numba.tests",
    "numba.tests.npyufunc",
    "numba",
    "numba.core.annotations",
    "numba.core.datamodel",
    "numba.core.rewrites",
    "numba.core.runtime",
    "numba.core.typeconv",
    "numba.core.typing",
    "numba.core.unsafe",
    "numba.cuda",
    "numba.cuda.cudadrv",
    "numba.cuda.kernels",
    "numba.cuda.simulator",
    "numba.cuda.simulator.cudadrv",
    "numba.cuda.tests",
    "numba.cuda.tests.cudadrv",
    "numba.cuda.tests.cudapy",
    "numba.cuda.tests.cudasim",
    "numba.cuda.tests.nocuda",
    "numba.experimental.jitclass",
    "numba.np.ufunc",
    "numba.scripts",
    "numba.testing",
    "numba.tests",
    "numba.tests.npyufunc"
   ],
   "requires": [
    "pip",
    "jinja2",
    "cffi",
    "scipy",
    "ipython",
    "setuptools",
    "tbb",
    "pip",
    "jinja2",
    "cffi",
    "scipy",
    "ipython",
    "setuptools",
    "tbb",
    "pip",
    "jinja2",
    "cffi",
    "scipy",
    "ipython",
    "setuptools",
    "tbb",
    "pip",
    "jinja2",
    "cffi",
    "scipy",
    "ipython",
    "setuptools",
    "tbb"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "llvmlite",
    "numpy",
    "pip",
    "python",
    "setuptools",
    "tbb-devel"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "llvmlite",
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "cffi",
    "ipython",
    "jinja2",
    "pip",
    "scipy",
    "setuptools",
    "tbb"
   ]
  }
 }
}