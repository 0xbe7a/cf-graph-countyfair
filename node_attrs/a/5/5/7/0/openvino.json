{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "linux_aarch64": "linux_64",
   "osx_arm64": "osx_64"
  }
 },
 "feedstock_name": "openvino",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "Intel\u00AE Distribution of OpenVINO\u2122 toolkit is an open-source toolkit for\noptimizing and deploying AI inference. It can be used to develop\napplications and solutions based on deep learning tasks, such as:\nemulation of human vision, automatic speech recognition, natural\nlanguage processing, recommendation systems, etc. It provides\nhigh-performance and rich deployment options, from edge to cloud\n\nInstalling OpenVINO Runtime from Conda Forge is recommended for C++ developers,\nas it provides only the C++ / C Runtime API.\nIf you work with Python, consider other OpenVINO distribution channels:\nhttps://www.intel.com/content/www/us/en/developer/tools/openvino-toolkit/download.html\n",
   "dev_url": "https://github.com/openvinotoolkit/openvino",
   "doc_url": "https://docs.openvino.ai/latest/index.html",
   "home": "https://github.com/openvinotoolkit/openvino",
   "license": "Apache-2.0",
   "license_family": "Apache",
   "license_file": [
    "LICENSE",
    "third-party-programs.txt",
    "onednn_third-party-programs.txt",
    "runtime-third-party-programs.txt"
   ],
   "summary": "Intel\u00AE Distribution of OpenVINO\u2122 Toolkit"
  },
  "build": {
   "ignore_run_exports_from": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "tbb-devel"
   ],
   "number": "3",
   "run_exports": [
    "libopenvino",
    "libopenvino-intel-cpu-plugin",
    "libopenvino-intel-gpu-plugin",
    "libopenvino-auto-plugin",
    "libopenvino-hetero-plugin",
    "libopenvino-auto-batch-plugin",
    "libopenvino-ir-frontend",
    "libopenvino-onnx-frontend",
    "libopenvino-paddle-frontend",
    "libopenvino-pytorch-frontend",
    "libopenvino-tensorflow-frontend",
    "libopenvino-tensorflow-lite-frontend"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "ilya-lavrenov",
    "artanokhov",
    "evgenytalanin-intel",
    "RaguzovaTatyana"
   ]
  },
  "outputs": [
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Core Runtime library"
    },
    "build": {
     "run_exports": [
      "libopenvino"
     ]
    },
    "name": "libopenvino",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml >=1.12.1",
      "tbb-devel =2021.5"
     ]
    },
    "script": "install/install.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino${SHLIB_EXT}.2023.0.1",
      "test -f $PREFIX/lib/libopenvino_c${SHLIB_EXT}.2023.0.1"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO IR Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino"
     ]
    },
    "name": "libopenvino-ir-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml >=1.12.1",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_ir.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino_ir_frontend${SHLIB_EXT}.2023.0.1"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO ONNX Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino"
     ]
    },
    "name": "libopenvino-onnx-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_onnx.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino_onnx_frontend${SHLIB_EXT}.2023.0.1"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Paddle Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino"
     ]
    },
    "name": "libopenvino-paddle-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_paddle.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino_paddle_frontend${SHLIB_EXT}.2023.0.1"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Pytorch Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino"
     ]
    },
    "name": "libopenvino-pytorch-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_pytorch.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino_pytorch_frontend${SHLIB_EXT}.2023.0.1"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO TensorFlow Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino"
     ]
    },
    "name": "libopenvino-tensorflow-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libopenvino",
      "snappy =1.1.10"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_tensorflow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino_tensorflow_frontend${SHLIB_EXT}.2023.0.1"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO TensorFlow Lite Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino"
     ]
    },
    "name": "libopenvino-tensorflow-lite-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_tensorflow_lite.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino_tensorflow_lite_frontend${SHLIB_EXT}.2023.0.1"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Intel\u00AE CPU plugin"
    },
    "build": {
     "run_exports": [
      "libopenvino-intel-cpu-plugin"
     ]
    },
    "name": "libopenvino-intel-cpu-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml >=1.12.1",
      "tbb-devel =2021.5",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_cpu.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.0.1/libopenvino_intel_cpu_plugin.so"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO ARM\u00AE CPU plugin"
    },
    "build": {
     "run_exports": [
      "libopenvino-arm-cpu-plugin"
     ],
     "skip": true
    },
    "name": "libopenvino-arm-cpu-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml >=1.12.1",
      "tbb-devel =2021.5",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_cpu.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.0.1/libopenvino_arm_cpu_plugin.so"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Intel\u00AE GPU plugin"
    },
    "build": {
     "run_exports": [
      "libopenvino-intel-gpu-plugin"
     ]
    },
    "name": "libopenvino-intel-gpu-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "tbb-devel =2021.5",
      "ocl-icd",
      "clhpp",
      "pugixml >=1.12.1",
      "libopenvino"
     ],
     "run": [
      "libopenvino",
      "ocl-icd-system"
     ]
    },
    "script": "install/install_gpu.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.0.1/libopenvino_intel_gpu_plugin.so"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Auto plugin"
    },
    "build": {
     "run_exports": [
      "libopenvino-auto-plugin"
     ]
    },
    "name": "libopenvino-auto-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "tbb-devel =2021.5",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_auto.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.0.1/libopenvino_auto_plugin.so"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Auto Batch plugin"
    },
    "build": {
     "run_exports": [
      "libopenvino-auto-batch-plugin"
     ]
    },
    "name": "libopenvino-auto-batch-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_batch.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.0.1/libopenvino_auto_batch_plugin.so"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Hetero plugin"
    },
    "build": {
     "run_exports": [
      "libopenvino-hetero-plugin"
     ]
    },
    "name": "libopenvino-hetero-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml >=1.12.1",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_hetero.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.0.1/libopenvino_hetero_plugin.so"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "name": "openvino",
    "script": "install/install_dev.sh"
   }
  ],
  "package": {
   "name": "openvino",
   "version": "2023.0.1"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "git",
    "ninja",
    "pkg-config",
    "cmake >=3.15",
    "python >=3.7",
    "libprotobuf =3.20.3",
    "flatbuffers =23.3.3",
    "sysroot_linux-64 =2.17"
   ],
   "host": [
    "tbb-devel =2021.5",
    "snappy",
    "ocl-icd",
    "clhpp",
    "pugixml >=1.12.1",
    "xbyak >=6.69.1",
    "libprotobuf-static =3.20.3"
   ],
   "run": [
    "libopenvino",
    "libopenvino-intel-cpu-plugin",
    "libopenvino-intel-gpu-plugin",
    "libopenvino-auto-plugin",
    "libopenvino-hetero-plugin",
    "libopenvino-auto-batch-plugin",
    "libopenvino-ir-frontend",
    "libopenvino-onnx-frontend",
    "libopenvino-paddle-frontend",
    "libopenvino-pytorch-frontend",
    "libopenvino-tensorflow-frontend",
    "libopenvino-tensorflow-lite-frontend"
   ]
  },
  "source": [
   {
    "patches": [
     "patches/005-cross-compilation-macos.patch"
    ],
    "sha256": "c14cb22f5191a75ea15659c62baceb71333dc9ecf62139ce513f3e81e4544651",
    "url": "https://github.com/openvinotoolkit/openvino/archive/refs/tags/2023.0.1.tar.gz"
   },
   {
    "folder": "thirdparty/xbyak",
    "sha256": "7eb64e2c18527824402b16f26c6118ba82f40f57fe6e3ab05c6e2883246a04f1",
    "url": "https://github.com/herumi/xbyak/archive/refs/tags/v6.69.tar.gz"
   },
   {
    "folder": "src/plugins/intel_cpu/thirdparty/onednn",
    "sha256": "52921b3efab33d1710971c67318e8c00ee102b6369e4e9cea8fdf91a1d68e38e",
    "url": "https://github.com/openvinotoolkit/oneDNN/archive/1c7bfabf1b26e6fb95fea1613e1d3d2bef1f6b54.tar.gz"
   },
   {
    "folder": "src/plugins/intel_gpu/thirdparty/onednn_gpu",
    "sha256": "da57c2298a8e001718902f0b65b6d92c4a7897b35467e23bc24996dde43ec47b",
    "url": "https://github.com/oneapi-src/oneDNN/archive/f27dedbfc093f51032a4580198bb80579440dc15.tar.gz"
   },
   {
    "folder": "thirdparty/ade",
    "sha256": "db7759cc32107e713b9e503ddf71a54ba2c80de07daefcb1aa315507e706ce07",
    "url": "https://github.com/opencv/ade/archive/58b2595a1a95cc807be8bf6222f266a9a1f393a9.tar.gz"
   },
   {
    "folder": "thirdparty/onnx/onnx",
    "sha256": "090d3e10ec662a98a2a72f1bf053f793efc645824f0d4b779e0ce47468a0890e",
    "url": "https://github.com/onnx/onnx/archive/refs/tags/v1.13.1.tar.gz"
   }
  ],
  "test": {
   "commands": [
    "export CMAKE_GENERATOR=Ninja",
    "test -f $PREFIX/lib/libopenvino${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopenvino_c${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopenvino_paddle_frontend${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopenvino_pytorch_frontend${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopenvino_onnx_frontend${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopenvino_tensorflow_frontend${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopenvino_tensorflow_lite_frontend${SHLIB_EXT}",
    "mkdir -p samples/cpp/thirdparty",
    "cp -R thirdparty/cnpy samples/cpp/thirdparty/cnpy",
    "cmake -S samples/cpp -B samples_cpp_build -DBIN_FOLDER=bin",
    "cmake --build samples_cpp_build --config Release --verbose",
    "./samples_cpp_build/bin/hello_query_device",
    "cp samples/cpp/CMakeLists.txt samples/c/CMakeLists.txt",
    "cmake -S samples/c -B samples_c_build -DBIN_FOLDER=bin",
    "cmake --build samples_c_build --config Release --verbose",
    "$CC snippets/openvino_available_devices.c $(pkg-config --cflags --libs pugixml tbb openvino) -Wl,-rpath,$PREFIX/lib -o openvino_devices_test",
    "if [[ $(./openvino_devices_test) != \"passed\" ]]; then exit 1 ; fi",
    "cmake -S snippets -B snippets_build",
    "cmake --build snippets_build --config Release --verbose",
    "if [[ $(./snippets_build/openvino_frontends_test) != 6 ]]; then exit 1 ; fi"
   ],
   "files": [
    "snippets/"
   ],
   "requires": [
    "cxx_compiler_stub",
    "c_compiler_stub",
    "ninja",
    "cmake >=3.15",
    "pkg-config",
    "zlib",
    "nlohmann_json",
    "sysroot_linux-64 =2.17",
    "tbb-devel =2021.5",
    "opencv",
    "gflags"
   ],
   "source_files": [
    "samples",
    "thirdparty/cnpy"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "flatbuffers",
    "git",
    "libprotobuf",
    "ninja",
    "pkg-config",
    "python",
    "sysroot_linux-64"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "clhpp",
    "libopenvino",
    "libprotobuf-static",
    "ocl-icd",
    "pugixml",
    "snappy",
    "tbb-devel",
    "xbyak"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "libopenvino",
    "libopenvino-auto-batch-plugin",
    "libopenvino-auto-plugin",
    "libopenvino-hetero-plugin",
    "libopenvino-intel-cpu-plugin",
    "libopenvino-intel-gpu-plugin",
    "libopenvino-ir-frontend",
    "libopenvino-onnx-frontend",
    "libopenvino-paddle-frontend",
    "libopenvino-pytorch-frontend",
    "libopenvino-tensorflow-frontend",
    "libopenvino-tensorflow-lite-frontend",
    "ocl-icd-system"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "gflags",
    "ninja",
    "nlohmann_json",
    "opencv",
    "pkg-config",
    "sysroot_linux-64",
    "tbb-devel",
    "zlib"
   ]
  }
 },
 "linux_aarch64_meta_yaml": {
  "about": {
   "description": "Intel\u00AE Distribution of OpenVINO\u2122 toolkit is an open-source toolkit for\noptimizing and deploying AI inference. It can be used to develop\napplications and solutions based on deep learning tasks, such as:\nemulation of human vision, automatic speech recognition, natural\nlanguage processing, recommendation systems, etc. It provides\nhigh-performance and rich deployment options, from edge to cloud\n\nInstalling OpenVINO Runtime from Conda Forge is recommended for C++ developers,\nas it provides only the C++ / C Runtime API.\nIf you work with Python, consider other OpenVINO distribution channels:\nhttps://www.intel.com/content/www/us/en/developer/tools/openvino-toolkit/download.html\n",
   "dev_url": "https://github.com/openvinotoolkit/openvino",
   "doc_url": "https://docs.openvino.ai/latest/index.html",
   "home": "https://github.com/openvinotoolkit/openvino",
   "license": "Apache-2.0",
   "license_family": "Apache",
   "license_file": [
    "LICENSE",
    "third-party-programs.txt",
    "onednn_third-party-programs.txt",
    "runtime-third-party-programs.txt"
   ],
   "summary": "Intel\u00AE Distribution of OpenVINO\u2122 Toolkit"
  },
  "build": {
   "ignore_run_exports_from": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "tbb-devel"
   ],
   "number": "3",
   "run_exports": [
    "libopenvino",
    "libopenvino-arm-cpu-plugin",
    "libopenvino-auto-plugin",
    "libopenvino-hetero-plugin",
    "libopenvino-auto-batch-plugin",
    "libopenvino-ir-frontend",
    "libopenvino-onnx-frontend",
    "libopenvino-paddle-frontend",
    "libopenvino-pytorch-frontend",
    "libopenvino-tensorflow-frontend",
    "libopenvino-tensorflow-lite-frontend"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "ilya-lavrenov",
    "artanokhov",
    "evgenytalanin-intel",
    "RaguzovaTatyana"
   ]
  },
  "outputs": [
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Core Runtime library"
    },
    "build": {
     "run_exports": [
      "libopenvino"
     ]
    },
    "name": "libopenvino",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml >=1.12.1",
      "tbb-devel =2021.5"
     ]
    },
    "script": "install/install.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino${SHLIB_EXT}.2023.0.1",
      "test -f $PREFIX/lib/libopenvino_c${SHLIB_EXT}.2023.0.1"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO IR Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino"
     ]
    },
    "name": "libopenvino-ir-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml >=1.12.1",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_ir.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino_ir_frontend${SHLIB_EXT}.2023.0.1"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO ONNX Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino"
     ]
    },
    "name": "libopenvino-onnx-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_onnx.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino_onnx_frontend${SHLIB_EXT}.2023.0.1"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Paddle Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino"
     ]
    },
    "name": "libopenvino-paddle-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_paddle.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino_paddle_frontend${SHLIB_EXT}.2023.0.1"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Pytorch Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino"
     ]
    },
    "name": "libopenvino-pytorch-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_pytorch.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino_pytorch_frontend${SHLIB_EXT}.2023.0.1"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO TensorFlow Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino"
     ]
    },
    "name": "libopenvino-tensorflow-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libopenvino",
      "snappy =1.1.10"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_tensorflow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino_tensorflow_frontend${SHLIB_EXT}.2023.0.1"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO TensorFlow Lite Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino"
     ]
    },
    "name": "libopenvino-tensorflow-lite-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_tensorflow_lite.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino_tensorflow_lite_frontend${SHLIB_EXT}.2023.0.1"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Intel\u00AE CPU plugin"
    },
    "build": {
     "run_exports": [
      "libopenvino-intel-cpu-plugin"
     ],
     "skip": true
    },
    "name": "libopenvino-intel-cpu-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml >=1.12.1",
      "tbb-devel =2021.5",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_cpu.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.0.1/libopenvino_intel_cpu_plugin.so"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO ARM\u00AE CPU plugin"
    },
    "build": {
     "run_exports": [
      "libopenvino-arm-cpu-plugin"
     ]
    },
    "name": "libopenvino-arm-cpu-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml >=1.12.1",
      "tbb-devel =2021.5",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_cpu.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.0.1/libopenvino_arm_cpu_plugin.so"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Intel\u00AE GPU plugin"
    },
    "build": {
     "run_exports": [
      "libopenvino-intel-gpu-plugin"
     ],
     "skip": true
    },
    "name": "libopenvino-intel-gpu-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "tbb-devel =2021.5",
      "clhpp",
      "pugixml >=1.12.1",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_gpu.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.0.1/libopenvino_intel_gpu_plugin.so"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Auto plugin"
    },
    "build": {
     "run_exports": [
      "libopenvino-auto-plugin"
     ]
    },
    "name": "libopenvino-auto-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "tbb-devel =2021.5",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_auto.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.0.1/libopenvino_auto_plugin.so"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Auto Batch plugin"
    },
    "build": {
     "run_exports": [
      "libopenvino-auto-batch-plugin"
     ]
    },
    "name": "libopenvino-auto-batch-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_batch.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.0.1/libopenvino_auto_batch_plugin.so"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Hetero plugin"
    },
    "build": {
     "run_exports": [
      "libopenvino-hetero-plugin"
     ]
    },
    "name": "libopenvino-hetero-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml >=1.12.1",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_hetero.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.0.1/libopenvino_hetero_plugin.so"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "name": "openvino",
    "script": "install/install_dev.sh"
   }
  ],
  "package": {
   "name": "openvino",
   "version": "2023.0.1"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "git",
    "ninja",
    "pkg-config",
    "scons",
    "cmake >=3.15",
    "python >=3.7",
    "libprotobuf =3.20.3",
    "flatbuffers =23.3.3"
   ],
   "host": [
    "tbb-devel =2021.5",
    "snappy",
    "pugixml >=1.12.1",
    "libprotobuf-static =3.20.3"
   ],
   "run": [
    "libopenvino",
    "libopenvino-arm-cpu-plugin",
    "libopenvino-auto-plugin",
    "libopenvino-hetero-plugin",
    "libopenvino-auto-batch-plugin",
    "libopenvino-ir-frontend",
    "libopenvino-onnx-frontend",
    "libopenvino-paddle-frontend",
    "libopenvino-pytorch-frontend",
    "libopenvino-tensorflow-frontend",
    "libopenvino-tensorflow-lite-frontend"
   ]
  },
  "source": [
   {
    "patches": [
     "patches/003-lin-arm64-compute-lib.patch",
     "patches/005-cross-compilation-macos.patch"
    ],
    "sha256": "c14cb22f5191a75ea15659c62baceb71333dc9ecf62139ce513f3e81e4544651",
    "url": "https://github.com/openvinotoolkit/openvino/archive/refs/tags/2023.0.1.tar.gz"
   },
   {
    "folder": "src/plugins/intel_cpu/thirdparty/ComputeLibrary",
    "sha256": "c3a443e26539f866969242e690cf0651ef629149741ee18732f954c734da6763",
    "url": "https://github.com/ARM-software/ComputeLibrary/archive/refs/tags/v23.02.1.tar.gz"
   },
   {
    "folder": "thirdparty/xbyak",
    "sha256": "7eb64e2c18527824402b16f26c6118ba82f40f57fe6e3ab05c6e2883246a04f1",
    "url": "https://github.com/herumi/xbyak/archive/refs/tags/v6.69.tar.gz"
   },
   {
    "folder": "src/plugins/intel_cpu/thirdparty/onednn",
    "sha256": "52921b3efab33d1710971c67318e8c00ee102b6369e4e9cea8fdf91a1d68e38e",
    "url": "https://github.com/openvinotoolkit/oneDNN/archive/1c7bfabf1b26e6fb95fea1613e1d3d2bef1f6b54.tar.gz"
   },
   {
    "folder": "thirdparty/ade",
    "sha256": "db7759cc32107e713b9e503ddf71a54ba2c80de07daefcb1aa315507e706ce07",
    "url": "https://github.com/opencv/ade/archive/58b2595a1a95cc807be8bf6222f266a9a1f393a9.tar.gz"
   },
   {
    "folder": "thirdparty/onnx/onnx",
    "sha256": "090d3e10ec662a98a2a72f1bf053f793efc645824f0d4b779e0ce47468a0890e",
    "url": "https://github.com/onnx/onnx/archive/refs/tags/v1.13.1.tar.gz"
   }
  ],
  "test": {
   "commands": [
    "export CMAKE_GENERATOR=Ninja",
    "test -f $PREFIX/lib/libopenvino${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopenvino_c${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopenvino_paddle_frontend${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopenvino_pytorch_frontend${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopenvino_onnx_frontend${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopenvino_tensorflow_frontend${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopenvino_tensorflow_lite_frontend${SHLIB_EXT}",
    "mkdir -p samples/cpp/thirdparty",
    "cp -R thirdparty/cnpy samples/cpp/thirdparty/cnpy",
    "cmake -S samples/cpp -B samples_cpp_build -DBIN_FOLDER=bin",
    "cmake --build samples_cpp_build --config Release --verbose",
    "./samples_cpp_build/bin/hello_query_device",
    "cp samples/cpp/CMakeLists.txt samples/c/CMakeLists.txt",
    "cmake -S samples/c -B samples_c_build -DBIN_FOLDER=bin",
    "cmake --build samples_c_build --config Release --verbose",
    "$CC snippets/openvino_available_devices.c $(pkg-config --cflags --libs pugixml tbb openvino) -Wl,-rpath,$PREFIX/lib -o openvino_devices_test",
    "if [[ $(./openvino_devices_test) != \"passed\" ]]; then exit 1 ; fi",
    "cmake -S snippets -B snippets_build",
    "cmake --build snippets_build --config Release --verbose",
    "if [[ $(./snippets_build/openvino_frontends_test) != 6 ]]; then exit 1 ; fi"
   ],
   "files": [
    "snippets/"
   ],
   "requires": [
    "cxx_compiler_stub",
    "c_compiler_stub",
    "ninja",
    "cmake >=3.15",
    "pkg-config",
    "zlib",
    "nlohmann_json",
    "tbb-devel =2021.5",
    "opencv",
    "gflags"
   ],
   "source_files": [
    "samples",
    "thirdparty/cnpy"
   ]
  }
 },
 "linux_aarch64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "flatbuffers",
    "git",
    "libprotobuf",
    "ninja",
    "pkg-config",
    "python",
    "scons"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "clhpp",
    "libopenvino",
    "libprotobuf-static",
    "pugixml",
    "snappy",
    "tbb-devel"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "libopenvino",
    "libopenvino-arm-cpu-plugin",
    "libopenvino-auto-batch-plugin",
    "libopenvino-auto-plugin",
    "libopenvino-hetero-plugin",
    "libopenvino-ir-frontend",
    "libopenvino-onnx-frontend",
    "libopenvino-paddle-frontend",
    "libopenvino-pytorch-frontend",
    "libopenvino-tensorflow-frontend",
    "libopenvino-tensorflow-lite-frontend"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "gflags",
    "ninja",
    "nlohmann_json",
    "opencv",
    "pkg-config",
    "tbb-devel",
    "zlib"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "Intel\u00AE Distribution of OpenVINO\u2122 toolkit is an open-source toolkit for\noptimizing and deploying AI inference. It can be used to develop\napplications and solutions based on deep learning tasks, such as:\nemulation of human vision, automatic speech recognition, natural\nlanguage processing, recommendation systems, etc. It provides\nhigh-performance and rich deployment options, from edge to cloud\n\nInstalling OpenVINO Runtime from Conda Forge is recommended for C++ developers,\nas it provides only the C++ / C Runtime API.\nIf you work with Python, consider other OpenVINO distribution channels:\nhttps://www.intel.com/content/www/us/en/developer/tools/openvino-toolkit/download.html\n",
   "dev_url": "https://github.com/openvinotoolkit/openvino",
   "doc_url": "https://docs.openvino.ai/latest/index.html",
   "home": "https://github.com/openvinotoolkit/openvino",
   "license": "Apache-2.0",
   "license_family": "Apache",
   "license_file": [
    "LICENSE",
    "third-party-programs.txt",
    "onednn_third-party-programs.txt",
    "runtime-third-party-programs.txt",
    "LICENSE",
    "third-party-programs.txt",
    "onednn_third-party-programs.txt",
    "runtime-third-party-programs.txt",
    "LICENSE",
    "third-party-programs.txt",
    "onednn_third-party-programs.txt",
    "runtime-third-party-programs.txt",
    "LICENSE",
    "third-party-programs.txt",
    "onednn_third-party-programs.txt",
    "runtime-third-party-programs.txt",
    "LICENSE",
    "third-party-programs.txt",
    "onednn_third-party-programs.txt",
    "runtime-third-party-programs.txt"
   ],
   "summary": "Intel\u00AE Distribution of OpenVINO\u2122 Toolkit"
  },
  "build": {
   "ignore_run_exports_from": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "tbb-devel",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "tbb-devel",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "tbb-devel",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "tbb-devel",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "tbb-devel"
   ],
   "number": "3",
   "run_exports": [
    "libopenvino",
    "libopenvino-intel-cpu-plugin",
    "libopenvino-intel-gpu-plugin",
    "libopenvino-auto-plugin",
    "libopenvino-hetero-plugin",
    "libopenvino-auto-batch-plugin",
    "libopenvino-ir-frontend",
    "libopenvino-onnx-frontend",
    "libopenvino-paddle-frontend",
    "libopenvino-pytorch-frontend",
    "libopenvino-tensorflow-frontend",
    "libopenvino-tensorflow-lite-frontend",
    "libopenvino",
    "libopenvino-arm-cpu-plugin",
    "libopenvino-auto-plugin",
    "libopenvino-hetero-plugin",
    "libopenvino-auto-batch-plugin",
    "libopenvino-ir-frontend",
    "libopenvino-onnx-frontend",
    "libopenvino-paddle-frontend",
    "libopenvino-pytorch-frontend",
    "libopenvino-tensorflow-frontend",
    "libopenvino-tensorflow-lite-frontend",
    "libopenvino",
    "libopenvino-intel-cpu-plugin",
    "libopenvino-auto-plugin",
    "libopenvino-hetero-plugin",
    "libopenvino-auto-batch-plugin",
    "libopenvino-ir-frontend",
    "libopenvino-onnx-frontend",
    "libopenvino-paddle-frontend",
    "libopenvino-pytorch-frontend",
    "libopenvino-tensorflow-frontend",
    "libopenvino-tensorflow-lite-frontend",
    "libopenvino",
    "libopenvino-arm-cpu-plugin",
    "libopenvino-auto-plugin",
    "libopenvino-hetero-plugin",
    "libopenvino-auto-batch-plugin",
    "libopenvino-ir-frontend",
    "libopenvino-onnx-frontend",
    "libopenvino-paddle-frontend",
    "libopenvino-pytorch-frontend",
    "libopenvino-tensorflow-frontend",
    "libopenvino-tensorflow-lite-frontend",
    "libopenvino",
    "libopenvino-intel-cpu-plugin",
    "libopenvino-intel-gpu-plugin",
    "libopenvino-auto-plugin",
    "libopenvino-hetero-plugin",
    "libopenvino-auto-batch-plugin",
    "libopenvino-ir-frontend",
    "libopenvino-onnx-frontend",
    "libopenvino-paddle-frontend",
    "libopenvino-pytorch-frontend",
    "libopenvino-tensorflow-frontend",
    "libopenvino-tensorflow-lite-frontend"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "ilya-lavrenov",
    "artanokhov",
    "evgenytalanin-intel",
    "RaguzovaTatyana",
    "ilya-lavrenov",
    "artanokhov",
    "evgenytalanin-intel",
    "RaguzovaTatyana",
    "ilya-lavrenov",
    "artanokhov",
    "evgenytalanin-intel",
    "RaguzovaTatyana",
    "ilya-lavrenov",
    "artanokhov",
    "evgenytalanin-intel",
    "RaguzovaTatyana",
    "ilya-lavrenov",
    "artanokhov",
    "evgenytalanin-intel",
    "RaguzovaTatyana"
   ]
  },
  "outputs": [
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Core Runtime library"
    },
    "build": {
     "run_exports": [
      "libopenvino"
     ]
    },
    "name": "libopenvino",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml >=1.12.1",
      "tbb-devel =2021.5"
     ]
    },
    "script": "install/install.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino${SHLIB_EXT}.2023.0.1",
      "test -f $PREFIX/lib/libopenvino_c${SHLIB_EXT}.2023.0.1"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO IR Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino"
     ]
    },
    "name": "libopenvino-ir-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml >=1.12.1",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_ir.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino_ir_frontend${SHLIB_EXT}.2023.0.1"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO ONNX Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino"
     ]
    },
    "name": "libopenvino-onnx-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_onnx.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino_onnx_frontend${SHLIB_EXT}.2023.0.1"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Paddle Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino"
     ]
    },
    "name": "libopenvino-paddle-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_paddle.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino_paddle_frontend${SHLIB_EXT}.2023.0.1"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Pytorch Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino"
     ]
    },
    "name": "libopenvino-pytorch-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_pytorch.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino_pytorch_frontend${SHLIB_EXT}.2023.0.1"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO TensorFlow Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino"
     ]
    },
    "name": "libopenvino-tensorflow-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libopenvino",
      "snappy =1.1.10"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_tensorflow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino_tensorflow_frontend${SHLIB_EXT}.2023.0.1"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO TensorFlow Lite Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino"
     ]
    },
    "name": "libopenvino-tensorflow-lite-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_tensorflow_lite.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino_tensorflow_lite_frontend${SHLIB_EXT}.2023.0.1"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Intel\u00AE CPU plugin"
    },
    "build": {
     "run_exports": [
      "libopenvino-intel-cpu-plugin"
     ]
    },
    "name": "libopenvino-intel-cpu-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml >=1.12.1",
      "tbb-devel =2021.5",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_cpu.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.0.1/libopenvino_intel_cpu_plugin.so"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO ARM\u00AE CPU plugin"
    },
    "build": {
     "run_exports": [
      "libopenvino-arm-cpu-plugin"
     ],
     "skip": true
    },
    "name": "libopenvino-arm-cpu-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml >=1.12.1",
      "tbb-devel =2021.5",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_cpu.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.0.1/libopenvino_arm_cpu_plugin.so"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Intel\u00AE GPU plugin"
    },
    "build": {
     "run_exports": [
      "libopenvino-intel-gpu-plugin"
     ]
    },
    "name": "libopenvino-intel-gpu-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "tbb-devel =2021.5",
      "ocl-icd",
      "clhpp",
      "pugixml >=1.12.1",
      "libopenvino"
     ],
     "run": [
      "libopenvino",
      "ocl-icd-system"
     ]
    },
    "script": "install/install_gpu.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.0.1/libopenvino_intel_gpu_plugin.so"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Auto plugin"
    },
    "build": {
     "run_exports": [
      "libopenvino-auto-plugin"
     ]
    },
    "name": "libopenvino-auto-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "tbb-devel =2021.5",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_auto.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.0.1/libopenvino_auto_plugin.so"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Auto Batch plugin"
    },
    "build": {
     "run_exports": [
      "libopenvino-auto-batch-plugin"
     ]
    },
    "name": "libopenvino-auto-batch-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_batch.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.0.1/libopenvino_auto_batch_plugin.so"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Hetero plugin"
    },
    "build": {
     "run_exports": [
      "libopenvino-hetero-plugin"
     ]
    },
    "name": "libopenvino-hetero-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml >=1.12.1",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_hetero.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.0.1/libopenvino_hetero_plugin.so"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "name": "openvino",
    "script": "install/install_dev.sh"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Core Runtime library"
    },
    "build": {
     "run_exports": [
      "libopenvino"
     ]
    },
    "name": "libopenvino",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml >=1.12.1",
      "tbb-devel =2021.5"
     ]
    },
    "script": "install/install.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino${SHLIB_EXT}.2023.0.1",
      "test -f $PREFIX/lib/libopenvino_c${SHLIB_EXT}.2023.0.1"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO IR Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino"
     ]
    },
    "name": "libopenvino-ir-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml >=1.12.1",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_ir.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino_ir_frontend${SHLIB_EXT}.2023.0.1"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO ONNX Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino"
     ]
    },
    "name": "libopenvino-onnx-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_onnx.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino_onnx_frontend${SHLIB_EXT}.2023.0.1"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Paddle Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino"
     ]
    },
    "name": "libopenvino-paddle-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_paddle.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino_paddle_frontend${SHLIB_EXT}.2023.0.1"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Pytorch Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino"
     ]
    },
    "name": "libopenvino-pytorch-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_pytorch.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino_pytorch_frontend${SHLIB_EXT}.2023.0.1"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO TensorFlow Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino"
     ]
    },
    "name": "libopenvino-tensorflow-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libopenvino",
      "snappy =1.1.10"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_tensorflow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino_tensorflow_frontend${SHLIB_EXT}.2023.0.1"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO TensorFlow Lite Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino"
     ]
    },
    "name": "libopenvino-tensorflow-lite-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_tensorflow_lite.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino_tensorflow_lite_frontend${SHLIB_EXT}.2023.0.1"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Intel\u00AE CPU plugin"
    },
    "build": {
     "run_exports": [
      "libopenvino-intel-cpu-plugin"
     ],
     "skip": true
    },
    "name": "libopenvino-intel-cpu-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml >=1.12.1",
      "tbb-devel =2021.5",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_cpu.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.0.1/libopenvino_intel_cpu_plugin.so"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO ARM\u00AE CPU plugin"
    },
    "build": {
     "run_exports": [
      "libopenvino-arm-cpu-plugin"
     ]
    },
    "name": "libopenvino-arm-cpu-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml >=1.12.1",
      "tbb-devel =2021.5",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_cpu.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.0.1/libopenvino_arm_cpu_plugin.so"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Intel\u00AE GPU plugin"
    },
    "build": {
     "run_exports": [
      "libopenvino-intel-gpu-plugin"
     ],
     "skip": true
    },
    "name": "libopenvino-intel-gpu-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "tbb-devel =2021.5",
      "clhpp",
      "pugixml >=1.12.1",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_gpu.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.0.1/libopenvino_intel_gpu_plugin.so"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Auto plugin"
    },
    "build": {
     "run_exports": [
      "libopenvino-auto-plugin"
     ]
    },
    "name": "libopenvino-auto-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "tbb-devel =2021.5",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_auto.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.0.1/libopenvino_auto_plugin.so"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Auto Batch plugin"
    },
    "build": {
     "run_exports": [
      "libopenvino-auto-batch-plugin"
     ]
    },
    "name": "libopenvino-auto-batch-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_batch.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.0.1/libopenvino_auto_batch_plugin.so"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Hetero plugin"
    },
    "build": {
     "run_exports": [
      "libopenvino-hetero-plugin"
     ]
    },
    "name": "libopenvino-hetero-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml >=1.12.1",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_hetero.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.0.1/libopenvino_hetero_plugin.so"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "name": "openvino",
    "script": "install/install_dev.sh"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Core Runtime library"
    },
    "build": {
     "run_exports": [
      "libopenvino"
     ]
    },
    "name": "libopenvino",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml >=1.12.1",
      "tbb-devel =2021.5"
     ]
    },
    "script": "install/install.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino.2023.0.1${SHLIB_EXT}",
      "test -f $PREFIX/lib/libopenvino_c.2023.0.1${SHLIB_EXT}"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO IR Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino"
     ]
    },
    "name": "libopenvino-ir-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml >=1.12.1",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_ir.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino_ir_frontend.2023.0.1${SHLIB_EXT}"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO ONNX Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino"
     ]
    },
    "name": "libopenvino-onnx-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_onnx.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino_onnx_frontend.2023.0.1${SHLIB_EXT}"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Paddle Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino"
     ]
    },
    "name": "libopenvino-paddle-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_paddle.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino_paddle_frontend.2023.0.1${SHLIB_EXT}"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Pytorch Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino"
     ]
    },
    "name": "libopenvino-pytorch-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_pytorch.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino_pytorch_frontend.2023.0.1${SHLIB_EXT}"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO TensorFlow Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino"
     ]
    },
    "name": "libopenvino-tensorflow-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libopenvino",
      "snappy =1.1.10"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_tensorflow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino_tensorflow_frontend.2023.0.1${SHLIB_EXT}"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO TensorFlow Lite Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino"
     ]
    },
    "name": "libopenvino-tensorflow-lite-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_tensorflow_lite.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino_tensorflow_lite_frontend.2023.0.1${SHLIB_EXT}"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Intel\u00AE CPU plugin"
    },
    "build": {
     "run_exports": [
      "libopenvino-intel-cpu-plugin"
     ]
    },
    "name": "libopenvino-intel-cpu-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml >=1.12.1",
      "tbb-devel =2021.5",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_cpu.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.0.1/libopenvino_intel_cpu_plugin.so"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO ARM\u00AE CPU plugin"
    },
    "build": {
     "run_exports": [
      "libopenvino-arm-cpu-plugin"
     ],
     "skip": true
    },
    "name": "libopenvino-arm-cpu-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml >=1.12.1",
      "tbb-devel =2021.5",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_cpu.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.0.1/libopenvino_arm_cpu_plugin.so"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Intel\u00AE GPU plugin"
    },
    "build": {
     "run_exports": [
      "libopenvino-intel-gpu-plugin"
     ],
     "skip": true
    },
    "name": "libopenvino-intel-gpu-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "tbb-devel =2021.5",
      "clhpp",
      "pugixml >=1.12.1",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_gpu.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.0.1/libopenvino_intel_gpu_plugin.so"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Auto plugin"
    },
    "build": {
     "run_exports": [
      "libopenvino-auto-plugin"
     ]
    },
    "name": "libopenvino-auto-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "tbb-devel =2021.5",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_auto.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.0.1/libopenvino_auto_plugin.so"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Auto Batch plugin"
    },
    "build": {
     "run_exports": [
      "libopenvino-auto-batch-plugin"
     ]
    },
    "name": "libopenvino-auto-batch-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_batch.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.0.1/libopenvino_auto_batch_plugin.so"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Hetero plugin"
    },
    "build": {
     "run_exports": [
      "libopenvino-hetero-plugin"
     ]
    },
    "name": "libopenvino-hetero-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml >=1.12.1",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_hetero.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.0.1/libopenvino_hetero_plugin.so"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "name": "openvino",
    "script": "install/install_dev.sh"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Core Runtime library"
    },
    "build": {
     "run_exports": [
      "libopenvino"
     ]
    },
    "name": "libopenvino",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml >=1.12.1",
      "tbb-devel =2021.5"
     ]
    },
    "script": "install/install.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino.2023.0.1${SHLIB_EXT}",
      "test -f $PREFIX/lib/libopenvino_c.2023.0.1${SHLIB_EXT}"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO IR Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino"
     ]
    },
    "name": "libopenvino-ir-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml >=1.12.1",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_ir.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino_ir_frontend.2023.0.1${SHLIB_EXT}"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO ONNX Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino"
     ]
    },
    "name": "libopenvino-onnx-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_onnx.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino_onnx_frontend.2023.0.1${SHLIB_EXT}"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Paddle Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino"
     ]
    },
    "name": "libopenvino-paddle-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_paddle.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino_paddle_frontend.2023.0.1${SHLIB_EXT}"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Pytorch Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino"
     ]
    },
    "name": "libopenvino-pytorch-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_pytorch.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino_pytorch_frontend.2023.0.1${SHLIB_EXT}"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO TensorFlow Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino"
     ]
    },
    "name": "libopenvino-tensorflow-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libopenvino",
      "snappy =1.1.10"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_tensorflow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino_tensorflow_frontend.2023.0.1${SHLIB_EXT}"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO TensorFlow Lite Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino"
     ]
    },
    "name": "libopenvino-tensorflow-lite-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_tensorflow_lite.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino_tensorflow_lite_frontend.2023.0.1${SHLIB_EXT}"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Intel\u00AE CPU plugin"
    },
    "build": {
     "run_exports": [
      "libopenvino-intel-cpu-plugin"
     ],
     "skip": true
    },
    "name": "libopenvino-intel-cpu-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml >=1.12.1",
      "tbb-devel =2021.5",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_cpu.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.0.1/libopenvino_intel_cpu_plugin.so"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO ARM\u00AE CPU plugin"
    },
    "build": {
     "run_exports": [
      "libopenvino-arm-cpu-plugin"
     ]
    },
    "name": "libopenvino-arm-cpu-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml >=1.12.1",
      "tbb-devel =2021.5",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_cpu.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.0.1/libopenvino_arm_cpu_plugin.so"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Intel\u00AE GPU plugin"
    },
    "build": {
     "run_exports": [
      "libopenvino-intel-gpu-plugin"
     ],
     "skip": true
    },
    "name": "libopenvino-intel-gpu-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "tbb-devel =2021.5",
      "clhpp",
      "pugixml >=1.12.1",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_gpu.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.0.1/libopenvino_intel_gpu_plugin.so"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Auto plugin"
    },
    "build": {
     "run_exports": [
      "libopenvino-auto-plugin"
     ]
    },
    "name": "libopenvino-auto-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "tbb-devel =2021.5",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_auto.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.0.1/libopenvino_auto_plugin.so"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Auto Batch plugin"
    },
    "build": {
     "run_exports": [
      "libopenvino-auto-batch-plugin"
     ]
    },
    "name": "libopenvino-auto-batch-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_batch.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.0.1/libopenvino_auto_batch_plugin.so"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Hetero plugin"
    },
    "build": {
     "run_exports": [
      "libopenvino-hetero-plugin"
     ]
    },
    "name": "libopenvino-hetero-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml >=1.12.1",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_hetero.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.0.1/libopenvino_hetero_plugin.so"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "name": "openvino",
    "script": "install/install_dev.sh"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Core Runtime library"
    },
    "build": {
     "run_exports": [
      "libopenvino"
     ]
    },
    "name": "libopenvino",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml >=1.12.1",
      "tbb-devel =2021.5"
     ]
    },
    "script": "install/install.sh",
    "test": {
     "commands": [
      "if not exist %LIBRARY_BIN%\\\\openvino%SHLIB_EXT% exit 1",
      "if not exist %LIBRARY_BIN%\\\\openvino_c%SHLIB_EXT% exit 1"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO IR Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino"
     ]
    },
    "name": "libopenvino-ir-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml >=1.12.1",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_ir.sh",
    "test": {
     "commands": [
      "if not exist %LIBRARY_BIN%\\\\openvino_ir_frontend%SHLIB_EXT% exit 1"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO ONNX Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino"
     ]
    },
    "name": "libopenvino-onnx-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_onnx.sh",
    "test": {
     "commands": [
      "if not exist %LIBRARY_BIN%\\\\openvino_onnx_frontend%SHLIB_EXT% exit 1"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Paddle Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino"
     ]
    },
    "name": "libopenvino-paddle-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_paddle.sh",
    "test": {
     "commands": [
      "if not exist %LIBRARY_BIN%\\\\openvino_paddle_frontend%SHLIB_EXT% exit 1"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Pytorch Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino"
     ]
    },
    "name": "libopenvino-pytorch-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_pytorch.sh",
    "test": {
     "commands": [
      "if not exist %LIBRARY_BIN%\\\\openvino_pytorch_frontend%SHLIB_EXT% exit 1"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO TensorFlow Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino"
     ]
    },
    "name": "libopenvino-tensorflow-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libopenvino",
      "snappy =1.1.10"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_tensorflow.sh",
    "test": {
     "commands": [
      "if not exist %LIBRARY_BIN%\\\\openvino_tensorflow_frontend%SHLIB_EXT% exit 1"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO TensorFlow Lite Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino"
     ]
    },
    "name": "libopenvino-tensorflow-lite-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_tensorflow_lite.sh",
    "test": {
     "commands": [
      "if not exist %LIBRARY_BIN%\\\\openvino_tensorflow_lite_frontend%SHLIB_EXT% exit 1"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Intel\u00AE CPU plugin"
    },
    "build": {
     "run_exports": [
      "libopenvino-intel-cpu-plugin"
     ]
    },
    "name": "libopenvino-intel-cpu-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml >=1.12.1",
      "tbb-devel =2021.5",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_cpu.sh",
    "test": {
     "commands": [
      "if not exist %LIBRARY_BIN%\\\\openvino-2023.0.1\\\\openvino_intel_cpu_plugin%SHLIB_EXT% exit 1"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO ARM\u00AE CPU plugin"
    },
    "build": {
     "run_exports": [
      "libopenvino-arm-cpu-plugin"
     ],
     "skip": true
    },
    "name": "libopenvino-arm-cpu-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml >=1.12.1",
      "tbb-devel =2021.5",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_cpu.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.0.1/libopenvino_arm_cpu_plugin.so"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Intel\u00AE GPU plugin"
    },
    "build": {
     "run_exports": [
      "libopenvino-intel-gpu-plugin"
     ]
    },
    "name": "libopenvino-intel-gpu-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "tbb-devel =2021.5",
      "clhpp",
      "khronos-opencl-icd-loader",
      "pugixml >=1.12.1",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_gpu.sh",
    "test": {
     "commands": [
      "if not exist %LIBRARY_BIN%\\\\openvino-2023.0.1\\\\openvino_intel_gpu_plugin%SHLIB_EXT% exit 1"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Auto plugin"
    },
    "build": {
     "run_exports": [
      "libopenvino-auto-plugin"
     ]
    },
    "name": "libopenvino-auto-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "tbb-devel =2021.5",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_auto.sh",
    "test": {
     "commands": [
      "if not exist %LIBRARY_BIN%\\\\openvino-2023.0.1\\\\openvino_auto_plugin%SHLIB_EXT% exit 1"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Auto Batch plugin"
    },
    "build": {
     "run_exports": [
      "libopenvino-auto-batch-plugin"
     ]
    },
    "name": "libopenvino-auto-batch-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_batch.sh",
    "test": {
     "commands": [
      "if not exist %LIBRARY_BIN%\\\\openvino-2023.0.1\\\\openvino_auto_batch_plugin%SHLIB_EXT% exit 1"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Hetero plugin"
    },
    "build": {
     "run_exports": [
      "libopenvino-hetero-plugin"
     ]
    },
    "name": "libopenvino-hetero-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml >=1.12.1",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_hetero.sh",
    "test": {
     "commands": [
      "if not exist %LIBRARY_BIN%\\\\openvino-2023.0.1\\\\openvino_hetero_plugin%SHLIB_EXT% exit 1"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "name": "openvino",
    "script": "install/install_dev.sh"
   }
  ],
  "package": {
   "name": "openvino",
   "version": "2023.0.1"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "git",
    "ninja",
    "pkg-config",
    "cmake >=3.15",
    "python >=3.7",
    "libprotobuf =3.20.3",
    "flatbuffers =23.3.3",
    "sysroot_linux-64 =2.17",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "git",
    "ninja",
    "pkg-config",
    "scons",
    "cmake >=3.15",
    "python >=3.7",
    "libprotobuf =3.20.3",
    "flatbuffers =23.3.3",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "git",
    "ninja",
    "pkg-config",
    "cmake >=3.15",
    "python >=3.7",
    "libprotobuf =3.20.3",
    "flatbuffers =23.3.3",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "git",
    "ninja",
    "pkg-config",
    "scons",
    "cmake >=3.15",
    "python >=3.7",
    "libprotobuf =3.20.3",
    "flatbuffers =23.3.3",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "git",
    "ninja",
    "pkg-config",
    "cmake >=3.15",
    "python >=3.7",
    "libprotobuf =3.20.3",
    "flatbuffers =23.3.3"
   ],
   "host": [
    "tbb-devel =2021.5",
    "snappy",
    "ocl-icd",
    "clhpp",
    "pugixml >=1.12.1",
    "xbyak >=6.69.1",
    "libprotobuf-static =3.20.3",
    "tbb-devel =2021.5",
    "snappy",
    "pugixml >=1.12.1",
    "libprotobuf-static =3.20.3",
    "tbb-devel =2021.5",
    "snappy",
    "pugixml >=1.12.1",
    "xbyak >=6.69.1",
    "libprotobuf-static =3.20.3",
    "tbb-devel =2021.5",
    "snappy",
    "pugixml >=1.12.1",
    "libprotobuf-static =3.20.3",
    "tbb-devel =2021.5",
    "snappy",
    "clhpp",
    "khronos-opencl-icd-loader",
    "pugixml >=1.12.1",
    "xbyak >=6.69.1",
    "libprotobuf-static"
   ],
   "run": [
    "libopenvino",
    "libopenvino-intel-cpu-plugin",
    "libopenvino-intel-gpu-plugin",
    "libopenvino-auto-plugin",
    "libopenvino-hetero-plugin",
    "libopenvino-auto-batch-plugin",
    "libopenvino-ir-frontend",
    "libopenvino-onnx-frontend",
    "libopenvino-paddle-frontend",
    "libopenvino-pytorch-frontend",
    "libopenvino-tensorflow-frontend",
    "libopenvino-tensorflow-lite-frontend",
    "libopenvino",
    "libopenvino-arm-cpu-plugin",
    "libopenvino-auto-plugin",
    "libopenvino-hetero-plugin",
    "libopenvino-auto-batch-plugin",
    "libopenvino-ir-frontend",
    "libopenvino-onnx-frontend",
    "libopenvino-paddle-frontend",
    "libopenvino-pytorch-frontend",
    "libopenvino-tensorflow-frontend",
    "libopenvino-tensorflow-lite-frontend",
    "libopenvino",
    "libopenvino-intel-cpu-plugin",
    "libopenvino-auto-plugin",
    "libopenvino-hetero-plugin",
    "libopenvino-auto-batch-plugin",
    "libopenvino-ir-frontend",
    "libopenvino-onnx-frontend",
    "libopenvino-paddle-frontend",
    "libopenvino-pytorch-frontend",
    "libopenvino-tensorflow-frontend",
    "libopenvino-tensorflow-lite-frontend",
    "libopenvino",
    "libopenvino-arm-cpu-plugin",
    "libopenvino-auto-plugin",
    "libopenvino-hetero-plugin",
    "libopenvino-auto-batch-plugin",
    "libopenvino-ir-frontend",
    "libopenvino-onnx-frontend",
    "libopenvino-paddle-frontend",
    "libopenvino-pytorch-frontend",
    "libopenvino-tensorflow-frontend",
    "libopenvino-tensorflow-lite-frontend",
    "libopenvino",
    "libopenvino-intel-cpu-plugin",
    "libopenvino-intel-gpu-plugin",
    "libopenvino-auto-plugin",
    "libopenvino-hetero-plugin",
    "libopenvino-auto-batch-plugin",
    "libopenvino-ir-frontend",
    "libopenvino-onnx-frontend",
    "libopenvino-paddle-frontend",
    "libopenvino-pytorch-frontend",
    "libopenvino-tensorflow-frontend",
    "libopenvino-tensorflow-lite-frontend"
   ]
  },
  "source": [
   {
    "patches": [
     "patches/005-cross-compilation-macos.patch"
    ],
    "sha256": "c14cb22f5191a75ea15659c62baceb71333dc9ecf62139ce513f3e81e4544651",
    "url": "https://github.com/openvinotoolkit/openvino/archive/refs/tags/2023.0.1.tar.gz"
   },
   {
    "folder": "thirdparty/xbyak",
    "sha256": "7eb64e2c18527824402b16f26c6118ba82f40f57fe6e3ab05c6e2883246a04f1",
    "url": "https://github.com/herumi/xbyak/archive/refs/tags/v6.69.tar.gz"
   },
   {
    "folder": "src/plugins/intel_cpu/thirdparty/onednn",
    "sha256": "52921b3efab33d1710971c67318e8c00ee102b6369e4e9cea8fdf91a1d68e38e",
    "url": "https://github.com/openvinotoolkit/oneDNN/archive/1c7bfabf1b26e6fb95fea1613e1d3d2bef1f6b54.tar.gz"
   },
   {
    "folder": "src/plugins/intel_gpu/thirdparty/onednn_gpu",
    "sha256": "da57c2298a8e001718902f0b65b6d92c4a7897b35467e23bc24996dde43ec47b",
    "url": "https://github.com/oneapi-src/oneDNN/archive/f27dedbfc093f51032a4580198bb80579440dc15.tar.gz"
   },
   {
    "folder": "thirdparty/ade",
    "sha256": "db7759cc32107e713b9e503ddf71a54ba2c80de07daefcb1aa315507e706ce07",
    "url": "https://github.com/opencv/ade/archive/58b2595a1a95cc807be8bf6222f266a9a1f393a9.tar.gz"
   },
   {
    "folder": "thirdparty/onnx/onnx",
    "sha256": "090d3e10ec662a98a2a72f1bf053f793efc645824f0d4b779e0ce47468a0890e",
    "url": "https://github.com/onnx/onnx/archive/refs/tags/v1.13.1.tar.gz"
   },
   {
    "patches": [
     "patches/003-lin-arm64-compute-lib.patch",
     "patches/005-cross-compilation-macos.patch"
    ],
    "sha256": "c14cb22f5191a75ea15659c62baceb71333dc9ecf62139ce513f3e81e4544651",
    "url": "https://github.com/openvinotoolkit/openvino/archive/refs/tags/2023.0.1.tar.gz"
   },
   {
    "folder": "src/plugins/intel_cpu/thirdparty/ComputeLibrary",
    "sha256": "c3a443e26539f866969242e690cf0651ef629149741ee18732f954c734da6763",
    "url": "https://github.com/ARM-software/ComputeLibrary/archive/refs/tags/v23.02.1.tar.gz"
   },
   {
    "folder": "thirdparty/xbyak",
    "sha256": "7eb64e2c18527824402b16f26c6118ba82f40f57fe6e3ab05c6e2883246a04f1",
    "url": "https://github.com/herumi/xbyak/archive/refs/tags/v6.69.tar.gz"
   },
   {
    "folder": "src/plugins/intel_cpu/thirdparty/onednn",
    "sha256": "52921b3efab33d1710971c67318e8c00ee102b6369e4e9cea8fdf91a1d68e38e",
    "url": "https://github.com/openvinotoolkit/oneDNN/archive/1c7bfabf1b26e6fb95fea1613e1d3d2bef1f6b54.tar.gz"
   },
   {
    "folder": "thirdparty/ade",
    "sha256": "db7759cc32107e713b9e503ddf71a54ba2c80de07daefcb1aa315507e706ce07",
    "url": "https://github.com/opencv/ade/archive/58b2595a1a95cc807be8bf6222f266a9a1f393a9.tar.gz"
   },
   {
    "folder": "thirdparty/onnx/onnx",
    "sha256": "090d3e10ec662a98a2a72f1bf053f793efc645824f0d4b779e0ce47468a0890e",
    "url": "https://github.com/onnx/onnx/archive/refs/tags/v1.13.1.tar.gz"
   },
   {
    "patches": [
     "patches/005-cross-compilation-macos.patch"
    ],
    "sha256": "c14cb22f5191a75ea15659c62baceb71333dc9ecf62139ce513f3e81e4544651",
    "url": "https://github.com/openvinotoolkit/openvino/archive/refs/tags/2023.0.1.tar.gz"
   },
   {
    "folder": "thirdparty/xbyak",
    "sha256": "7eb64e2c18527824402b16f26c6118ba82f40f57fe6e3ab05c6e2883246a04f1",
    "url": "https://github.com/herumi/xbyak/archive/refs/tags/v6.69.tar.gz"
   },
   {
    "folder": "src/plugins/intel_cpu/thirdparty/onednn",
    "sha256": "52921b3efab33d1710971c67318e8c00ee102b6369e4e9cea8fdf91a1d68e38e",
    "url": "https://github.com/openvinotoolkit/oneDNN/archive/1c7bfabf1b26e6fb95fea1613e1d3d2bef1f6b54.tar.gz"
   },
   {
    "folder": "thirdparty/ade",
    "sha256": "db7759cc32107e713b9e503ddf71a54ba2c80de07daefcb1aa315507e706ce07",
    "url": "https://github.com/opencv/ade/archive/58b2595a1a95cc807be8bf6222f266a9a1f393a9.tar.gz"
   },
   {
    "folder": "thirdparty/onnx/onnx",
    "sha256": "090d3e10ec662a98a2a72f1bf053f793efc645824f0d4b779e0ce47468a0890e",
    "url": "https://github.com/onnx/onnx/archive/refs/tags/v1.13.1.tar.gz"
   },
   {
    "patches": [
     "patches/004-mha-build-fix.patch",
     "patches/005-cross-compilation-macos.patch"
    ],
    "sha256": "c14cb22f5191a75ea15659c62baceb71333dc9ecf62139ce513f3e81e4544651",
    "url": "https://github.com/openvinotoolkit/openvino/archive/refs/tags/2023.0.1.tar.gz"
   },
   {
    "folder": "src/plugins/intel_cpu/thirdparty/ComputeLibrary",
    "sha256": "c3a443e26539f866969242e690cf0651ef629149741ee18732f954c734da6763",
    "url": "https://github.com/ARM-software/ComputeLibrary/archive/refs/tags/v23.02.1.tar.gz"
   },
   {
    "folder": "thirdparty/xbyak",
    "sha256": "7eb64e2c18527824402b16f26c6118ba82f40f57fe6e3ab05c6e2883246a04f1",
    "url": "https://github.com/herumi/xbyak/archive/refs/tags/v6.69.tar.gz"
   },
   {
    "folder": "src/plugins/intel_cpu/thirdparty/onednn",
    "sha256": "52921b3efab33d1710971c67318e8c00ee102b6369e4e9cea8fdf91a1d68e38e",
    "url": "https://github.com/openvinotoolkit/oneDNN/archive/1c7bfabf1b26e6fb95fea1613e1d3d2bef1f6b54.tar.gz"
   },
   {
    "folder": "thirdparty/ade",
    "sha256": "db7759cc32107e713b9e503ddf71a54ba2c80de07daefcb1aa315507e706ce07",
    "url": "https://github.com/opencv/ade/archive/58b2595a1a95cc807be8bf6222f266a9a1f393a9.tar.gz"
   },
   {
    "folder": "thirdparty/onnx/onnx",
    "sha256": "090d3e10ec662a98a2a72f1bf053f793efc645824f0d4b779e0ce47468a0890e",
    "url": "https://github.com/onnx/onnx/archive/refs/tags/v1.13.1.tar.gz"
   },
   {
    "patches": [
     "patches/001-win64-find-ocl.patch",
     "patches/005-cross-compilation-macos.patch",
     "patches/006-remove-mp.patch"
    ],
    "sha256": "c14cb22f5191a75ea15659c62baceb71333dc9ecf62139ce513f3e81e4544651",
    "url": "https://github.com/openvinotoolkit/openvino/archive/refs/tags/2023.0.1.tar.gz"
   },
   {
    "folder": "thirdparty/xbyak",
    "sha256": "7eb64e2c18527824402b16f26c6118ba82f40f57fe6e3ab05c6e2883246a04f1",
    "url": "https://github.com/herumi/xbyak/archive/refs/tags/v6.69.tar.gz"
   },
   {
    "folder": "src/plugins/intel_cpu/thirdparty/onednn",
    "sha256": "52921b3efab33d1710971c67318e8c00ee102b6369e4e9cea8fdf91a1d68e38e",
    "url": "https://github.com/openvinotoolkit/oneDNN/archive/1c7bfabf1b26e6fb95fea1613e1d3d2bef1f6b54.tar.gz"
   },
   {
    "folder": "src/plugins/intel_gpu/thirdparty/onednn_gpu",
    "sha256": "da57c2298a8e001718902f0b65b6d92c4a7897b35467e23bc24996dde43ec47b",
    "url": "https://github.com/oneapi-src/oneDNN/archive/f27dedbfc093f51032a4580198bb80579440dc15.tar.gz"
   },
   {
    "folder": "thirdparty/ade",
    "sha256": "db7759cc32107e713b9e503ddf71a54ba2c80de07daefcb1aa315507e706ce07",
    "url": "https://github.com/opencv/ade/archive/58b2595a1a95cc807be8bf6222f266a9a1f393a9.tar.gz"
   },
   {
    "folder": "thirdparty/onnx/onnx",
    "sha256": "090d3e10ec662a98a2a72f1bf053f793efc645824f0d4b779e0ce47468a0890e",
    "url": "https://github.com/onnx/onnx/archive/refs/tags/v1.13.1.tar.gz"
   }
  ],
  "test": {
   "commands": [
    "export CMAKE_GENERATOR=Ninja",
    "test -f $PREFIX/lib/libopenvino${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopenvino_c${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopenvino_paddle_frontend${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopenvino_pytorch_frontend${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopenvino_onnx_frontend${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopenvino_tensorflow_frontend${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopenvino_tensorflow_lite_frontend${SHLIB_EXT}",
    "mkdir -p samples/cpp/thirdparty",
    "cp -R thirdparty/cnpy samples/cpp/thirdparty/cnpy",
    "cmake -S samples/cpp -B samples_cpp_build -DBIN_FOLDER=bin",
    "cmake --build samples_cpp_build --config Release --verbose",
    "./samples_cpp_build/bin/hello_query_device",
    "cp samples/cpp/CMakeLists.txt samples/c/CMakeLists.txt",
    "cmake -S samples/c -B samples_c_build -DBIN_FOLDER=bin",
    "cmake --build samples_c_build --config Release --verbose",
    "$CC snippets/openvino_available_devices.c $(pkg-config --cflags --libs pugixml tbb openvino) -Wl,-rpath,$PREFIX/lib -o openvino_devices_test",
    "if [[ $(./openvino_devices_test) != \"passed\" ]]; then exit 1 ; fi",
    "cmake -S snippets -B snippets_build",
    "cmake --build snippets_build --config Release --verbose",
    "if [[ $(./snippets_build/openvino_frontends_test) != 6 ]]; then exit 1 ; fi",
    "export CMAKE_GENERATOR=Ninja",
    "test -f $PREFIX/lib/libopenvino${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopenvino_c${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopenvino_paddle_frontend${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopenvino_pytorch_frontend${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopenvino_onnx_frontend${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopenvino_tensorflow_frontend${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopenvino_tensorflow_lite_frontend${SHLIB_EXT}",
    "mkdir -p samples/cpp/thirdparty",
    "cp -R thirdparty/cnpy samples/cpp/thirdparty/cnpy",
    "cmake -S samples/cpp -B samples_cpp_build -DBIN_FOLDER=bin",
    "cmake --build samples_cpp_build --config Release --verbose",
    "./samples_cpp_build/bin/hello_query_device",
    "cp samples/cpp/CMakeLists.txt samples/c/CMakeLists.txt",
    "cmake -S samples/c -B samples_c_build -DBIN_FOLDER=bin",
    "cmake --build samples_c_build --config Release --verbose",
    "$CC snippets/openvino_available_devices.c $(pkg-config --cflags --libs pugixml tbb openvino) -Wl,-rpath,$PREFIX/lib -o openvino_devices_test",
    "if [[ $(./openvino_devices_test) != \"passed\" ]]; then exit 1 ; fi",
    "cmake -S snippets -B snippets_build",
    "cmake --build snippets_build --config Release --verbose",
    "if [[ $(./snippets_build/openvino_frontends_test) != 6 ]]; then exit 1 ; fi",
    "export MACOSX_DEPLOYMENT_TARGET=10.9",
    "export CMAKE_GENERATOR=Ninja",
    "test -f $PREFIX/lib/libopenvino${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopenvino_c${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopenvino_paddle_frontend${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopenvino_pytorch_frontend${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopenvino_onnx_frontend${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopenvino_tensorflow_frontend${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopenvino_tensorflow_lite_frontend${SHLIB_EXT}",
    "mkdir -p samples/cpp/thirdparty",
    "cp -R thirdparty/cnpy samples/cpp/thirdparty/cnpy",
    "cmake -S samples/cpp -B samples_cpp_build -DBIN_FOLDER=bin",
    "cmake --build samples_cpp_build --config Release --verbose",
    "./samples_cpp_build/bin/hello_query_device",
    "cp samples/cpp/CMakeLists.txt samples/c/CMakeLists.txt",
    "cmake -S samples/c -B samples_c_build -DBIN_FOLDER=bin",
    "cmake --build samples_c_build --config Release --verbose",
    "$CC snippets/openvino_available_devices.c $(pkg-config --cflags --libs pugixml tbb openvino) -Wl,-rpath,$PREFIX/lib -o openvino_devices_test",
    "if [[ $(./openvino_devices_test) != \"passed\" ]]; then exit 1 ; fi",
    "cmake -S snippets -B snippets_build",
    "cmake --build snippets_build --config Release --verbose",
    "if [[ $(./snippets_build/openvino_frontends_test) != 6 ]]; then exit 1 ; fi",
    "export MACOSX_DEPLOYMENT_TARGET=11.0",
    "export CMAKE_GENERATOR=Ninja",
    "test -f $PREFIX/lib/libopenvino${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopenvino_c${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopenvino_paddle_frontend${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopenvino_pytorch_frontend${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopenvino_onnx_frontend${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopenvino_tensorflow_frontend${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopenvino_tensorflow_lite_frontend${SHLIB_EXT}",
    "mkdir -p samples/cpp/thirdparty",
    "cp -R thirdparty/cnpy samples/cpp/thirdparty/cnpy",
    "cmake -S samples/cpp -B samples_cpp_build -DBIN_FOLDER=bin",
    "cmake --build samples_cpp_build --config Release --verbose",
    "./samples_cpp_build/bin/hello_query_device",
    "cp samples/cpp/CMakeLists.txt samples/c/CMakeLists.txt",
    "cmake -S samples/c -B samples_c_build -DBIN_FOLDER=bin",
    "cmake --build samples_c_build --config Release --verbose",
    "$CC snippets/openvino_available_devices.c $(pkg-config --cflags --libs pugixml tbb openvino) -Wl,-rpath,$PREFIX/lib -o openvino_devices_test",
    "if [[ $(./openvino_devices_test) != \"passed\" ]]; then exit 1 ; fi",
    "cmake -S snippets -B snippets_build",
    "cmake --build snippets_build --config Release --verbose",
    "if [[ $(./snippets_build/openvino_frontends_test) != 6 ]]; then exit 1 ; fi",
    "if not exist %LIBRARY_BIN%\\\\openvino%SHLIB_EXT% exit 1",
    "if not exist %LIBRARY_BIN%\\\\openvino_c%SHLIB_EXT% exit 1",
    "if not exist %LIBRARY_BIN%\\\\openvino_paddle_frontend%SHLIB_EXT% exit 1",
    "if not exist %LIBRARY_BIN%\\\\openvino_pytorch_frontend%SHLIB_EXT% exit 1",
    "if not exist %LIBRARY_BIN%\\\\openvino_onnx_frontend%SHLIB_EXT% exit 1",
    "if not exist %LIBRARY_BIN%\\\\openvino_tensorflow_frontend%SHLIB_EXT% exit 1",
    "if not exist %LIBRARY_BIN%\\\\openvino_tensorflow_lite_frontend%SHLIB_EXT% exit 1",
    "mkdir -p samples\\\\cpp\\\\thirdparty",
    "cp -R thirdparty\\\\cnpy samples\\\\cpp\\\\thirdparty\\\\cnpy",
    "cmake -S samples\\\\cpp -B samples_cpp_build -DBIN_FOLDER=bin",
    "cmake --build samples_cpp_build --config Release --verbose",
    ".\\\\samples_cpp_build\\\\bin\\\\Release\\\\hello_query_device.exe",
    "cp samples\\\\cpp\\\\CMakeLists.txt samples\\\\c\\\\CMakeLists.txt",
    "cmake -S samples\\\\c -B samples_c_build -DBIN_FOLDER=bin",
    "cmake --build samples_c_build --config Release --verbose",
    "cmake -S snippets -B snippets_build",
    "cmake --build snippets_build --config Release --verbose"
   ],
   "files": [
    "snippets/",
    "snippets/",
    "snippets/",
    "snippets/",
    "snippets/"
   ],
   "requires": [
    "cxx_compiler_stub",
    "c_compiler_stub",
    "ninja",
    "cmake >=3.15",
    "pkg-config",
    "zlib",
    "nlohmann_json",
    "sysroot_linux-64 =2.17",
    "tbb-devel =2021.5",
    "opencv",
    "gflags",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "ninja",
    "cmake >=3.15",
    "pkg-config",
    "zlib",
    "nlohmann_json",
    "tbb-devel =2021.5",
    "opencv",
    "gflags",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "ninja",
    "cmake >=3.15",
    "pkg-config",
    "zlib",
    "nlohmann_json",
    "tbb-devel =2021.5",
    "opencv",
    "gflags",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "ninja",
    "cmake >=3.15",
    "pkg-config",
    "zlib",
    "nlohmann_json",
    "tbb-devel =2021.5",
    "opencv",
    "gflags",
    "cxx_compiler_stub",
    "c_compiler_stub",
    "ninja",
    "cmake >=3.15",
    "pkg-config",
    "zlib",
    "nlohmann_json",
    "tbb-devel =2021.5",
    "opencv",
    "gflags"
   ],
   "source_files": [
    "samples",
    "thirdparty/cnpy",
    "samples",
    "thirdparty/cnpy",
    "samples",
    "thirdparty/cnpy",
    "samples",
    "thirdparty/cnpy",
    "samples",
    "thirdparty/cnpy"
   ]
  }
 },
 "name": "openvino",
 "osx_64_meta_yaml": {
  "about": {
   "description": "Intel\u00AE Distribution of OpenVINO\u2122 toolkit is an open-source toolkit for\noptimizing and deploying AI inference. It can be used to develop\napplications and solutions based on deep learning tasks, such as:\nemulation of human vision, automatic speech recognition, natural\nlanguage processing, recommendation systems, etc. It provides\nhigh-performance and rich deployment options, from edge to cloud\n\nInstalling OpenVINO Runtime from Conda Forge is recommended for C++ developers,\nas it provides only the C++ / C Runtime API.\nIf you work with Python, consider other OpenVINO distribution channels:\nhttps://www.intel.com/content/www/us/en/developer/tools/openvino-toolkit/download.html\n",
   "dev_url": "https://github.com/openvinotoolkit/openvino",
   "doc_url": "https://docs.openvino.ai/latest/index.html",
   "home": "https://github.com/openvinotoolkit/openvino",
   "license": "Apache-2.0",
   "license_family": "Apache",
   "license_file": [
    "LICENSE",
    "third-party-programs.txt",
    "onednn_third-party-programs.txt",
    "runtime-third-party-programs.txt"
   ],
   "summary": "Intel\u00AE Distribution of OpenVINO\u2122 Toolkit"
  },
  "build": {
   "ignore_run_exports_from": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "tbb-devel"
   ],
   "number": "3",
   "run_exports": [
    "libopenvino",
    "libopenvino-intel-cpu-plugin",
    "libopenvino-auto-plugin",
    "libopenvino-hetero-plugin",
    "libopenvino-auto-batch-plugin",
    "libopenvino-ir-frontend",
    "libopenvino-onnx-frontend",
    "libopenvino-paddle-frontend",
    "libopenvino-pytorch-frontend",
    "libopenvino-tensorflow-frontend",
    "libopenvino-tensorflow-lite-frontend"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "ilya-lavrenov",
    "artanokhov",
    "evgenytalanin-intel",
    "RaguzovaTatyana"
   ]
  },
  "outputs": [
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Core Runtime library"
    },
    "build": {
     "run_exports": [
      "libopenvino"
     ]
    },
    "name": "libopenvino",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml >=1.12.1",
      "tbb-devel =2021.5"
     ]
    },
    "script": "install/install.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino.2023.0.1${SHLIB_EXT}",
      "test -f $PREFIX/lib/libopenvino_c.2023.0.1${SHLIB_EXT}"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO IR Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino"
     ]
    },
    "name": "libopenvino-ir-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml >=1.12.1",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_ir.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino_ir_frontend.2023.0.1${SHLIB_EXT}"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO ONNX Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino"
     ]
    },
    "name": "libopenvino-onnx-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_onnx.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino_onnx_frontend.2023.0.1${SHLIB_EXT}"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Paddle Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino"
     ]
    },
    "name": "libopenvino-paddle-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_paddle.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino_paddle_frontend.2023.0.1${SHLIB_EXT}"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Pytorch Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino"
     ]
    },
    "name": "libopenvino-pytorch-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_pytorch.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino_pytorch_frontend.2023.0.1${SHLIB_EXT}"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO TensorFlow Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino"
     ]
    },
    "name": "libopenvino-tensorflow-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libopenvino",
      "snappy =1.1.10"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_tensorflow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino_tensorflow_frontend.2023.0.1${SHLIB_EXT}"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO TensorFlow Lite Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino"
     ]
    },
    "name": "libopenvino-tensorflow-lite-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_tensorflow_lite.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino_tensorflow_lite_frontend.2023.0.1${SHLIB_EXT}"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Intel\u00AE CPU plugin"
    },
    "build": {
     "run_exports": [
      "libopenvino-intel-cpu-plugin"
     ]
    },
    "name": "libopenvino-intel-cpu-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml >=1.12.1",
      "tbb-devel =2021.5",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_cpu.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.0.1/libopenvino_intel_cpu_plugin.so"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO ARM\u00AE CPU plugin"
    },
    "build": {
     "run_exports": [
      "libopenvino-arm-cpu-plugin"
     ],
     "skip": true
    },
    "name": "libopenvino-arm-cpu-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml >=1.12.1",
      "tbb-devel =2021.5",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_cpu.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.0.1/libopenvino_arm_cpu_plugin.so"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Intel\u00AE GPU plugin"
    },
    "build": {
     "run_exports": [
      "libopenvino-intel-gpu-plugin"
     ],
     "skip": true
    },
    "name": "libopenvino-intel-gpu-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "tbb-devel =2021.5",
      "clhpp",
      "pugixml >=1.12.1",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_gpu.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.0.1/libopenvino_intel_gpu_plugin.so"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Auto plugin"
    },
    "build": {
     "run_exports": [
      "libopenvino-auto-plugin"
     ]
    },
    "name": "libopenvino-auto-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "tbb-devel =2021.5",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_auto.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.0.1/libopenvino_auto_plugin.so"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Auto Batch plugin"
    },
    "build": {
     "run_exports": [
      "libopenvino-auto-batch-plugin"
     ]
    },
    "name": "libopenvino-auto-batch-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_batch.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.0.1/libopenvino_auto_batch_plugin.so"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Hetero plugin"
    },
    "build": {
     "run_exports": [
      "libopenvino-hetero-plugin"
     ]
    },
    "name": "libopenvino-hetero-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml >=1.12.1",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_hetero.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.0.1/libopenvino_hetero_plugin.so"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "name": "openvino",
    "script": "install/install_dev.sh"
   }
  ],
  "package": {
   "name": "openvino",
   "version": "2023.0.1"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "git",
    "ninja",
    "pkg-config",
    "cmake >=3.15",
    "python >=3.7",
    "libprotobuf =3.20.3",
    "flatbuffers =23.3.3"
   ],
   "host": [
    "tbb-devel =2021.5",
    "snappy",
    "pugixml >=1.12.1",
    "xbyak >=6.69.1",
    "libprotobuf-static =3.20.3"
   ],
   "run": [
    "libopenvino",
    "libopenvino-intel-cpu-plugin",
    "libopenvino-auto-plugin",
    "libopenvino-hetero-plugin",
    "libopenvino-auto-batch-plugin",
    "libopenvino-ir-frontend",
    "libopenvino-onnx-frontend",
    "libopenvino-paddle-frontend",
    "libopenvino-pytorch-frontend",
    "libopenvino-tensorflow-frontend",
    "libopenvino-tensorflow-lite-frontend"
   ]
  },
  "source": [
   {
    "patches": [
     "patches/005-cross-compilation-macos.patch"
    ],
    "sha256": "c14cb22f5191a75ea15659c62baceb71333dc9ecf62139ce513f3e81e4544651",
    "url": "https://github.com/openvinotoolkit/openvino/archive/refs/tags/2023.0.1.tar.gz"
   },
   {
    "folder": "thirdparty/xbyak",
    "sha256": "7eb64e2c18527824402b16f26c6118ba82f40f57fe6e3ab05c6e2883246a04f1",
    "url": "https://github.com/herumi/xbyak/archive/refs/tags/v6.69.tar.gz"
   },
   {
    "folder": "src/plugins/intel_cpu/thirdparty/onednn",
    "sha256": "52921b3efab33d1710971c67318e8c00ee102b6369e4e9cea8fdf91a1d68e38e",
    "url": "https://github.com/openvinotoolkit/oneDNN/archive/1c7bfabf1b26e6fb95fea1613e1d3d2bef1f6b54.tar.gz"
   },
   {
    "folder": "thirdparty/ade",
    "sha256": "db7759cc32107e713b9e503ddf71a54ba2c80de07daefcb1aa315507e706ce07",
    "url": "https://github.com/opencv/ade/archive/58b2595a1a95cc807be8bf6222f266a9a1f393a9.tar.gz"
   },
   {
    "folder": "thirdparty/onnx/onnx",
    "sha256": "090d3e10ec662a98a2a72f1bf053f793efc645824f0d4b779e0ce47468a0890e",
    "url": "https://github.com/onnx/onnx/archive/refs/tags/v1.13.1.tar.gz"
   }
  ],
  "test": {
   "commands": [
    "export MACOSX_DEPLOYMENT_TARGET=10.9",
    "export CMAKE_GENERATOR=Ninja",
    "test -f $PREFIX/lib/libopenvino${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopenvino_c${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopenvino_paddle_frontend${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopenvino_pytorch_frontend${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopenvino_onnx_frontend${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopenvino_tensorflow_frontend${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopenvino_tensorflow_lite_frontend${SHLIB_EXT}",
    "mkdir -p samples/cpp/thirdparty",
    "cp -R thirdparty/cnpy samples/cpp/thirdparty/cnpy",
    "cmake -S samples/cpp -B samples_cpp_build -DBIN_FOLDER=bin",
    "cmake --build samples_cpp_build --config Release --verbose",
    "./samples_cpp_build/bin/hello_query_device",
    "cp samples/cpp/CMakeLists.txt samples/c/CMakeLists.txt",
    "cmake -S samples/c -B samples_c_build -DBIN_FOLDER=bin",
    "cmake --build samples_c_build --config Release --verbose",
    "$CC snippets/openvino_available_devices.c $(pkg-config --cflags --libs pugixml tbb openvino) -Wl,-rpath,$PREFIX/lib -o openvino_devices_test",
    "if [[ $(./openvino_devices_test) != \"passed\" ]]; then exit 1 ; fi",
    "cmake -S snippets -B snippets_build",
    "cmake --build snippets_build --config Release --verbose",
    "if [[ $(./snippets_build/openvino_frontends_test) != 6 ]]; then exit 1 ; fi"
   ],
   "files": [
    "snippets/"
   ],
   "requires": [
    "cxx_compiler_stub",
    "c_compiler_stub",
    "ninja",
    "cmake >=3.15",
    "pkg-config",
    "zlib",
    "nlohmann_json",
    "tbb-devel =2021.5",
    "opencv",
    "gflags"
   ],
   "source_files": [
    "samples",
    "thirdparty/cnpy"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "flatbuffers",
    "git",
    "libprotobuf",
    "ninja",
    "pkg-config",
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "clhpp",
    "libopenvino",
    "libprotobuf-static",
    "pugixml",
    "snappy",
    "tbb-devel",
    "xbyak"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "libopenvino",
    "libopenvino-auto-batch-plugin",
    "libopenvino-auto-plugin",
    "libopenvino-hetero-plugin",
    "libopenvino-intel-cpu-plugin",
    "libopenvino-ir-frontend",
    "libopenvino-onnx-frontend",
    "libopenvino-paddle-frontend",
    "libopenvino-pytorch-frontend",
    "libopenvino-tensorflow-frontend",
    "libopenvino-tensorflow-lite-frontend"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "gflags",
    "ninja",
    "nlohmann_json",
    "opencv",
    "pkg-config",
    "tbb-devel",
    "zlib"
   ]
  }
 },
 "osx_arm64_meta_yaml": {
  "about": {
   "description": "Intel\u00AE Distribution of OpenVINO\u2122 toolkit is an open-source toolkit for\noptimizing and deploying AI inference. It can be used to develop\napplications and solutions based on deep learning tasks, such as:\nemulation of human vision, automatic speech recognition, natural\nlanguage processing, recommendation systems, etc. It provides\nhigh-performance and rich deployment options, from edge to cloud\n\nInstalling OpenVINO Runtime from Conda Forge is recommended for C++ developers,\nas it provides only the C++ / C Runtime API.\nIf you work with Python, consider other OpenVINO distribution channels:\nhttps://www.intel.com/content/www/us/en/developer/tools/openvino-toolkit/download.html\n",
   "dev_url": "https://github.com/openvinotoolkit/openvino",
   "doc_url": "https://docs.openvino.ai/latest/index.html",
   "home": "https://github.com/openvinotoolkit/openvino",
   "license": "Apache-2.0",
   "license_family": "Apache",
   "license_file": [
    "LICENSE",
    "third-party-programs.txt",
    "onednn_third-party-programs.txt",
    "runtime-third-party-programs.txt"
   ],
   "summary": "Intel\u00AE Distribution of OpenVINO\u2122 Toolkit"
  },
  "build": {
   "ignore_run_exports_from": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "tbb-devel"
   ],
   "number": "3",
   "run_exports": [
    "libopenvino",
    "libopenvino-arm-cpu-plugin",
    "libopenvino-auto-plugin",
    "libopenvino-hetero-plugin",
    "libopenvino-auto-batch-plugin",
    "libopenvino-ir-frontend",
    "libopenvino-onnx-frontend",
    "libopenvino-paddle-frontend",
    "libopenvino-pytorch-frontend",
    "libopenvino-tensorflow-frontend",
    "libopenvino-tensorflow-lite-frontend"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "ilya-lavrenov",
    "artanokhov",
    "evgenytalanin-intel",
    "RaguzovaTatyana"
   ]
  },
  "outputs": [
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Core Runtime library"
    },
    "build": {
     "run_exports": [
      "libopenvino"
     ]
    },
    "name": "libopenvino",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml >=1.12.1",
      "tbb-devel =2021.5"
     ]
    },
    "script": "install/install.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino.2023.0.1${SHLIB_EXT}",
      "test -f $PREFIX/lib/libopenvino_c.2023.0.1${SHLIB_EXT}"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO IR Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino"
     ]
    },
    "name": "libopenvino-ir-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml >=1.12.1",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_ir.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino_ir_frontend.2023.0.1${SHLIB_EXT}"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO ONNX Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino"
     ]
    },
    "name": "libopenvino-onnx-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_onnx.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino_onnx_frontend.2023.0.1${SHLIB_EXT}"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Paddle Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino"
     ]
    },
    "name": "libopenvino-paddle-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_paddle.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino_paddle_frontend.2023.0.1${SHLIB_EXT}"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Pytorch Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino"
     ]
    },
    "name": "libopenvino-pytorch-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_pytorch.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino_pytorch_frontend.2023.0.1${SHLIB_EXT}"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO TensorFlow Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino"
     ]
    },
    "name": "libopenvino-tensorflow-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libopenvino",
      "snappy =1.1.10"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_tensorflow.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino_tensorflow_frontend.2023.0.1${SHLIB_EXT}"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO TensorFlow Lite Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino"
     ]
    },
    "name": "libopenvino-tensorflow-lite-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_tensorflow_lite.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/libopenvino_tensorflow_lite_frontend.2023.0.1${SHLIB_EXT}"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Intel\u00AE CPU plugin"
    },
    "build": {
     "run_exports": [
      "libopenvino-intel-cpu-plugin"
     ],
     "skip": true
    },
    "name": "libopenvino-intel-cpu-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml >=1.12.1",
      "tbb-devel =2021.5",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_cpu.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.0.1/libopenvino_intel_cpu_plugin.so"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO ARM\u00AE CPU plugin"
    },
    "build": {
     "run_exports": [
      "libopenvino-arm-cpu-plugin"
     ]
    },
    "name": "libopenvino-arm-cpu-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml >=1.12.1",
      "tbb-devel =2021.5",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_cpu.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.0.1/libopenvino_arm_cpu_plugin.so"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Intel\u00AE GPU plugin"
    },
    "build": {
     "run_exports": [
      "libopenvino-intel-gpu-plugin"
     ],
     "skip": true
    },
    "name": "libopenvino-intel-gpu-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "tbb-devel =2021.5",
      "clhpp",
      "pugixml >=1.12.1",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_gpu.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.0.1/libopenvino_intel_gpu_plugin.so"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Auto plugin"
    },
    "build": {
     "run_exports": [
      "libopenvino-auto-plugin"
     ]
    },
    "name": "libopenvino-auto-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "tbb-devel =2021.5",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_auto.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.0.1/libopenvino_auto_plugin.so"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Auto Batch plugin"
    },
    "build": {
     "run_exports": [
      "libopenvino-auto-batch-plugin"
     ]
    },
    "name": "libopenvino-auto-batch-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_batch.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.0.1/libopenvino_auto_batch_plugin.so"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Hetero plugin"
    },
    "build": {
     "run_exports": [
      "libopenvino-hetero-plugin"
     ]
    },
    "name": "libopenvino-hetero-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml >=1.12.1",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_hetero.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.0.1/libopenvino_hetero_plugin.so"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "name": "openvino",
    "script": "install/install_dev.sh"
   }
  ],
  "package": {
   "name": "openvino",
   "version": "2023.0.1"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "git",
    "ninja",
    "pkg-config",
    "scons",
    "cmake >=3.15",
    "python >=3.7",
    "libprotobuf =3.20.3",
    "flatbuffers =23.3.3"
   ],
   "host": [
    "tbb-devel =2021.5",
    "snappy",
    "pugixml >=1.12.1",
    "libprotobuf-static =3.20.3"
   ],
   "run": [
    "libopenvino",
    "libopenvino-arm-cpu-plugin",
    "libopenvino-auto-plugin",
    "libopenvino-hetero-plugin",
    "libopenvino-auto-batch-plugin",
    "libopenvino-ir-frontend",
    "libopenvino-onnx-frontend",
    "libopenvino-paddle-frontend",
    "libopenvino-pytorch-frontend",
    "libopenvino-tensorflow-frontend",
    "libopenvino-tensorflow-lite-frontend"
   ]
  },
  "source": [
   {
    "patches": [
     "patches/004-mha-build-fix.patch",
     "patches/005-cross-compilation-macos.patch"
    ],
    "sha256": "c14cb22f5191a75ea15659c62baceb71333dc9ecf62139ce513f3e81e4544651",
    "url": "https://github.com/openvinotoolkit/openvino/archive/refs/tags/2023.0.1.tar.gz"
   },
   {
    "folder": "src/plugins/intel_cpu/thirdparty/ComputeLibrary",
    "sha256": "c3a443e26539f866969242e690cf0651ef629149741ee18732f954c734da6763",
    "url": "https://github.com/ARM-software/ComputeLibrary/archive/refs/tags/v23.02.1.tar.gz"
   },
   {
    "folder": "thirdparty/xbyak",
    "sha256": "7eb64e2c18527824402b16f26c6118ba82f40f57fe6e3ab05c6e2883246a04f1",
    "url": "https://github.com/herumi/xbyak/archive/refs/tags/v6.69.tar.gz"
   },
   {
    "folder": "src/plugins/intel_cpu/thirdparty/onednn",
    "sha256": "52921b3efab33d1710971c67318e8c00ee102b6369e4e9cea8fdf91a1d68e38e",
    "url": "https://github.com/openvinotoolkit/oneDNN/archive/1c7bfabf1b26e6fb95fea1613e1d3d2bef1f6b54.tar.gz"
   },
   {
    "folder": "thirdparty/ade",
    "sha256": "db7759cc32107e713b9e503ddf71a54ba2c80de07daefcb1aa315507e706ce07",
    "url": "https://github.com/opencv/ade/archive/58b2595a1a95cc807be8bf6222f266a9a1f393a9.tar.gz"
   },
   {
    "folder": "thirdparty/onnx/onnx",
    "sha256": "090d3e10ec662a98a2a72f1bf053f793efc645824f0d4b779e0ce47468a0890e",
    "url": "https://github.com/onnx/onnx/archive/refs/tags/v1.13.1.tar.gz"
   }
  ],
  "test": {
   "commands": [
    "export MACOSX_DEPLOYMENT_TARGET=11.0",
    "export CMAKE_GENERATOR=Ninja",
    "test -f $PREFIX/lib/libopenvino${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopenvino_c${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopenvino_paddle_frontend${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopenvino_pytorch_frontend${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopenvino_onnx_frontend${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopenvino_tensorflow_frontend${SHLIB_EXT}",
    "test -f $PREFIX/lib/libopenvino_tensorflow_lite_frontend${SHLIB_EXT}",
    "mkdir -p samples/cpp/thirdparty",
    "cp -R thirdparty/cnpy samples/cpp/thirdparty/cnpy",
    "cmake -S samples/cpp -B samples_cpp_build -DBIN_FOLDER=bin",
    "cmake --build samples_cpp_build --config Release --verbose",
    "./samples_cpp_build/bin/hello_query_device",
    "cp samples/cpp/CMakeLists.txt samples/c/CMakeLists.txt",
    "cmake -S samples/c -B samples_c_build -DBIN_FOLDER=bin",
    "cmake --build samples_c_build --config Release --verbose",
    "$CC snippets/openvino_available_devices.c $(pkg-config --cflags --libs pugixml tbb openvino) -Wl,-rpath,$PREFIX/lib -o openvino_devices_test",
    "if [[ $(./openvino_devices_test) != \"passed\" ]]; then exit 1 ; fi",
    "cmake -S snippets -B snippets_build",
    "cmake --build snippets_build --config Release --verbose",
    "if [[ $(./snippets_build/openvino_frontends_test) != 6 ]]; then exit 1 ; fi"
   ],
   "files": [
    "snippets/"
   ],
   "requires": [
    "cxx_compiler_stub",
    "c_compiler_stub",
    "ninja",
    "cmake >=3.15",
    "pkg-config",
    "zlib",
    "nlohmann_json",
    "tbb-devel =2021.5",
    "opencv",
    "gflags"
   ],
   "source_files": [
    "samples",
    "thirdparty/cnpy"
   ]
  }
 },
 "osx_arm64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "flatbuffers",
    "git",
    "libprotobuf",
    "ninja",
    "pkg-config",
    "python",
    "scons"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "clhpp",
    "libopenvino",
    "libprotobuf-static",
    "pugixml",
    "snappy",
    "tbb-devel"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "libopenvino",
    "libopenvino-arm-cpu-plugin",
    "libopenvino-auto-batch-plugin",
    "libopenvino-auto-plugin",
    "libopenvino-hetero-plugin",
    "libopenvino-ir-frontend",
    "libopenvino-onnx-frontend",
    "libopenvino-paddle-frontend",
    "libopenvino-pytorch-frontend",
    "libopenvino-tensorflow-frontend",
    "libopenvino-tensorflow-lite-frontend"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "gflags",
    "ninja",
    "nlohmann_json",
    "opencv",
    "pkg-config",
    "tbb-devel",
    "zlib"
   ]
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "libopenvino",
   "libopenvino-arm-cpu-plugin",
   "libopenvino-auto-batch-plugin",
   "libopenvino-auto-plugin",
   "libopenvino-hetero-plugin",
   "libopenvino-intel-cpu-plugin",
   "libopenvino-intel-gpu-plugin",
   "libopenvino-ir-frontend",
   "libopenvino-onnx-frontend",
   "libopenvino-paddle-frontend",
   "libopenvino-pytorch-frontend",
   "libopenvino-tensorflow-frontend",
   "libopenvino-tensorflow-lite-frontend",
   "openvino"
  ]
 },
 "parsing_error": false,
 "platforms": [
  "linux_64",
  "linux_aarch64",
  "osx_64",
  "osx_arm64",
  "win_64"
 ],
 "pr_info": {
  "__lazy_json__": "pr_info/openvino.json"
 },
 "raw_meta_yaml": "{% set name = \"openvino\" %}\n{% set version = \"2023.0.1\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  - url: https://github.com/openvinotoolkit/openvino/archive/refs/tags/2023.0.1.tar.gz\n    sha256: c14cb22f5191a75ea15659c62baceb71333dc9ecf62139ce513f3e81e4544651\n    patches:\n    - patches/001-win64-find-ocl.patch  # [win64]\n    - patches/003-lin-arm64-compute-lib.patch  # [aarch64]\n    - patches/004-mha-build-fix.patch  # [arm64]\n    - patches/005-cross-compilation-macos.patch\n    - patches/006-remove-mp.patch  # [win64]\n  - url: https://github.com/ARM-software/ComputeLibrary/archive/refs/tags/v23.02.1.tar.gz  # [aarch64 or arm64]\n    sha256: c3a443e26539f866969242e690cf0651ef629149741ee18732f954c734da6763  # [aarch64 or arm64]\n    folder: src/plugins/intel_cpu/thirdparty/ComputeLibrary  # [aarch64 or arm64]\n  - url: https://github.com/herumi/xbyak/archive/refs/tags/v6.69.tar.gz\n    sha256: 7eb64e2c18527824402b16f26c6118ba82f40f57fe6e3ab05c6e2883246a04f1\n    folder: thirdparty/xbyak\n  - url: https://github.com/openvinotoolkit/oneDNN/archive/1c7bfabf1b26e6fb95fea1613e1d3d2bef1f6b54.tar.gz\n    sha256: 52921b3efab33d1710971c67318e8c00ee102b6369e4e9cea8fdf91a1d68e38e\n    folder: src/plugins/intel_cpu/thirdparty/onednn\n  - url: https://github.com/oneapi-src/oneDNN/archive/f27dedbfc093f51032a4580198bb80579440dc15.tar.gz  # [win64 or linux64]\n    sha256: da57c2298a8e001718902f0b65b6d92c4a7897b35467e23bc24996dde43ec47b  # [win64 or linux64]\n    folder: src/plugins/intel_gpu/thirdparty/onednn_gpu  # [win64 or linux64]\n  - url: https://github.com/opencv/ade/archive/58b2595a1a95cc807be8bf6222f266a9a1f393a9.tar.gz\n    sha256: db7759cc32107e713b9e503ddf71a54ba2c80de07daefcb1aa315507e706ce07\n    folder: thirdparty/ade\n  - url: https://github.com/onnx/onnx/archive/refs/tags/v1.13.1.tar.gz\n    sha256: 090d3e10ec662a98a2a72f1bf053f793efc645824f0d4b779e0ce47468a0890e\n    folder: thirdparty/onnx/onnx\n\nbuild:\n  number: 3\n  run_exports:\n    - {{ pin_subpackage('libopenvino', max_pin='x.x.x') }}\n    - {{ pin_subpackage('libopenvino-intel-cpu-plugin', max_pin='x.x.x') }}  # [x86_64]\n    - {{ pin_subpackage('libopenvino-arm-cpu-plugin', max_pin='x.x.x') }}  # [aarch64 or arm64]\n    - {{ pin_subpackage('libopenvino-intel-gpu-plugin', max_pin='x.x.x') }}  # [win64 or linux64]\n    - {{ pin_subpackage('libopenvino-auto-plugin', max_pin='x.x.x') }}\n    - {{ pin_subpackage('libopenvino-hetero-plugin', max_pin='x.x.x') }}\n    - {{ pin_subpackage('libopenvino-auto-batch-plugin', max_pin='x.x.x') }}\n    - {{ pin_subpackage('libopenvino-ir-frontend', max_pin='x.x.x') }}\n    - {{ pin_subpackage('libopenvino-onnx-frontend', max_pin='x.x.x') }}\n    - {{ pin_subpackage('libopenvino-paddle-frontend', max_pin='x.x.x') }}\n    - {{ pin_subpackage('libopenvino-pytorch-frontend', max_pin='x.x.x') }}\n    - {{ pin_subpackage('libopenvino-tensorflow-frontend', max_pin='x.x.x') }}\n    - {{ pin_subpackage('libopenvino-tensorflow-lite-frontend', max_pin='x.x.x') }}\n  ignore_run_exports_from:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - tbb-devel # libopenvino and libopenvino-*-plugin already depend on tbb\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - git\n    - ninja\n    - pkg-config # to generate openvino.pc on macOS\n    - scons  # [aarch64 or arm64]\n    - cmake >=3.15 # to have new cmake cmd interface (-S, --install and other options)\n    - python >=3.7\n    - libprotobuf =3.20.3 # for protoc compiler, libraries are used from libprotobuf-static\n    - flatbuffers =23.3.3\n    - sysroot_linux-64 =2.17  # [linux64]\n  host:\n    - tbb-devel =2021.5 # starting from this version TBB uses hwloc in conda\n    - snappy\n    - ocl-icd  # [linux64]\n    - clhpp  # [linux64 or win64]\n    - khronos-opencl-icd-loader  # [win64]\n    - pugixml >=1.12.1 # starting from this version shared libraries are provided\n    - xbyak >=6.69.1  # [x86_64]\n    - libprotobuf-static =3.20.3  # [not win64]\n    - libprotobuf-static  # [win64]\n  run:\n    - {{ pin_subpackage('libopenvino', max_pin='x.x.x') }}\n    - {{ pin_subpackage('libopenvino-intel-cpu-plugin', max_pin='x.x.x') }}  # [x86_64]\n    - {{ pin_subpackage('libopenvino-arm-cpu-plugin', max_pin='x.x.x') }}  # [aarch64 or arm64]\n    - {{ pin_subpackage('libopenvino-intel-gpu-plugin', max_pin='x.x.x') }}  # [win64 or linux64]\n    - {{ pin_subpackage('libopenvino-auto-plugin', max_pin='x.x.x') }}\n    - {{ pin_subpackage('libopenvino-hetero-plugin', max_pin='x.x.x') }}\n    - {{ pin_subpackage('libopenvino-auto-batch-plugin', max_pin='x.x.x') }}\n    - {{ pin_subpackage('libopenvino-ir-frontend', max_pin='x.x.x') }}\n    - {{ pin_subpackage('libopenvino-onnx-frontend', max_pin='x.x.x') }}\n    - {{ pin_subpackage('libopenvino-paddle-frontend', max_pin='x.x.x') }}\n    - {{ pin_subpackage('libopenvino-pytorch-frontend', max_pin='x.x.x') }}\n    - {{ pin_subpackage('libopenvino-tensorflow-frontend', max_pin='x.x.x') }}\n    - {{ pin_subpackage('libopenvino-tensorflow-lite-frontend', max_pin='x.x.x') }}\n\ntest:\n  requires:\n    - {{ compiler('cxx') }}\n    - {{ compiler('c') }}\n    - ninja\n    - cmake >=3.15 # to have new cmake cmd interface (-S, --install and other options)\n    - pkg-config # to find zlib\n    - zlib\n    - nlohmann_json\n    - sysroot_linux-64 =2.17  # [linux64]\n    - tbb-devel =2021.5 # starting from this version TBB uses hwloc in conda\n    - opencv\n    - gflags\n  source_files:\n    - samples\n    - thirdparty/cnpy\n  files:\n    - snippets/\n  commands:\n    - export MACOSX_DEPLOYMENT_TARGET={{ MACOSX_DEPLOYMENT_TARGET }}  # [osx]\n    - export CMAKE_GENERATOR=Ninja  # [unix]\n\n    # check libraries (symlinks)\n    {% set openvino_libs = [] %}\n    {{ openvino_libs.append(\"\") or \"\" }}\n    {{ openvino_libs.append(\"_c\") or \"\" }}\n    {{ openvino_libs.append(\"_paddle_frontend\") or \"\" }}\n    {{ openvino_libs.append(\"_pytorch_frontend\") or \"\" }}\n    {{ openvino_libs.append(\"_onnx_frontend\") or \"\" }}\n    {{ openvino_libs.append(\"_tensorflow_frontend\") or \"\" }}\n    {{ openvino_libs.append(\"_tensorflow_lite_frontend\") or \"\" }}\n    {% for openvino_lib in openvino_libs %}\n    - test -f $PREFIX/lib/libopenvino{{ openvino_lib }}${SHLIB_EXT}  # [unix]\n    - if not exist %LIBRARY_BIN%\\\\openvino{{ openvino_lib }}%SHLIB_EXT% exit 1  # [win]\n    {% endfor %}\n\n    # C++ samples on Unix\n    - mkdir -p samples/cpp/thirdparty  # [unix]\n    - cp -R thirdparty/cnpy samples/cpp/thirdparty/cnpy  # [unix]\n    - cmake -S samples/cpp -B samples_cpp_build -DBIN_FOLDER=bin  # [unix]\n    - cmake --build samples_cpp_build --config Release --verbose  # [unix]\n    - ./samples_cpp_build/bin/hello_query_device  # [unix]\n\n    # C samples on Unix\n    - cp samples/cpp/CMakeLists.txt samples/c/CMakeLists.txt  # [unix]\n    - cmake -S samples/c -B samples_c_build -DBIN_FOLDER=bin  # [unix]\n    - cmake --build samples_c_build --config Release --verbose  # [unix]\n\n    # C++ samples on Windows\n    - mkdir -p samples\\\\cpp\\\\thirdparty  # [win]\n    - cp -R thirdparty\\\\cnpy samples\\\\cpp\\\\thirdparty\\\\cnpy  # [win]\n    - cmake -S samples\\\\cpp -B samples_cpp_build -DBIN_FOLDER=bin  # [win]\n    - cmake --build samples_cpp_build --config Release --verbose  # [win]\n    - .\\\\samples_cpp_build\\\\bin\\\\Release\\\\hello_query_device.exe  # [win]\n\n    # C samples on Windows\n    - cp samples\\\\cpp\\\\CMakeLists.txt samples\\\\c\\\\CMakeLists.txt  # [win]\n    - cmake -S samples\\\\c -B samples_c_build -DBIN_FOLDER=bin  # [win]\n    - cmake --build samples_c_build --config Release --verbose  # [win]\n\n    # check that devices are found using OpenVINO C API\n    - $CC snippets/openvino_available_devices.c $(pkg-config --cflags --libs pugixml tbb openvino) -Wl,-rpath,$PREFIX/lib -o openvino_devices_test  # [unix]\n    - if [[ $(./openvino_devices_test) != \"passed\" ]]; then exit 1 ; fi  # [unix]\n\n    # check that frontends are found using OpenVINO C++ API\n    - cmake -S snippets -B snippets_build\n    - cmake --build snippets_build --config Release --verbose\n    - if [[ $(./snippets_build/openvino_frontends_test) != 6 ]]; then exit 1 ; fi  # [unix]\n\n\noutputs:\n  - name: libopenvino\n    version: {{ version }}\n    script: install/install.sh\n    about:\n      summary: OpenVINO Core Runtime library\n      license_file:\n        - LICENSE\n        - third-party-programs.txt\n        - onednn_third-party-programs.txt\n        - runtime-third-party-programs.txt\n    build:\n      run_exports:\n        - {{ pin_subpackage('libopenvino', max_pin='x.x.x') }}\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - {{ compiler('c') }}\n        - cmake >=3.15 # to have new cmake cmd interface (-S, --install and other options)\n      host:\n        - pugixml >=1.12.1 # starting from this version shared libraries are provided\n        - tbb-devel =2021.5  # starting from this version TBB uses hwloc in conda\n    test:\n      commands:\n        {% set openvino_libs = [] %}\n        {{ openvino_libs.append(\"\") or \"\" }}\n        {{ openvino_libs.append(\"_c\") or \"\" }}\n        {% for openvino_lib in openvino_libs %}\n        - test -f $PREFIX/lib/libopenvino{{ openvino_lib }}${SHLIB_EXT}.{{ version }}  # [linux]\n        - test -f $PREFIX/lib/libopenvino{{ openvino_lib }}.{{ version }}${SHLIB_EXT}  # [osx]\n        - if not exist %LIBRARY_BIN%\\\\openvino{{ openvino_lib }}%SHLIB_EXT% exit 1  # [win]\n        {% endfor %}\n\n  - name: libopenvino-ir-frontend\n    version: {{ version }}\n    script: install/install_ir.sh\n    about:\n      summary: OpenVINO IR Frontend\n      license_file:\n        - LICENSE\n        - third-party-programs.txt\n        - onednn_third-party-programs.txt\n        - runtime-third-party-programs.txt\n    build:\n      run_exports:\n        - {{ pin_subpackage('libopenvino', max_pin='x.x.x') }}\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - {{ compiler('c') }}\n        - cmake >=3.15 # to have new cmake cmd interface (-S, --install and other options)\n      host:\n        - pugixml >=1.12.1 # starting from this version shared libraries are provided\n        - {{ pin_subpackage('libopenvino', exact=True) }}\n      run:\n        - {{ pin_subpackage('libopenvino', exact=True) }}\n    test:\n      commands:\n        - test -f $PREFIX/lib/libopenvino_ir_frontend${SHLIB_EXT}.{{ version }}  # [linux]\n        - test -f $PREFIX/lib/libopenvino_ir_frontend.{{ version }}${SHLIB_EXT}  # [osx]\n        - if not exist %LIBRARY_BIN%\\\\openvino_ir_frontend%SHLIB_EXT% exit 1  # [win]\n\n  - name: libopenvino-onnx-frontend\n    version: {{ version }}\n    script: install/install_onnx.sh\n    about:\n      summary: OpenVINO ONNX Frontend\n      license_file:\n        - LICENSE\n        - third-party-programs.txt\n        - onednn_third-party-programs.txt\n        - runtime-third-party-programs.txt\n    build:\n      run_exports:\n        - {{ pin_subpackage('libopenvino', max_pin='x.x.x') }}\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - {{ compiler('c') }}\n        - cmake >=3.15 # to have new cmake cmd interface (-S, --install and other options)\n      host:\n        - {{ pin_subpackage('libopenvino', exact=True) }}\n      run:\n        - {{ pin_subpackage('libopenvino', exact=True) }}\n    test:\n      commands:\n        - test -f $PREFIX/lib/libopenvino_onnx_frontend${SHLIB_EXT}.{{ version }}  # [linux]\n        - test -f $PREFIX/lib/libopenvino_onnx_frontend.{{ version }}${SHLIB_EXT}  # [osx]\n        - if not exist %LIBRARY_BIN%\\\\openvino_onnx_frontend%SHLIB_EXT% exit 1  # [win]\n\n  - name: libopenvino-paddle-frontend\n    version: {{ version }}\n    script: install/install_paddle.sh\n    about:\n      summary: OpenVINO Paddle Frontend\n      license_file:\n        - LICENSE\n        - third-party-programs.txt\n        - onednn_third-party-programs.txt\n        - runtime-third-party-programs.txt\n    build:\n      run_exports:\n        - {{ pin_subpackage('libopenvino', max_pin='x.x.x') }}\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - {{ compiler('c') }}\n        - cmake >=3.15 # to have new cmake cmd interface (-S, --install and other options)\n      host:\n        - {{ pin_subpackage('libopenvino', exact=True) }}\n      run:\n        - {{ pin_subpackage('libopenvino', exact=True) }}\n    test:\n      commands:\n        - test -f $PREFIX/lib/libopenvino_paddle_frontend${SHLIB_EXT}.{{ version }}  # [linux]\n        - test -f $PREFIX/lib/libopenvino_paddle_frontend.{{ version }}${SHLIB_EXT}  # [osx]\n        - if not exist %LIBRARY_BIN%\\\\openvino_paddle_frontend%SHLIB_EXT% exit 1  # [win]\n\n  - name: libopenvino-pytorch-frontend\n    version: {{ version }}\n    script: install/install_pytorch.sh\n    about:\n      summary: OpenVINO Pytorch Frontend\n      license_file:\n        - LICENSE\n        - third-party-programs.txt\n        - onednn_third-party-programs.txt\n        - runtime-third-party-programs.txt\n    build:\n      run_exports:\n        - {{ pin_subpackage('libopenvino', max_pin='x.x.x') }}\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - {{ compiler('c') }}\n        - cmake >=3.15 # to have new cmake cmd interface (-S, --install and other options)\n      host:\n        - {{ pin_subpackage('libopenvino', exact=True) }}\n      run:\n        - {{ pin_subpackage('libopenvino', exact=True) }}\n    test:\n      commands:\n        - test -f $PREFIX/lib/libopenvino_pytorch_frontend${SHLIB_EXT}.{{ version }}  # [linux]\n        - test -f $PREFIX/lib/libopenvino_pytorch_frontend.{{ version }}${SHLIB_EXT}  # [osx]\n        - if not exist %LIBRARY_BIN%\\\\openvino_pytorch_frontend%SHLIB_EXT% exit 1  # [win]\n\n  - name: libopenvino-tensorflow-frontend\n    version: {{ version }}\n    script: install/install_tensorflow.sh\n    about:\n      summary: OpenVINO TensorFlow Frontend\n      license_file:\n        - LICENSE\n        - third-party-programs.txt\n        - onednn_third-party-programs.txt\n        - runtime-third-party-programs.txt\n    build:\n      run_exports:\n        - {{ pin_subpackage('libopenvino', max_pin='x.x.x') }}\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - {{ compiler('c') }}\n        - cmake >=3.15 # to have new cmake cmd interface (-S, --install and other options)\n      host:\n        - {{ pin_subpackage('libopenvino', exact=True) }}\n        - snappy =1.1.10\n      run:\n        - {{ pin_subpackage('libopenvino', exact=True) }}\n    test:\n      commands:\n        - test -f $PREFIX/lib/libopenvino_tensorflow_frontend${SHLIB_EXT}.{{ version }}  # [linux]\n        - test -f $PREFIX/lib/libopenvino_tensorflow_frontend.{{ version }}${SHLIB_EXT}  # [osx]\n        - if not exist %LIBRARY_BIN%\\\\openvino_tensorflow_frontend%SHLIB_EXT% exit 1  # [win]\n\n  - name: libopenvino-tensorflow-lite-frontend\n    version: {{ version }}\n    script: install/install_tensorflow_lite.sh\n    about:\n      summary: OpenVINO TensorFlow Lite Frontend\n      license_file:\n        - LICENSE\n        - third-party-programs.txt\n        - onednn_third-party-programs.txt\n        - runtime-third-party-programs.txt\n    build:\n      run_exports:\n        - {{ pin_subpackage('libopenvino', max_pin='x.x.x') }}\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - {{ compiler('c') }}\n        - cmake >=3.15 # to have new cmake cmd interface (-S, --install and other options)\n      host:\n        - {{ pin_subpackage('libopenvino', exact=True) }}\n      run:\n        - {{ pin_subpackage('libopenvino', exact=True) }}\n    test:\n      commands:\n        - test -f $PREFIX/lib/libopenvino_tensorflow_lite_frontend${SHLIB_EXT}.{{ version }}  # [linux]\n        - test -f $PREFIX/lib/libopenvino_tensorflow_lite_frontend.{{ version }}${SHLIB_EXT}  # [osx]\n        - if not exist %LIBRARY_BIN%\\\\openvino_tensorflow_lite_frontend%SHLIB_EXT% exit 1  # [win]\n\n  - name: libopenvino-intel-cpu-plugin\n    version: {{ version }}\n    script: install/install_cpu.sh\n    about:\n      summary: OpenVINO Intel\u00AE CPU plugin\n      license_file:\n        - LICENSE\n        - third-party-programs.txt\n        - onednn_third-party-programs.txt\n        - runtime-third-party-programs.txt\n    build:\n      skip: True  # [not x86_64]\n      run_exports:\n        - {{ pin_subpackage('libopenvino-intel-cpu-plugin', max_pin='x.x.x') }}\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - {{ compiler('c') }}\n        - cmake >=3.15 # to have new cmake cmd interface (-S, --install and other options)\n      host:\n        - pugixml >=1.12.1 # starting from this version shared libraries are provided\n        - tbb-devel =2021.5 # starting from this version TBB uses hwloc in conda\n        - {{ pin_subpackage('libopenvino', exact=True) }}\n      run:\n        - {{ pin_subpackage('libopenvino', exact=True) }}\n    test:\n      commands:\n        - test -f $PREFIX/lib/openvino-{{ version }}/libopenvino_intel_cpu_plugin.so  # [unix]\n        - if not exist %LIBRARY_BIN%\\\\openvino-{{ version }}\\\\openvino_intel_cpu_plugin%SHLIB_EXT% exit 1  # [win]\n\n  - name: libopenvino-arm-cpu-plugin\n    version: {{ version }}\n    script: install/install_cpu.sh\n    about:\n      summary: OpenVINO ARM\u00AE CPU plugin\n      license_file:\n        - LICENSE\n        - third-party-programs.txt\n        - onednn_third-party-programs.txt\n        - runtime-third-party-programs.txt\n    build:\n      skip: True  # [not aarch64 and not arm64]\n      run_exports:\n        - {{ pin_subpackage('libopenvino-arm-cpu-plugin', max_pin='x.x.x') }}\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - {{ compiler('c') }}\n        - cmake >=3.15 # to have new cmake cmd interface (-S, --install and other options)\n      host:\n        - pugixml >=1.12.1 # starting from this version shared libraries are provided\n        - tbb-devel =2021.5 # starting from this version TBB uses hwloc in conda\n        - {{ pin_subpackage('libopenvino', exact=True) }}\n      run:\n        - {{ pin_subpackage('libopenvino', exact=True) }}\n    test:\n      commands:\n        - test -f $PREFIX/lib/openvino-{{ version }}/libopenvino_arm_cpu_plugin.so\n\n  - name: libopenvino-intel-gpu-plugin\n    version: {{ version }}\n    script: install/install_gpu.sh\n    about:\n      summary: OpenVINO Intel\u00AE GPU plugin\n      license_file:\n        - LICENSE\n        - third-party-programs.txt\n        - onednn_third-party-programs.txt\n        - runtime-third-party-programs.txt\n    build:\n      skip: True  # [not linux64 and not win64]\n      run_exports:\n        - {{ pin_subpackage('libopenvino-intel-gpu-plugin', max_pin='x.x.x') }}\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - {{ compiler('c') }}\n        - cmake >=3.15 # to have new cmake cmd interface (-S, --install and other options)\n      host:\n        - tbb-devel =2021.5 # starting from this version TBB uses hwloc in conda\n        - ocl-icd  # [linux64]\n        - clhpp\n        - khronos-opencl-icd-loader  # [win64]\n        - pugixml >=1.12.1 # starting from this version shared libraries are provided\n        - {{ pin_subpackage('libopenvino', exact=True) }}\n      run:\n        - {{ pin_subpackage('libopenvino', exact=True) }}\n        - ocl-icd-system  # [linux64]\n    test:\n      commands:\n        - test -f $PREFIX/lib/openvino-{{ version }}/libopenvino_intel_gpu_plugin.so  # [unix]\n        - if not exist %LIBRARY_BIN%\\\\openvino-{{ version }}\\\\openvino_intel_gpu_plugin%SHLIB_EXT% exit 1  # [win]\n\n  - name: libopenvino-auto-plugin\n    version: {{ version }}\n    script: install/install_auto.sh\n    about:\n      summary: OpenVINO Auto plugin\n      license_file:\n        - LICENSE\n        - third-party-programs.txt\n        - onednn_third-party-programs.txt\n        - runtime-third-party-programs.txt\n    build:\n      run_exports:\n        - {{ pin_subpackage('libopenvino-auto-plugin', max_pin='x.x.x') }}\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - {{ compiler('c') }}\n        - cmake >=3.15 # to have new cmake cmd interface (-S, --install and other options)\n      host:\n        - tbb-devel =2021.5 # starting from this version TBB uses hwloc in conda\n        - {{ pin_subpackage('libopenvino', exact=True) }}\n      run:\n        - {{ pin_subpackage('libopenvino', exact=True) }}\n    test:\n      commands:\n        - test -f $PREFIX/lib/openvino-{{ version }}/libopenvino_auto_plugin.so  # [unix]\n        - if not exist %LIBRARY_BIN%\\\\openvino-{{ version }}\\\\openvino_auto_plugin%SHLIB_EXT% exit 1  # [win]\n\n  - name: libopenvino-auto-batch-plugin\n    version: {{ version }}\n    script: install/install_batch.sh\n    about:\n      summary: OpenVINO Auto Batch plugin\n      license_file:\n        - LICENSE\n        - third-party-programs.txt\n        - onednn_third-party-programs.txt\n        - runtime-third-party-programs.txt\n    build:\n      run_exports:\n        - {{ pin_subpackage('libopenvino-auto-batch-plugin', max_pin='x.x.x') }}\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - {{ compiler('c') }}\n        - cmake >=3.15 # to have new cmake cmd interface (-S, --install and other options)\n      host:\n        - {{ pin_subpackage('libopenvino', exact=True) }}\n      run:\n        - {{ pin_subpackage('libopenvino', exact=True) }}\n    test:\n      commands:\n        - test -f $PREFIX/lib/openvino-{{ version }}/libopenvino_auto_batch_plugin.so  # [unix]\n        - if not exist %LIBRARY_BIN%\\\\openvino-{{ version }}\\\\openvino_auto_batch_plugin%SHLIB_EXT% exit 1  # [win]\n\n  - name: libopenvino-hetero-plugin\n    version: {{ version }}\n    script: install/install_hetero.sh\n    about:\n      summary: OpenVINO Hetero plugin\n      license_file:\n        - LICENSE\n        - third-party-programs.txt\n        - onednn_third-party-programs.txt\n        - runtime-third-party-programs.txt\n    build:\n      run_exports:\n        - {{ pin_subpackage('libopenvino-hetero-plugin', max_pin='x.x.x') }}\n    requirements:\n      build:\n        - {{ compiler('cxx') }}\n        - {{ compiler('c') }}\n        - cmake >=3.15 # to have new cmake cmd interface (-S, --install and other options)\n      host:\n        - pugixml >=1.12.1 # starting from this version shared libraries are provided\n        - {{ pin_subpackage('libopenvino', exact=True) }}\n      run:\n        - {{ pin_subpackage('libopenvino', exact=True) }}\n    test:\n      commands:\n        - test -f $PREFIX/lib/openvino-{{ version }}/libopenvino_hetero_plugin.so  # [unix]\n        - if not exist %LIBRARY_BIN%\\\\openvino-{{ version }}\\\\openvino_hetero_plugin%SHLIB_EXT% exit 1  # [win]\n\n  - name: openvino\n    script: install/install_dev.sh\n\nabout:\n  home: https://github.com/openvinotoolkit/openvino\n  summary: 'Intel\u00AE Distribution of OpenVINO\u2122 Toolkit'\n  description: |\n    Intel\u00AE Distribution of OpenVINO\u2122 toolkit is an open-source toolkit for\n    optimizing and deploying AI inference. It can be used to develop\n    applications and solutions based on deep learning tasks, such as:\n    emulation of human vision, automatic speech recognition, natural\n    language processing, recommendation systems, etc. It provides\n    high-performance and rich deployment options, from edge to cloud\n\n    Installing OpenVINO Runtime from Conda Forge is recommended for C++ developers,\n    as it provides only the C++ / C Runtime API.\n    If you work with Python, consider other OpenVINO distribution channels:\n    https://www.intel.com/content/www/us/en/developer/tools/openvino-toolkit/download.html\n  license: Apache-2.0\n  license_family: Apache\n  license_file:\n    - LICENSE\n    - third-party-programs.txt\n    - onednn_third-party-programs.txt\n    - runtime-third-party-programs.txt\n  doc_url: https://docs.openvino.ai/latest/index.html\n  dev_url: https://github.com/openvinotoolkit/openvino\n\nextra:\n  recipe-maintainers:\n    - ilya-lavrenov\n    - artanokhov\n    - evgenytalanin-intel\n    - RaguzovaTatyana\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "clhpp",
   "cmake",
   "cxx_compiler_stub",
   "flatbuffers",
   "git",
   "khronos-opencl-icd-loader",
   "libopenvino",
   "libopenvino-arm-cpu-plugin",
   "libopenvino-auto-batch-plugin",
   "libopenvino-auto-plugin",
   "libopenvino-hetero-plugin",
   "libopenvino-intel-cpu-plugin",
   "libopenvino-intel-gpu-plugin",
   "libopenvino-ir-frontend",
   "libopenvino-onnx-frontend",
   "libopenvino-paddle-frontend",
   "libopenvino-pytorch-frontend",
   "libopenvino-tensorflow-frontend",
   "libopenvino-tensorflow-lite-frontend",
   "libprotobuf",
   "libprotobuf-static",
   "ninja",
   "ocl-icd",
   "ocl-icd-system",
   "pkg-config",
   "pugixml",
   "python",
   "scons",
   "snappy",
   "sysroot_linux-64",
   "tbb-devel",
   "xbyak"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "flatbuffers",
    "git",
    "libprotobuf",
    "ninja",
    "pkg-config",
    "python",
    "scons",
    "sysroot_linux-64"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "clhpp",
    "cxx_compiler_stub",
    "khronos-opencl-icd-loader",
    "libopenvino",
    "libprotobuf-static",
    "ocl-icd",
    "pugixml",
    "snappy",
    "tbb-devel",
    "xbyak"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "libopenvino",
    "libopenvino-arm-cpu-plugin",
    "libopenvino-auto-batch-plugin",
    "libopenvino-auto-plugin",
    "libopenvino-hetero-plugin",
    "libopenvino-intel-cpu-plugin",
    "libopenvino-intel-gpu-plugin",
    "libopenvino-ir-frontend",
    "libopenvino-onnx-frontend",
    "libopenvino-paddle-frontend",
    "libopenvino-pytorch-frontend",
    "libopenvino-tensorflow-frontend",
    "libopenvino-tensorflow-lite-frontend",
    "ocl-icd-system"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "gflags",
    "ninja",
    "nlohmann_json",
    "opencv",
    "pkg-config",
    "sysroot_linux-64",
    "tbb-devel",
    "zlib"
   ]
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake >=3.15",
    "cxx_compiler_stub",
    "flatbuffers =23.3.3",
    "git",
    "libprotobuf =3.20.3",
    "ninja",
    "pkg-config",
    "python >=3.7",
    "scons",
    "sysroot_linux-64 =2.17"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "clhpp",
    "khronos-opencl-icd-loader",
    "libopenvino",
    "libprotobuf-static",
    "libprotobuf-static =3.20.3",
    "ocl-icd",
    "pugixml >=1.12.1",
    "snappy",
    "snappy =1.1.10",
    "tbb-devel =2021.5",
    "xbyak >=6.69.1"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "libopenvino",
    "libopenvino-arm-cpu-plugin",
    "libopenvino-auto-batch-plugin",
    "libopenvino-auto-plugin",
    "libopenvino-hetero-plugin",
    "libopenvino-intel-cpu-plugin",
    "libopenvino-intel-gpu-plugin",
    "libopenvino-ir-frontend",
    "libopenvino-onnx-frontend",
    "libopenvino-paddle-frontend",
    "libopenvino-pytorch-frontend",
    "libopenvino-tensorflow-frontend",
    "libopenvino-tensorflow-lite-frontend",
    "ocl-icd-system"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake >=3.15",
    "cxx_compiler_stub",
    "gflags",
    "ninja",
    "nlohmann_json",
    "opencv",
    "pkg-config",
    "sysroot_linux-64 =2.17",
    "tbb-devel =2021.5",
    "zlib"
   ]
  }
 },
 "url": "https://github.com/openvinotoolkit/openvino/archive/refs/tags/2023.0.1.tar.gz",
 "version": "2023.0.1",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/openvino.json"
 },
 "win_64_meta_yaml": {
  "about": {
   "description": "Intel\u00AE Distribution of OpenVINO\u2122 toolkit is an open-source toolkit for\noptimizing and deploying AI inference. It can be used to develop\napplications and solutions based on deep learning tasks, such as:\nemulation of human vision, automatic speech recognition, natural\nlanguage processing, recommendation systems, etc. It provides\nhigh-performance and rich deployment options, from edge to cloud\n\nInstalling OpenVINO Runtime from Conda Forge is recommended for C++ developers,\nas it provides only the C++ / C Runtime API.\nIf you work with Python, consider other OpenVINO distribution channels:\nhttps://www.intel.com/content/www/us/en/developer/tools/openvino-toolkit/download.html\n",
   "dev_url": "https://github.com/openvinotoolkit/openvino",
   "doc_url": "https://docs.openvino.ai/latest/index.html",
   "home": "https://github.com/openvinotoolkit/openvino",
   "license": "Apache-2.0",
   "license_family": "Apache",
   "license_file": [
    "LICENSE",
    "third-party-programs.txt",
    "onednn_third-party-programs.txt",
    "runtime-third-party-programs.txt"
   ],
   "summary": "Intel\u00AE Distribution of OpenVINO\u2122 Toolkit"
  },
  "build": {
   "ignore_run_exports_from": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "tbb-devel"
   ],
   "number": "3",
   "run_exports": [
    "libopenvino",
    "libopenvino-intel-cpu-plugin",
    "libopenvino-intel-gpu-plugin",
    "libopenvino-auto-plugin",
    "libopenvino-hetero-plugin",
    "libopenvino-auto-batch-plugin",
    "libopenvino-ir-frontend",
    "libopenvino-onnx-frontend",
    "libopenvino-paddle-frontend",
    "libopenvino-pytorch-frontend",
    "libopenvino-tensorflow-frontend",
    "libopenvino-tensorflow-lite-frontend"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "ilya-lavrenov",
    "artanokhov",
    "evgenytalanin-intel",
    "RaguzovaTatyana"
   ]
  },
  "outputs": [
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Core Runtime library"
    },
    "build": {
     "run_exports": [
      "libopenvino"
     ]
    },
    "name": "libopenvino",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml >=1.12.1",
      "tbb-devel =2021.5"
     ]
    },
    "script": "install/install.sh",
    "test": {
     "commands": [
      "if not exist %LIBRARY_BIN%\\\\openvino%SHLIB_EXT% exit 1",
      "if not exist %LIBRARY_BIN%\\\\openvino_c%SHLIB_EXT% exit 1"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO IR Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino"
     ]
    },
    "name": "libopenvino-ir-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml >=1.12.1",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_ir.sh",
    "test": {
     "commands": [
      "if not exist %LIBRARY_BIN%\\\\openvino_ir_frontend%SHLIB_EXT% exit 1"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO ONNX Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino"
     ]
    },
    "name": "libopenvino-onnx-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_onnx.sh",
    "test": {
     "commands": [
      "if not exist %LIBRARY_BIN%\\\\openvino_onnx_frontend%SHLIB_EXT% exit 1"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Paddle Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino"
     ]
    },
    "name": "libopenvino-paddle-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_paddle.sh",
    "test": {
     "commands": [
      "if not exist %LIBRARY_BIN%\\\\openvino_paddle_frontend%SHLIB_EXT% exit 1"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Pytorch Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino"
     ]
    },
    "name": "libopenvino-pytorch-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_pytorch.sh",
    "test": {
     "commands": [
      "if not exist %LIBRARY_BIN%\\\\openvino_pytorch_frontend%SHLIB_EXT% exit 1"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO TensorFlow Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino"
     ]
    },
    "name": "libopenvino-tensorflow-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libopenvino",
      "snappy =1.1.10"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_tensorflow.sh",
    "test": {
     "commands": [
      "if not exist %LIBRARY_BIN%\\\\openvino_tensorflow_frontend%SHLIB_EXT% exit 1"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO TensorFlow Lite Frontend"
    },
    "build": {
     "run_exports": [
      "libopenvino"
     ]
    },
    "name": "libopenvino-tensorflow-lite-frontend",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_tensorflow_lite.sh",
    "test": {
     "commands": [
      "if not exist %LIBRARY_BIN%\\\\openvino_tensorflow_lite_frontend%SHLIB_EXT% exit 1"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Intel\u00AE CPU plugin"
    },
    "build": {
     "run_exports": [
      "libopenvino-intel-cpu-plugin"
     ]
    },
    "name": "libopenvino-intel-cpu-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml >=1.12.1",
      "tbb-devel =2021.5",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_cpu.sh",
    "test": {
     "commands": [
      "if not exist %LIBRARY_BIN%\\\\openvino-2023.0.1\\\\openvino_intel_cpu_plugin%SHLIB_EXT% exit 1"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO ARM\u00AE CPU plugin"
    },
    "build": {
     "run_exports": [
      "libopenvino-arm-cpu-plugin"
     ],
     "skip": true
    },
    "name": "libopenvino-arm-cpu-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml >=1.12.1",
      "tbb-devel =2021.5",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_cpu.sh",
    "test": {
     "commands": [
      "test -f $PREFIX/lib/openvino-2023.0.1/libopenvino_arm_cpu_plugin.so"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Intel\u00AE GPU plugin"
    },
    "build": {
     "run_exports": [
      "libopenvino-intel-gpu-plugin"
     ]
    },
    "name": "libopenvino-intel-gpu-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "tbb-devel =2021.5",
      "clhpp",
      "khronos-opencl-icd-loader",
      "pugixml >=1.12.1",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_gpu.sh",
    "test": {
     "commands": [
      "if not exist %LIBRARY_BIN%\\\\openvino-2023.0.1\\\\openvino_intel_gpu_plugin%SHLIB_EXT% exit 1"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Auto plugin"
    },
    "build": {
     "run_exports": [
      "libopenvino-auto-plugin"
     ]
    },
    "name": "libopenvino-auto-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "tbb-devel =2021.5",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_auto.sh",
    "test": {
     "commands": [
      "if not exist %LIBRARY_BIN%\\\\openvino-2023.0.1\\\\openvino_auto_plugin%SHLIB_EXT% exit 1"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Auto Batch plugin"
    },
    "build": {
     "run_exports": [
      "libopenvino-auto-batch-plugin"
     ]
    },
    "name": "libopenvino-auto-batch-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_batch.sh",
    "test": {
     "commands": [
      "if not exist %LIBRARY_BIN%\\\\openvino-2023.0.1\\\\openvino_auto_batch_plugin%SHLIB_EXT% exit 1"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "about": {
     "license_file": [
      "LICENSE",
      "third-party-programs.txt",
      "onednn_third-party-programs.txt",
      "runtime-third-party-programs.txt"
     ],
     "summary": "OpenVINO Hetero plugin"
    },
    "build": {
     "run_exports": [
      "libopenvino-hetero-plugin"
     ]
    },
    "name": "libopenvino-hetero-plugin",
    "requirements": {
     "build": [
      "cxx_compiler_stub",
      "c_compiler_stub",
      "cmake >=3.15"
     ],
     "host": [
      "pugixml >=1.12.1",
      "libopenvino"
     ],
     "run": [
      "libopenvino"
     ]
    },
    "script": "install/install_hetero.sh",
    "test": {
     "commands": [
      "if not exist %LIBRARY_BIN%\\\\openvino-2023.0.1\\\\openvino_hetero_plugin%SHLIB_EXT% exit 1"
     ]
    },
    "version": "2023.0.1"
   },
   {
    "name": "openvino",
    "script": "install/install_dev.sh"
   }
  ],
  "package": {
   "name": "openvino",
   "version": "2023.0.1"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "git",
    "ninja",
    "pkg-config",
    "cmake >=3.15",
    "python >=3.7",
    "libprotobuf =3.20.3",
    "flatbuffers =23.3.3"
   ],
   "host": [
    "tbb-devel =2021.5",
    "snappy",
    "clhpp",
    "khronos-opencl-icd-loader",
    "pugixml >=1.12.1",
    "xbyak >=6.69.1",
    "libprotobuf-static"
   ],
   "run": [
    "libopenvino",
    "libopenvino-intel-cpu-plugin",
    "libopenvino-intel-gpu-plugin",
    "libopenvino-auto-plugin",
    "libopenvino-hetero-plugin",
    "libopenvino-auto-batch-plugin",
    "libopenvino-ir-frontend",
    "libopenvino-onnx-frontend",
    "libopenvino-paddle-frontend",
    "libopenvino-pytorch-frontend",
    "libopenvino-tensorflow-frontend",
    "libopenvino-tensorflow-lite-frontend"
   ]
  },
  "source": [
   {
    "patches": [
     "patches/001-win64-find-ocl.patch",
     "patches/005-cross-compilation-macos.patch",
     "patches/006-remove-mp.patch"
    ],
    "sha256": "c14cb22f5191a75ea15659c62baceb71333dc9ecf62139ce513f3e81e4544651",
    "url": "https://github.com/openvinotoolkit/openvino/archive/refs/tags/2023.0.1.tar.gz"
   },
   {
    "folder": "thirdparty/xbyak",
    "sha256": "7eb64e2c18527824402b16f26c6118ba82f40f57fe6e3ab05c6e2883246a04f1",
    "url": "https://github.com/herumi/xbyak/archive/refs/tags/v6.69.tar.gz"
   },
   {
    "folder": "src/plugins/intel_cpu/thirdparty/onednn",
    "sha256": "52921b3efab33d1710971c67318e8c00ee102b6369e4e9cea8fdf91a1d68e38e",
    "url": "https://github.com/openvinotoolkit/oneDNN/archive/1c7bfabf1b26e6fb95fea1613e1d3d2bef1f6b54.tar.gz"
   },
   {
    "folder": "src/plugins/intel_gpu/thirdparty/onednn_gpu",
    "sha256": "da57c2298a8e001718902f0b65b6d92c4a7897b35467e23bc24996dde43ec47b",
    "url": "https://github.com/oneapi-src/oneDNN/archive/f27dedbfc093f51032a4580198bb80579440dc15.tar.gz"
   },
   {
    "folder": "thirdparty/ade",
    "sha256": "db7759cc32107e713b9e503ddf71a54ba2c80de07daefcb1aa315507e706ce07",
    "url": "https://github.com/opencv/ade/archive/58b2595a1a95cc807be8bf6222f266a9a1f393a9.tar.gz"
   },
   {
    "folder": "thirdparty/onnx/onnx",
    "sha256": "090d3e10ec662a98a2a72f1bf053f793efc645824f0d4b779e0ce47468a0890e",
    "url": "https://github.com/onnx/onnx/archive/refs/tags/v1.13.1.tar.gz"
   }
  ],
  "test": {
   "commands": [
    "if not exist %LIBRARY_BIN%\\\\openvino%SHLIB_EXT% exit 1",
    "if not exist %LIBRARY_BIN%\\\\openvino_c%SHLIB_EXT% exit 1",
    "if not exist %LIBRARY_BIN%\\\\openvino_paddle_frontend%SHLIB_EXT% exit 1",
    "if not exist %LIBRARY_BIN%\\\\openvino_pytorch_frontend%SHLIB_EXT% exit 1",
    "if not exist %LIBRARY_BIN%\\\\openvino_onnx_frontend%SHLIB_EXT% exit 1",
    "if not exist %LIBRARY_BIN%\\\\openvino_tensorflow_frontend%SHLIB_EXT% exit 1",
    "if not exist %LIBRARY_BIN%\\\\openvino_tensorflow_lite_frontend%SHLIB_EXT% exit 1",
    "mkdir -p samples\\\\cpp\\\\thirdparty",
    "cp -R thirdparty\\\\cnpy samples\\\\cpp\\\\thirdparty\\\\cnpy",
    "cmake -S samples\\\\cpp -B samples_cpp_build -DBIN_FOLDER=bin",
    "cmake --build samples_cpp_build --config Release --verbose",
    ".\\\\samples_cpp_build\\\\bin\\\\Release\\\\hello_query_device.exe",
    "cp samples\\\\cpp\\\\CMakeLists.txt samples\\\\c\\\\CMakeLists.txt",
    "cmake -S samples\\\\c -B samples_c_build -DBIN_FOLDER=bin",
    "cmake --build samples_c_build --config Release --verbose",
    "cmake -S snippets -B snippets_build",
    "cmake --build snippets_build --config Release --verbose"
   ],
   "files": [
    "snippets/"
   ],
   "requires": [
    "cxx_compiler_stub",
    "c_compiler_stub",
    "ninja",
    "cmake >=3.15",
    "pkg-config",
    "zlib",
    "nlohmann_json",
    "tbb-devel =2021.5",
    "opencv",
    "gflags"
   ],
   "source_files": [
    "samples",
    "thirdparty/cnpy"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "flatbuffers",
    "git",
    "libprotobuf",
    "ninja",
    "pkg-config",
    "python"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "clhpp",
    "khronos-opencl-icd-loader",
    "libopenvino",
    "libprotobuf-static",
    "pugixml",
    "snappy",
    "tbb-devel",
    "xbyak"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "libopenvino",
    "libopenvino-auto-batch-plugin",
    "libopenvino-auto-plugin",
    "libopenvino-hetero-plugin",
    "libopenvino-intel-cpu-plugin",
    "libopenvino-intel-gpu-plugin",
    "libopenvino-ir-frontend",
    "libopenvino-onnx-frontend",
    "libopenvino-paddle-frontend",
    "libopenvino-pytorch-frontend",
    "libopenvino-tensorflow-frontend",
    "libopenvino-tensorflow-lite-frontend"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "gflags",
    "ninja",
    "nlohmann_json",
    "opencv",
    "pkg-config",
    "tbb-devel",
    "zlib"
   ]
  }
 }
}